#Если НЕ ТонкийКлиент Тогда
      	
Функция IpПоИмени(Имя) Экспорт
	ИмяФайлаРезультата = Строка(Новый УникальныйИдентификатор);
	ПолноеИмяФайла = КаталогВременныхФайлов() + ИмяФайлаРезультата;
	Команда = СтрШаблон("ping %1 -n 1 -l 1", Имя);
	ир = ирКэш.Получить();
	ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда, КаталогВременныхФайлов(), , ИмяФайлаРезультата);
	РезультатПинга = РаботаСФайлами.ИзвлечьТекст(ПолноеИмяФайла, КодировкаТекста.OEM);
	RegExp = ир.RegExp;
	RegExp.Pattern = "(\d{1,3}\.){3}\d{1,3}";
	Matches = RegExp.Execute(РезультатПинга);
	Если Matches.Count Тогда
		ip = Matches.Item(0).value;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	Возврат ip;
КонецФункции

Функция ИмяПоIp(Ip) Экспорт
	ИмяКомпьютера = Ip;
	ир = ирКэш.Получить();
	//:ир = обработки.ирПлатформа.Создать();
	Команда = СтрШаблон("ping -a %1", Ip);
	РезультатКоманды = ир.ПолучитьТекстРезультатаКомандыСистемы(Команда);
	
	V8RegEx = ир.ПолучитьОбъектВнешнейКомпонентыИзМакета("V8Rex","V8RegEx","V8RegEx");
	V8RegEx.Глобальный = 1;
	V8RegEx.Многострочный = 1;
	V8RegEx.НеУчитыватьРегистр = 1;
	ШаблонPing = "([\w\.]+)\s\[[\d\.]{7,}\]"; // Пример результата команды: 
											  // ...
											  // Обмен пакетами с ws_it_11_1.cd.local [10.1.1.104] ...
											  // ...
	
	V8RegEx.Шаблон = ШаблонPing;
	Совпадения = V8RegEx.Выполнить(РезультатКоманды);
	Если Совпадения.Количество Тогда
		ИмяКомпьютера = Совпадения[0].Подгруппы[0];
	КонецЕсли;
	Возврат ИмяКомпьютера;
КонецФункции

Функция КодКассыИзCashReg(Хост) Экспорт
	ир = ирКэш.Получить();
	RegExp = ир.RegExp;
	RegExp.Global = 1;

	ПодключитьШару(Хост);
	
	ИмяФайла = СтрШаблон("\\%1\d$\cash50\cash.reg", Хост);
	
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда
		ДД = Новый ДвоичныеДанные(ИмяФайла);
		стрДД = Строка(ДД);
		
		RegExp.Pattern = "[\dA-F][\dA-F]\s";
		Matches = RegExp.Execute(стрДД);
		хексКодКассы = Matches.Item(6).Value + Matches.Item(5).Value;
		КодКассы = ирОбщий.СтрокаHEXtoINTЛкс(СтрЗаменить(хексКодКассы," ",""));
		Текст = РаботаСФайлами.ИзвлечьТекст(ИмяФайла, КодировкаТекста.UTF8);
		RegExp.Pattern = "(\d){8,15}";
		Matches = RegExp.Execute(Текст);
		Если Matches.Count Тогда
			ЗаводскойНомер = Matches.Item(0).value;
		КонецЕсли;
	Иначе
		КодКассы = Неопределено;
		ЗаводскойНомер = Неопределено;
	КонецЕсли;
	
	Возврат КодКассы;
КонецФункции

Функция ИзвлечьПараметрыРМизКонфиговПилота(Хост) Экспорт
		
	//	файл DEVVIVA.INI:	- ЭтоВива=1
	// 		DEV_CDBASE=2 	- ПортДП
	//		FISCAL_PORT=3 	- ПортФР
	//	файл DEVTATL.INI	- тоже, но ЭтоВива=0
	// 	файл OPOSSYS.INI:
	//		[Scanner]
	//		SERIAL=YES
	//		PORT=COM5  		- ПортСканера
	Результат = Новый Структура("ЭтоВива, ПортФР, ПортСканера, ПортДП");
	
	ПутьКпилоту = СтрШаблон("\\%1\d$\Cash50\", Хост);
	DEVVIVA = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "DEVVIVA.INI");
	Если DEVVIVA = Неопределено Тогда
		DEVVIVA = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "DEVVIVAA.INI");
	КонецЕсли;
	
	Если DEVVIVA = Неопределено Тогда
		DEVVIVA = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "DEVVIVAA.INI");
	КонецЕсли;
	Если DEVVIVA = Неопределено Тогда
		DEVVIVA = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "DEVVIVAm.INI");
	КонецЕсли;
	
	Результат.ЭтоВива = DEVVIVA <> Неопределено;
	Если DEVVIVA = Неопределено Тогда
		DEV = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "DEVTATL.INI");
		Если DEV = Неопределено Тогда
			DEV = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "devtnf.INI");
		КонецЕсли;
		
		Если DEV = Неопределено Тогда
			DEV = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "DEVT410.INI");
		КонецЕсли;
		
		Если DEV = Неопределено Тогда
			DEV = РаботаСФайлами.ИзвлечьТекст(ПутьКпилоту + "DEVI100.INI");
		КонецЕсли;

	Иначе
		DEV = DEVVIVA;
	КонецЕсли;
	ир = ирКэш.Получить();
	V8RegEx = ир.ПолучитьОбъектВнешнейКомпонентыИзМакета("V8Rex","V8RegEx","V8RegEx");
	V8RegEx.Глобальный = 1;
	V8RegEx.Многострочный = 1;
	V8RegEx.НеУчитыватьРегистр = 1;
	
	
	ШаблонDEV = "(DEV_CDBASE|^FISCAL_PORT|PRT_PORT)=(\d+)";
	V8RegEx.Шаблон = ШаблонDEV;
	Совпадения = V8RegEx.Выполнить(DEV);
	Для Инд = 0 По Совпадения.Количество - 1 Цикл
		Совпадение = Совпадения.Получить(Инд);
		Если Найти(Совпадение.Текст, "CDBASE") then
			Результат.ПортДП = Совпадение.Подгруппы[1];
		Иначе
			Результат.ПортФР = Совпадения[Инд].Подгруппы[1];
		КонецЕсли
	КонецЦикла;

	
	OPOSSYS = РаботаСфайлами.ИзвлечьТекст(ПутьКпилоту + "OPOSSYS.INI");
	OPOSSYS = СтрЗаменить(OPOSSYS, символы.пс, " ");
	ШаблонOPOSSYS = "scanner[^\[]*com(\d)";
	V8RegEx.Шаблон = ШаблонOPOSSYS;
	Совпадения = V8RegEx.Выполнить(OPOSSYS);
	Если Совпадения.Количество Тогда
		Результат.ПортСканера = Совпадения[0].Подгруппы[0];
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция СписокПроцессовКогдаНетPowerShell(Хост, ИмяПроцесса = "1cv8", ЭтоСервер = Ложь) Экспорт
	МассивКолонок = Новый Массив; МассивКолонок.Добавить("commandLine"); МассивКолонок.Добавить("ProcessID");
	Процессы = Новый ТаблицаЗначений;
	Для Каждого К Из МассивКолонок Цикл
		Процессы.Колонки.Добавить(К);
	КонецЦикла;
	
	Команда = СтрШаблон("pslist -accepteula \\%1 %2", Хост, ИмяПроцесса);
	ир = ирКэш.Получить();
	ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда, , , "pslist.txt");
	Стр = РаботаСФайлами.ИзвлечьТекст(КаталогВременныхФайлов()+"pslist.txt", КодировкаТекста.OEM);
	//:ир = обработки.ирПлатформа.Создать();
	V8RegEx = ир.ПолучитьОбъектВнешнейКомпонентыИзМакета("V8Rex","V8RegEx","V8RegEx");
	V8RegEx.Глобальный = 1;
	V8RegEx.Многострочный = 1;
	V8RegEx.НеУчитыватьРегистр = 1;
	ШаблонPsList = "Name\s+Pid.*\n((([\d\w_]+)\s+(\d+).*\n)*)";
	ШаблонПроцессыИпиды = "(^[\w\d]+)(?:\s+)(\d+)";
	V8RegEx.Шаблон = ШаблонPsList;
	Совпадения = V8RegEx.Выполнить(стр);
	Если Совпадения.количество Тогда
		стрПроцессы = Совпадения[0].Текст;
	КонецЕсли;
	
	V8RegEx.Шаблон = ШаблонПроцессыИпиды;
	Совпадения = V8RegEx.Выполнить(стрПроцессы);
	Для каждого Совпадение из Совпадения Цикл
		Нов = Процессы.Добавить();
		Для Инд = 0 по Совпадение.Подгруппы.Количество -1 Цикл
			Нов[Инд] = Совпадение.Подгруппы[Инд];	
		КонецЦикла;		
	КонецЦикла;
	Возврат Процессы;
КонецФункции

Функция СписокПроцессов(Хост, ИмяПроцесса = "1cv8", ЭтоСервер = Ложь) Экспорт
	Если ЭтоСервер Тогда
		СекьюрПароль = "76492d1116743f0423413b16050a5345MgB8AEQANAAxAEgAaQBrADIANABDAEIAcQBaAHAANgBFADMATAAxAGsAdwAzAFEAPQA9AHwAYwAzADQAYQBkADAANQBlADcANgA2ADYAMAAwAGEAMAAyAGMAZAAxADIAMgAxADMAYQBjADIAZgAxAGUAZABlAA==";
		Пользователь = "Администратор ТТ";
	Иначе
		СекьюрПароль = "76492d1116743f0423413b16050a5345MgB8ADkAdQByADcAbQBVAG0AZQAvAFoAaABGADgANwBvAEMANQBsADkAcQBoAFEAPQA9AHwAZQA3AGIAZABjAGMAZQBjADMAZQBkADkAMgAyADUAYQBmADMAMgA1ADkANwA4ADEAOABiAGIAZgBiAGYANABjAA==";
		Пользователь = "kassa";
	КонецЕсли;
	
	Команда = "$user = '%1'
	|$password = '%2' | ConvertTo-SecureString -key @(1..24)
	|$credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $user, $password
	|Get-WmiObject -ComputerName %3 -Class Win32_process -Credential ($credentials) -Filter ""Name='%4.exe'""|select commandLine, ProcessID, CreationDate|ConvertTo-CSV -Delimiter ""`t""";
	Команда = СтрШаблон(Команда, Пользователь, СекьюрПароль, Хост, ИмяПроцесса);
	Результат = Неопределено;
	Попытка
		Результат = РезультатPowerShellвТЗ(ВыполнитьКомандуPowerShell(Команда),3);
		Для Каждого Т Из Результат  Цикл
			ЛитералДаты = СтрШаблон("'%1'", Лев(Т.CreationDate,14));
			Т.CreationDate = Вычислить(ЛитералДаты);	
		КонецЦикла;
	Исключение
		
	КонецПопытки;
	
	Если Результат = Неопределено Тогда
		Попытка
			Результат = СписокПроцессовКогдаНетPowerShell(Хост, ИмяПроцесса, ЭтоСервер);
		Исключение
		КонецПопытки;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция СписокПроцессовЛокально(ИмяПроцесса = "1cv8") Экспорт
	Хост = ИмяКомпьютера();
	ИмяПроцесса = "1cv8";
	МассивКолонок = Новый Массив; МассивКолонок.Добавить("commandLine"); МассивКолонок.Добавить("ProcessID");
	Процессы = Новый ТаблицаЗначений;
	Для Каждого К Из МассивКолонок Цикл
		Процессы.Колонки.Добавить(К);
	КонецЦикла;
	
	Команда = СтрШаблон("cmd /ctasklist /FI ""ImageName eq %1*"" /NH /FO CSV > ""%2pslist.txt""", ИмяПроцесса, КаталогВременныхФайлов());
	ЗапуститьПриложение(Команда,,Истина);
	ир = ирКэш.Получить();
	ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда, КаталогВременныхФайлов(), , "pslist.txt", Истина);
	Стр = РаботаСФайлами.ИзвлечьТекст(КаталогВременныхФайлов()+"pslist.txt", КодировкаТекста.OEM);
	//:ир = обработки.ирПлатформа.Создать();
	RegEx = ир.RegExp;
	RegEx.Global = 1;
	RegEx.Multiline = 1;
	RegEx.IgnoreCase = 1;
	ШаблонTaskList = СтрШаблон("^""(%1\.exe)"",""(\d+)""", ИмяПроцесса);
	RegEx.Pattern = ШаблонTaskList;
	Совпадения = RegEx.Execute(стр);
	Для Каждого Совпадение Из Совпадения Цикл
		Нов = Процессы.Добавить();
		Для Инд = 0 по Совпадение.SubMatches.Count -1 Цикл
			Нов[Инд] = Совпадение.SubMatches.Item(Инд);	
		КонецЦикла;	
	КонецЦикла;
	Возврат Процессы;
КонецФункции

Функция УбитьПроцесс(Хост, ИДпроцесса, ЭтоСервер = Ложь) Экспорт
	Платформа = ирКэш.Получить();
	//:Платформа = Обработки.ирПлатформа.Создать();
	
	ПодключитьШару(Хост, ЭтоСервер);
	Команда = СтрШаблон("pskill \\%1 %2", Хост, ИДпроцесса);
	Платформа.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда, , , , Ложь);
КонецФункции

Функция ВыполнитьУстановку1СнаРМ(ИнформационнаяБаза, Хост) Экспорт
	ир = ирКэш.Получить();
	ПодключитьШару(Хост);
	//:ир = Обработки.ирПлатформа.Создать();
	
	Команда = СтрШаблон("robocopy /MIR \\10.1.2.2\distr\sup_kkm_addins\ \\%1\c$\sup_kkm_addins\", Хост);
	ФайлРезультат = Строка(Новый УникальныйИдентификатор);
	ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда,,,ФайлРезультат);
	РезультатКопирования = РаботаСФайлами.ИзвлечьТекст(КаталогВременныхФайлов() + ФайлРезультат, КодировкаТекста.OEM);
	
	//ярлык
	Сервер = ИнформационнаяБаза.СерверХост;
	#Если Сервер Тогда
		WshShell = Новый COMОбъект("Wscript.Shell");
	#КонецЕсли
	стрКаталоги = СтрШаблон("\\%1\c$\Documents and Settings\Kassa\Рабочий стол", Хост) + ";" +
	СтрШаблон("\\%1\c$\Documents and Settings\1\Desktop", Хост) + ";" +
	СтрШаблон("\\%1\c$\Documents and Settings\1\Рабочий стол", Хост) + ";" +
	СтрШаблон("\\%1\c$\Users\kassa\Desktop", Хост) + ";" +
	СтрШаблон("\\%1\c$\Users\User\Desktop", Хост) + ";" +
	СтрШаблон("\\%1\c$\Users\User\Рабочий стол", Хост) + ";" +
	СтрШаблон("\\%1\c$\Users\kassa\Рабочий стол", Хост) + ";" +
	СтрШаблон("\\%1\c$\Documents and Settings\Kassa\Desktop", Хост);
	
	
	Каталоги = СтрРазделить(стрКаталоги, ";");
	Каталог = Неопределено;
	Для каждого Каталог_ Из Каталоги Цикл
		Файл = Новый Файл(Каталог_);
		Если Файл.Существует() Тогда
			Каталог = Каталог_;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	#Если Сервер Тогда
		WshShell = Новый COMОбъект("Wscript.Shell");
	#КонецЕсли
	Sc = WshShell.CreateShortcut(Каталог+"\СУП KKM.lnk");
	Sc.TargetPath = "c:\program files\1cv8\common\1cestart.exe";
	Sc.Arguments = СтрШаблон("enterprise /s%1\SUP_KKM /RunModeOrdinaryApplication /n%2-POS /p"""" /DisableStartupMessages", Сервер, ?(СтрНайти(нрег(Хост), "m"), "myasnov","otdohni"));
	Попытка
		Sc.Save();	
	Исключение
	КонецПопытки;
	
	//Батник
	Команда = СтрШаблон("psexec -i -w c:\sup_kkm_addins \\%1 c:\sup_kkm_addins\batnik.bat", Хост);
	ФайлРезультат = Строка(Новый УникальныйИдентификатор);
	ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда,,,ФайлРезультат);
	РезультатБатника = РаботаСФайлами.ИзвлечьТекст(КаталогВременныхФайлов() + ФайлРезультат);
	
	Возврат РезультатБатника;
КонецФункции

Функция ВыполнитьУстановку1СнаСервере(ИнформационнаяБаза, Хост) Экспорт
	ир = ирКэш.Получить();
	ПодключитьШару(Хост, Истина);
	//:ир = Обработки.ирПлатформа.Создать();
	
	
	Команда = СтрШаблон("robocopy /MIR \\10.1.2.2\distr\sup_kkm_addins\ \\%1\c$\sup_kkm_addins\", Хост);
	ФайлРезультат = Строка(Новый УникальныйИдентификатор);
	ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда,,,ФайлРезультат);
	РезультатКопирования = РаботаСФайлами.ИзвлечьТекст(КаталогВременныхФайлов() + ФайлРезультат, КодировкаТекста.OEM);
		
	//Батник
	Команда = СтрШаблон("psexec -i -u ""Администратор ТТ"" -p 1 -w c:\sup_kkm_addins \\%1 c:\sup_kkm_addins\installServer.bat", Хост);
	ФайлРезультат = Строка(Новый УникальныйИдентификатор);
	ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения(Команда,,,ФайлРезультат);
	РезультатБатника = РаботаСФайлами.ИзвлечьТекст(КаталогВременныхФайлов() + ФайлРезультат);
	
	СокрХост = СтрЗаменить(Хост, ".tt52.local", "");
	СокрХост = СтрЗаменить(СокрХост, ".tt77.local", "");
	//Изменяем имя на айпи в srvconf
	Команда = СтрШаблон("$TTsrv = ""%1""
	|net use ""\\$TTsrv"" /user:""Администратор ТТ"" 1
	|$HostName = ""%2""
	|$ti = Test-Connection -ComputerName $TTsrv
	|$IP = $ti[0].IPV4Address.IPAddressToString
	|psservice ""\\$TTsrv"" -u ""Администратор ТТ"" -p 1 stop ""1C:Enterprise 8.3 Server Agent""
	|sleep 7
	|cd ""\\$TTsrv\c$\program files\1cv8\srvinfo""
	|ls -r *lst | %% {
	|    $cont = cat $_
	|    $cont = $cont -replace $HostName, $IP
	|    Set-Content -Value $cont -Path $_.FullName -encoding UTF8
	|}
	|psservice ""\\$TTsrv"" -u ""Администратор ТТ"" -p 1 start ""1C:Enterprise 8.3 Server Agent""", Хост, СокрХост);
	Рез=Сеть.ВыполнитьКомандуPowerShell(Команда);
	ВыполнитьКомандуPowerShell(Команда);	
	
	//ярлык
	Сервер = ИнформационнаяБаза.СерверХост;
	#Если Сервер Тогда
		WshShell = Новый COMОбъект("Wscript.Shell");
	#КонецЕсли
	стрКаталоги = СтрШаблон("\\%1\c$\Documents and Settings\All Users\Desktop", Хост) + ";" +
	СтрШаблон("\\%1\c$\Documents and Settings\All Users\Рабочий стол", Хост) + ";" +
	СтрШаблон("\\%1\c$\Documents and Settings\Администратор ТТ\Рабочий стол", Хост) + ";" +
	СтрШаблон("\\%1\c$\Documents and Settings\Администратор ТТ\Desktop", Хост);
	
	Каталоги = СтрРазделить(стрКаталоги, ";");
	Каталог = Неопределено;
	Для каждого Каталог_ Из Каталоги Цикл
		Файл = Новый Файл(Каталог_);
		Если Файл.Существует() Тогда
			Каталог = Каталог_;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	#Если Сервер Тогда
		WshShell = Новый COMОбъект("Wscript.Shell");
	#КонецЕсли
	Sc = WshShell.CreateShortcut(Каталог+"\СУП KKM.lnk");
	Sc.TargetPath = "c:\program files\1cv8\common\1cestart.exe";
	Sc.Arguments = СтрШаблон("enterprise /s%1\SUP_KKM /RunModeOrdinaryApplication /nАдминистратор /p""19643003"" /DisableStartupMessages", Сервер);
	Попытка
		Sc.Save();	
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Возврат РезультатБатника;
КонецФункции

Функция РезультатPowerShellвТЗ(стрРезультат, КоличествоКолонок) Экспорт
	Значения = СтрРазделить(стрРезультат, Символы.Таб);
	
	ТЗ = Новый ТаблицаЗначений;
	КоличествоКолонок = 3;
	Для НомерКолонки = 1 По 3 Цикл
		ИмяКолонки = СтрЗаменить(Значения[НомерКолонки-1], """","");
		ТЗ.Колонки.Добавить(ИмяКолонки);
	КонецЦикла;
	
	КолСтрок = (Значения.Количество()-КоличествоКолонок) / КоличествоКолонок;
	
	Для НомерСтроки = 1 По КолСтрок Цикл
		Нов = ТЗ.Добавить();
		Для НомерКолонки = 1 По 3 Цикл
			Значение = Значения[НомерСтроки * КоличествоКолонок + НомерКолонки-1];
			Значение = Сред(Значение, 2, СтрДлина(Значение) - 2); // Убираем кавычки
			Нов[НомерКолонки-1] = Значение;
		КонецЦикла;  	
	КонецЦикла;
	Возврат ТЗ;
КонецФункции

Функция ВыполнитьКомандуPowerShell(Команда) Экспорт
	ActiveXPosh = Новый COMОбъект("SAPIEN.ActiveXPoSHV3");
	ActiveXPosh.OutputMode = 2;
	Success = ActiveXPosh.Init(False);      
	
	Если Success <> 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ActiveXPosh.IsPowerShellInstalled Тогда
		Сообщить("PowerShell не установлена");
		Возврат Неопределено;
	КонецЕсли;         
		
	ActiveXPosh.Execute(Команда);
	стрКонсоль = "";
	фПервая = Истина;
	Для Каждого Строка Из ActiveXPosh.Output Цикл
		Если фПервая Тогда
			фПервая = Ложь;
			Продолжить;
		КонецЕсли;
		стрКонсоль = стрКонсоль + Строка + Символы.Таб;
	КонецЦикла;
	Возврат стрКонсоль;
КонецФункции

Функция ИмяХостаРМ(РМ, ДобавитьСуффикс = Ложь) Экспорт
	ир = ирКэш.Получить();
	V8RegEx = ир.ПолучитьОбъектВнешнейКомпонентыИзМакета("V8Rex","V8RegEx","V8RegEx");
	V8RegEx.НеУчитыватьРегистр = 1;
	Шаблон = "(?=.+)(\d+\-[a-z]{2,3}\d)";	
	V8RegEx.Шаблон = Шаблон;
	Совпадения = V8RegEx.Выполнить(РМ.ПрофильВхода);
	Если Совпадения.Количество Тогда
		ИмяКомпьютера = Совпадения[0].Подгруппы[0];
	КонецЕсли;
	Если ДобавитьСуффикс Тогда
		ИмяКомпьютера = ИмяКомпьютера + ".tt" + РМ.ИнформационнаяБаза.Регион + ".local";
	КонецЕсли;
	Возврат ИмяКомпьютера;
КонецФункции

Процедура ПодключитьШару(Хост, ЭтоСервер = Ложь) Экспорт
	Если СтрНайти(НРег(Хост),НРег(ИмяКомпьютера())) Тогда
		Возврат;
	КонецЕсли;
	ир = ирКэш.Получить();
	КраткоеИмяФайлаРезультата = Строка(Новый УникальныйИдентификатор);
	Если ЭтоСервер Тогда
		Если Найти(Хост, "ost") Тогда
			ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения("net use \\"+Хост+"\c$ /user:""Администратор"" F54eTylfm8", КаталогВременныхФайлов(), ,
			КраткоеИмяФайлаРезультата, Истина, Ложь);
		Иначе
			ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения("net use \\"+Хост+"\c$ /user:""Администратор ТТ"" 1", КаталогВременныхФайлов(), ,
			КраткоеИмяФайлаРезультата, Истина, Ложь);
		КонецЕсли;
	Иначе
		ир.ЗапуститьСкрытоеПриложениеИДождатьсяЗавершения("net use \\"+Хост+" /user:kassa 1", , , , Истина, Ложь);
	КонецЕсли;
КонецПроцедуры    

Процедура ОтключитьШары() Экспорт
	ЗапуститьПриложение("cmd /cnet use * /del /y");
КонецПроцедуры    

Процедура СохранитьСписокПроцессовВоХранилище(Хост, АдресТаблицыПроцессов) Экспорт
	//:ИБссылка = Справочники.ИнформационныеБазы.ПустаяСсылка();
	ТЗпроцессы = Сеть.СписокПроцессов(Хост,,Истина);
	ПоместитьВоВременноеХранилище(ТЗпроцессы, АдресТаблицыПроцессов);
КонецПроцедуры

Процедура ЗапуститьDameWare(Хост, ИБ=Неопределено) Экспорт
	ПутьКиспФайлу = "C:\Program Files (x86)\SolarWinds\DameWare Remote Support 9.0\DWRCC.exe";
	Файл = Новый Файл(ПутьКиспФайлу);
	Если Не Файл.Существует() Тогда
		ПутьКиспФайлу = "C:\Program Files (x86)\SolarWinds\DameWare Remote Support\DWRCC.exe";
		Если Не Файл.Существует() Тогда
			ПутьКиспФайлу = "C:\Program Files (x86)\DameWare Remote Support 9.0\DWRCC.exe";	
		КонецЕсли;
	КонецЕсли;
	Если СтрНайти(Хост, "ost") Тогда
		Пользователь = "Администратор";
		Пароль = "F54eTylfm8";
	ИначеЕсли СтрНайти(Хост, "serv") Тогда
		Пользователь = РегистрыСведений.ДополнительныеСвойства.ЗначениеСвойства(ИБ, "Пользователь DameWare");//Константы.ПутьДляЛогирования.Получить();
		Если Не ЗначениеЗаполнено(Пользователь) Тогда
			Пользователь = "kassa";	
			Пароль = "1";         
		Иначе
			Пароль = РегистрыСведений.ДополнительныеСвойства.ЗначениеСвойства(ИБ, "Пароль DameWare");//Константы.ПутьДляЛогирования.Получить();	
			Если Не ЗначениеЗаполнено(Пароль) Тогда
				Пароль = 1;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
			Пользователь = "kassa";	
		Пароль = "1"; 
	КонецЕсли;
	ЗапуститьПриложение(СтрШаблон("%1 -c: -h: -m:%2 -u:%3 -p:%4 -x", ПутьКиспФайлу, Хост, Пользователь, Пароль));
КонецПроцедуры

&НаСервере
Функция ОтключитьСессии(Хост) Экспорт
	Возврат Сеть.ВыполнитьКомандуPowerShell(СтрШаблон("Send-TcpRequest %1 -Port 8888 ""close, please""",Хост));
КонецФункции

#КонецЕсли