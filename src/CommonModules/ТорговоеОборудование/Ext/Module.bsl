#Если НЕ ТонкийКлиент Тогда
      	
Функция тоВыбратьИзСпискаТО(СписокВидов, Форма = Неопределено, Элемент, ИнформационнаяБаза = Неопределено) Экспорт 
	ФВ = Справочники.ТорговоеОборудование.ПолучитьФормуВыбора();
	Если ЗначениеЗаполнено(СписокВидов) Тогда
		ФВ.СправочникСписок.Отбор.КодВида.ВидСравнения = ВидСравнения.ВСписке;
		ФВ.СправочникСписок.Отбор.КодВида.Значение = СписокВидов;
		ФВ.СправочникСписок.Отбор.КодВида.Использование = 1;
	КонецЕсли;
	Ссылка = ФВ.ОткрытьМодально();
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Элемент.Значение = Ссылка;
		Возврат Ссылка;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

Функция тоОтметитьИзСпискаТО(СписокВидов, СписокСУ, ИнформационнаяБаза = Неопределено) Экспорт
	ТО = Новый Структура("Значение");
	Если тоВыбратьИзСпискаТО(СписокВидов, Неопределено, ТО, ИнформационнаяБаза) <> Ложь Тогда
		СписокСУ.Добавить(ТО.Значение);
	КонецЕсли;
КонецФункции

Процедура тоВыполнитьПодключениеОтключение(Действие, флаЧегоТо = Ложь, МассивТО = Неопределено, ТаблицаОшибок = Неопределено, глТорговоеОборудование = Неопределено) Экспорт
	Если МассивТО = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли; 
	Если Действие = "Подключить" Тогда
		ТаблицаОшибок = Новый ТаблицаЗначений;
		ТаблицаОшибок.Колонки.Добавить("ТО");
		ТаблицаОшибок.Колонки.Добавить("Подробно");
		ТаблицаОшибок.Колонки.Добавить("Описание");
		ТаблицаОшибок.Колонки.Добавить("Ошибка");
		Для каждого ТО Из МассивТО Цикл
			ОбработкаОбслуживания = ОбработкаОбслуживания;
			обТО = ТО.ПолучитьОбъект();
			Если обТО = Неопределено Тогда
				Возврат;
			КонецЕсли;
			Попытка
				ОбработкаОбслуживания = Обработки[обТО.ИмяОбработки].Создать();	
				ОбработкаОбслуживания.ПараметрыТО = обТО.ПолучитьСтруктуруПараметров();
				ОбработкаОбслуживания.ТО = обТО;
				ОбработкаОбслуживания.Инициализация();
				Попытка
					ОбработкаОбслуживания.Подключить();	
				Исключение
				КонецПопытки;
				
			Исключение
				Нов = ТаблицаОшибок.Добавить();
				Нов.ТО = ТО;
				Нов.Ошибка = "Ошибка при инициализации";
				Нов.Подробно = ОписаниеОшибки();
				Нов.Описание = ОписаниеОшибки();
			КонецПопытки;
		КонецЦикла; 
		
	Иначе
		Для каждого ТО Из МассивТО Цикл
			ОбработкаОбслуживания = ОбработкаОбслуживания;
			обТО = ТО.ПолучитьОбъект();
			Если обТО = Неопределено Тогда
				Возврат;
			КонецЕсли;
			Попытка
				обТО.ВыполнитьДействие("Отключить");				
			Исключение
				Нов = ТаблицаОшибок.Добавить();
				Нов.ТО = ТО;
				Нов.Ошибка = "Ошибка при отключении";
				Нов.Подробно = ОписаниеОшибки();
				Нов.Описание = ОписаниеОшибки();
			КонецПопытки;
		КонецЦикла; 
			
	КонецЕсли; 
КонецПроцедуры

Функция ЕстьAutoHotReader(СписокСУ, ПараметрыТО = "") Экспорт
	Для Каждого СУ Из СписокСУ Цикл
		Если Найти(НРег(СУ.Значение), "autohot") Тогда
			ПараметрыТО = ЗначениеИзСтрокиВнутр(СУ.Значение.Параметры);
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;	
	Возврат Ложь;
КонецФункции

// Инициализация обработки обслуживания торгового оборудования
Функция ИнициализацияТО(Объект, ОбработкаОбслуживания, глПараметрыРМ = Неопределено) Экспорт 
	//:Объект = Справочники.ТорговоеОборудование.СоздатьЭлемент();//:глПараметрыРМ = Новый Структура; 
	#Если ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
		
		глПараметрыРМ = глПараметрыРМ;
		Если глПараметрыРМ = Неопределено Тогда
			КэшТО = Неопределено;
		Иначе
			Если Не глПараметрыРМ.Свойство("ПараметрыТО") Тогда
				глПараметрыРМ.Вставить("ПараметрыТО", Новый Соответствие);	
			КонецЕсли;
			
			КэшПараметрыТО = глПараметрыРМ.ПараметрыТО;//:КэшПараметрыТО = Новый Соответствие;
			КэшТО = КэшПараметрыТО.Получить(Объект.Ссылка);
		КонецЕсли;
		Если КэшТО = Неопределено Тогда
			ПараметрыТО = Объект.ПолучитьСтруктуруПараметров();			
			Попытка
				ОбработкаОбслуживания = Обработки[Объект.ИмяОбработки].Создать();	
				ОбработкаОбслуживания.ПараметрыТО = ПараметрыТО;
				ОбработкаОбслуживания.ТО = Объект;
				ОбработкаОбслуживания.Инициализация();
				
				КэшТО = Новый Структура;
				КэшТО.Вставить("ОбработкаОбслуживания", ОбработкаОбслуживания);
				КэшТО.Вставить("ПараметрыТО", ПараметрыТО);
				Если Не глПараметрыРМ = Неопределено Тогда
					глПараметрыРМ.ПараметрыТО.Вставить(Объект.Ссылка, КэшТО); 
				КонецЕсли;
				Возврат ОбработкаОбслуживания.Результат;
			Исключение
				Возврат Новый Структура("Ошибка, Описание, Подробно", Истина, "Не удалось инициализировать драй@вер",ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// уже проинициализировано
			
			ОбработкаОбслуживания = КэшТО.ОбработкаОбслуживания;
			ОбработкаОбслуживания.ПараметрыТО = КэшТО.ПараметрыТО;
			Если ОбработкаОбслуживания.ПараметрыТО.Свойство("ИмяПринтера") Тогда
				Возврат Новый Структура("Ошибка, Описание, Подробно", Ложь);;
			КонецЕсли;
			ОбработкаОбслуживания.Результат.Вставить("Ошибка", Ложь);
			Возврат ОбработкаОбслуживания.Результат;
		КонецЕсли;
	#КонецЕсли
КонецФункции 

Процедура ПоказатьОшибкуККМ(Знач ПараметрыВыходные) Экспорт
	
	Перем Ошибки;
	Попытка
		Если ТипЗнч(ПараметрыВыходные) = Тип("Структура") Тогда
			Если ПараметрыВыходные.Свойство("ОписаниеОшибки", Ошибки) Тогда
				Если ТипЗнч(Ошибки) = Тип("Массив")  Тогда
					СтрОшибка = СтрСоединить(Ошибки, Символы.ПС);
					Если ЗначениеЗаполнено(СтрОшибка) Тогда
						ИнтерфейсРМ.ВопросПредупреждение("Ошибка","Ошибка ККМ",СтрОшибка, "", "ОК", "");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;		
		КонецЕсли;
	Исключение
	КонецПопытки;	
	
КонецПроцедуры

#КонецЕсли