
// Процедура устанавливает параметры сеанса
//
Процедура УстановитьПараметрыСеанса() Экспорт
	
	СтрВерсия = Сред( Метаданные.Имя, 20 ); 
	ПараметрыСеанса.Версия  = 3;
	
	прУстановитьПараметрыРИБ();
	ОпределитьТекущегоПользователя();
	
	Лояльность.УстановитьПараметрСеанса_ВерсияЛояльности(); 
	УстановитьВерсиюЛояльности();
	
	ПараметрыСеанса.ЖурналРегистрацииВsql = ЖурналРегистрации.Инициализация();
	ПараметрыСеанса.ЕстьКонтрольныеПоказатели = КонтрольныеПоказатели.Инициализация();
КонецПроцедуры

Процедура УстановитьВерсиюЛояльности() Экспорт
	ВерсияЛояльности = ЛояльностьКлиентСервер.ТекущаяВерсияЛояльности(); // по умолчанию
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РабочиеМеста.МестоРеализации КАК МестоРеализации
	|ИЗ
	|	Справочник.РабочиеМеста КАК РабочиеМеста
	|ГДЕ
	|	РабочиеМеста.ИнформационнаяБаза = &ИнформационнаяБаза");	
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ПланыОбмена.Основной.ЭтотУзел().ИнформационнаяБаза);
	ВыборкаРМ = Запрос.Выполнить().Выбрать();
	
	// Выбираем наименьшую версию из версий мест реализации. Места реализации берем из списка рабочих мест ИБ
	Пока ВыборкаРМ.Следующий() Цикл
		ВерсияЛояльностиМестаРеализации = Лояльность.ПолучитьВерсиюЛояльности(ВыборкаРМ.МестоРеализации);//РегистрыСведений.ДополнительныеСвойства.ЗначениеСвойства(ВыборкаРМ.МестоРеализации, "Лояльность_Версия");
		Если ЗначениеЗаполнено(ВерсияЛояльностиМестаРеализации) Тогда
			Если ВерсияЛояльности > ВерсияЛояльностиМестаРеализации Тогда
				ВерсияЛояльности = ВерсияЛояльностиМестаРеализации;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// ГОВНОКОД
	Попытка
		ПараметрыСеанса.ВерсияЛояльности = ВерсияЛояльности;
	Исключение
		ПараметрыСеанса.ВерсияЛояльности = "";
	КонецПопытки;
КонецПроцедуры


// Процедура инициализирует ПараметрСеанса.ТекущийПользователь.
// Он содержит ссылку на элемент справочника "Пользователи", 
// соответствующий текущему пользователю информационной базы.
//
// Параметры:
//  Нет.
//
Процедура ОпределитьТекущегоПользователя()
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.ПустаяСсылка();
		Возврат;
	Иначе
		ИмяПользователя           = ИмяПользователя();  
		Если ПустаяСтрока(ПолноеИмяПользователя()) Тогда
			ПолноеИмяПользователя = ИмяПользователя;
		Иначе
			ПолноеИмяПользователя = ПолноеИмяПользователя();
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду(ИмяПользователя);
	
	Если ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.ПустаяСсылка() Тогда
		ОбъектПользователь = Справочники.Пользователи.СоздатьЭлемент();
		ОбъектПользователь.Код          = ИмяПользователя;
		ОбъектПользователь.Наименование = ПолноеИмяПользователя;
		ОбъектПользователь.Записать();
		
		ПараметрыСеанса.ТекущийПользователь = ОбъектПользователь.Ссылка;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьСменуТТ(ТТ, Дата) Экспорт
	НЗ = РегистрыСведений.ТекущиеСмены.СоздатьНаборЗаписей();
	НЗ.Отбор.МестоРеализации.Установить(ТТ);
	НЗ.Прочитать();
	
	
	Если Не НЗ.Количество() Тогда
		Док = Документы.ОткрытиеСмены.СоздатьДокумент();
		Док.Дата = Дата;
		Док.МестоРеализации = ТТ;
		Док.Записать(РежимЗаписиДокумента.Запись);
		
		МенеджерЗаписи = РегистрыСведений.ТекущиеСмены.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.МестоРеализации = ТТ;
		МенеджерЗаписи.Смена = Док.Ссылка;
		МенеджерЗаписи.Записать();
		
	КонецЕсли;

КонецПроцедуры

// Устанавливает параметры РИБ.
//
// Параметры:
//	Нет.
//
Процедура прУстановитьПараметрыРИБ() Экспорт
	
	Если ПараметрыСеанса.Версия=1 Тогда
		ПараметрыСеанса.РаспределенныйРежим = Ложь;
		Возврат;
	КонецЕсли; 
	
	ПараметрыРИБ = Новый Структура;
	ПараметрыРИБ.Вставить("Центр", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Основной.Ссылка
	|ИЗ
	|	ПланОбмена.Основной КАК Основной
	|ГДЕ
	|	Основной.Ссылка <> &ПарСсылка";
	
	Запрос.УстановитьПараметр("ПарСсылка", ПланыОбмена.Основной.ЭтотУзел());
	
	// Определение текущего режима базы.
	РаспределенныйРежимБазы             = Не Запрос.Выполнить().Пустой();
	ПараметрыСеанса.РаспределенныйРежим = РаспределенныйРежимБазы;
	
	ПараметрыРИБ.Вставить("Центр", ПланыОбмена.Основной.ЭтотУзел().Центр);
	
	// Определение текущей ИБ
	ТекИБ = ПланыОбмена.Основной.ЭтотУзел().ИнформационнаяБаза;
	
	Если НЕ ЗначениеЗаполнено(ТекИБ) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИнформационныеБазы.Ссылка
		|ИЗ
		|	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
		|ГДЕ
		|	ИнформационныеБазы.Ссылка <> ЗНАЧЕНИЕ(Справочник.ИнформационныеБазы.Центр)";
		
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			Сообщить("Не определена текущая информационная база.");
		КонецЕсли;		
		
	КонецЕсли;
	
	ПараметрыСеанса.ТекущаяИБ = ТекИБ;
	
	// после первоначального создания ИБ
	Если Константы.ОсновноеМестоРеализации.Получить().Пустая() Тогда
		
		//ТекМР = Справочники.МестаРеализации.НайтиПоРеквизиту("ИнформационнаяБаза", ТекИБ);
		//Константы.ОсновноеМестоРеализации.Установить(ТекМР);
		
	КонецЕсли; 
	
	// Получение списка узлов для каждого торгового объекта.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ТекИБ);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Основной.Ссылка,
	|	МестаРеализации.Ссылка КАК МестоРеализации
	|ИЗ
	|	ПланОбмена.Основной КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаРеализации КАК МестаРеализации
	|		ПО Основной.ИнформационнаяБаза = МестаРеализации.ссылка
	|ГДЕ
	|	Основной.ИнформационнаяБаза <> &ИнформационнаяБаза
	|	И (НЕ Основной.Центр)";
	
	СоответствиеУзлов = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеУзлов.Вставить(Выборка.МестоРеализации, Выборка.Ссылка);
	КонецЦикла;	
	
	ПараметрыРИБ.Вставить("СоответствиеУзлов", СоответствиеУзлов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Основной.Ссылка
	|ИЗ
	|	ПланОбмена.Основной КАК Основной
	|ГДЕ
	|	Основной.Центр
	|	И Основной.ИнформационнаяБаза <> &ИнформационнаяБаза";
	
	СписокЦентральныхУзлов = Новый СписокЗначений;
	СписокЦентральныхУзлов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	ПараметрыРИБ.Вставить("СписокЦентральныхУзлов", СписокЦентральныхУзлов);
	
	ПараметрыСеанса.ПараметрыРИБ = Новый ХранилищеЗначения(ПараметрыРИБ);
	
КонецПроцедуры
