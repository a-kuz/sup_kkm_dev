#Если НЕ ТонкийКлиент Тогда
	
// обработчик события открытия главной формы
//	- прописывает действия плашек лояльности
//	- добавляет необходимые колонки в тпТовары (уже должна существовать на форме)
//
Процедура ФормаПриОткрытии(Форма) Экспорт 
	
	СоответствиеЗаголовков = ЛояльностьКлиентСерверПовтИсп.СоответствиеЗаголовковПлашек_Активная();
	Попытка
		Действие = Новый Действие("ПлашкаКупонНажатие");
		Для Инд = 1 По 6 Цикл
			ТекЭлемент = Форма.ЭлементыФормы["Плашка" + Инд];
			ТекЭлемент.УстановитьДействие("Нажатие", Действие);
		КонецЦикла;
		
		Действие = Новый Действие("Плашка_Н_Нажатие");
		Для Инд = 7 По 12 Цикл
			ТекЭлемент = Форма.ЭлементыФормы["Плашка" + Инд];
			ТекЭлемент.Заголовок = СоответствиеЗаголовков[Инд];
			ТекЭлемент.УстановитьДействие("Нажатие", Действие);
		КонецЦикла;
		
		Действие = Новый Действие("тпТоварыПриПолученииДанных");
		ТекЭлемент = Форма.ЭлементыФормы.тпТовары;
		ТекЭлемент.УстановитьДействие("ПриПолученииДанных", Действие);
	Исключение
	КонецПопытки;
	
	Попытка
		Форма.ОбработкаОбъект.ГруппыАкций = ПолучитьГруппыАкцийСоответствие();
	Исключение
	КонецПопытки;
	
	ТабличноеПоле = Форма.ЭлементыФормы.тпТовары;
	Если ТабличноеПоле.Колонки.Найти("КГЛ") = Неопределено Тогда
		НовКолонка = ТабличноеПоле.Колонки.Добавить("КГЛ", "КеГЛи");
		НовКолонка.ЦветТекстаПоля = ЦветаСтиля.ЦветТемы;
		НовКолонка.ШрифтТекста = Новый Шрифт("Segoe UI", 12, Истина);
		НовКолонка.Ширина = 8;
		НовКолонка.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Право;
	КонецЕсли;
	Если ТабличноеПоле.Колонки.Найти("ГруппаАкции") = Неопределено Тогда
		НовКолонка = ТабличноеПоле.Колонки.Добавить("ГруппаАкции", "Акция");
		НовКолонка.Ширина = 5;
		НовКолонка.КартинкиСтрок = БиблиотекаКартинок.ЛоготипАкций;
	КонецЕсли;
	
КонецПроцедуры



#Область ОбработчикиСобытийЭлементовГлавнойФормы

Процедура тпТоварыПриПолученииДанных(Форма, Элемент, ОформленияСтрок, ДанныеЛояльности = Неопределено) Экспорт
	
	ГруппыАкций = Форма.ОбработкаОбъект.ГруппыАкций;
	Если ДанныеЛояльности = Неопределено Тогда
		ДанныеЛояльности = ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(Форма.Заказ, "");
	КонецЕсли;
	Если ДанныеЛояльности = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ИдСтроки = ОформлениеСтроки.ДанныеСтроки.ИдСтроки;
		ТекГруппаАкции = ОформлениеСтроки.ДанныеСтроки.ЛояльностьГруппаАкции;
		ТекстАкций = ГруппыАкций.Получить(ТекГруппаАкции);
		ТекстАкций = ?(ТекстАкций = Неопределено, "", ТекстАкций);
		ОформлениеСтроки.Ячейки.ГруппаАкции.УстановитьТекст(ТекстАкций);
		
		Если ТекГруппаАкции > 0 Тогда
			ОформлениеСтроки.Ячейки.ГруппаАкции.ОтображатьКартинку = Истина;
			ОформлениеСтроки.Ячейки.ГруппаАкции.ОтображатьТекст = Ложь;
			ОформлениеСтроки.Ячейки.ГруппаАкции.ИндексКартинки = ТекГруппаАкции;	
		Иначе
			ОформлениеСтроки.Ячейки.ГруппаАкции.ОтображатьКартинку = Ложь;
		КонецЕсли;
		
		Для каждого ТекСтрока Из ДанныеЛояльности.СоставЗаказа Цикл
			Если ТекСтрока.ИдСтроки = ИдСтроки Тогда
				ОформлениеСтроки.Ячейки.КГЛ.УстановитьТекст(Формат(ТекСтрока.КГЛНачислено,"ЧН=' '"));
				Прервать;
			КонецЕсли;
		КонецЦикла;
				
	КонецЦикла; 
	
КонецПроцедуры

// первые 6 кнопок
Процедура ПлашкаКупонНажатие(Форма, Элемент) Экспорт
	
	глОтсечкаПростоя();
	
	Попытка
		ЗаказСсылка = Форма.Заказ.Ссылка;
		КупоныСоответствие = Форма.КупоныСоответствие;
	Исключение
	    Возврат;
	КонецПопытки;
	
	КодКупона = КупоныСоответствие.Получить(СтрЗаменить(Элемент.Имя, "Плашка", ""));
	
	ОбработатьВыборКупона(Форма, КодКупона);
	Возврат;
	
	
	Если КодКупона = Неопределено Тогда
		Возврат; // Плашка пустая
	КонецЕсли;
	Если ТипЗнч(Форма.Заказ) = Тип("ДокументСсылка.Заказ") Тогда
		ЗаказОбъект = Форма.Заказ.ПолучитьОбъект();
		ЛояльностьКлиент.ПеренестиКупонВЗаказ(ЗаказОбъект, КодКупона);
		Форма.ОбработкаОбъект.ЗаписатьЗаказ(ЗаказОбъект, ПредопределенноеЗначение("Перечисление.СтатусыЗаказа.Открыт"));
	ИначеЕсли ТипЗнч(Форма.Заказ) = Тип("ДокументОбъект.Заказ") Тогда
		ЗаказОбъект = Форма.Заказ;
		ЛояльностьКлиент.ПеренестиКупонВЗаказ(ЗаказОбъект, КодКупона);
		Форма.ОбработкаОбъект.ЗаписатьЗаказ(ПредопределенноеЗначение("Перечисление.СтатусыЗаказа.Открыт"));
		Форма.ОбработкаОбъект.ПрочитатьТекущийДокумент();
		ОбновитьТабДокЛояльность(Форма, ""); // Если передать пустую строку в версию - лояльность обновит расчет
		ОбновитьКупоны(Форма);
	КонецЕсли;
	
КонецПроцедуры

// кнопки с 7 по 12
Процедура Плашка_Н_Нажатие(Форма, Элемент) Экспорт
	глОтсечкаПростоя();
	Выполнить("" + Элемент.Имя + "Нажатие(Форма, Элемент);"); 
КонецПроцедуры

// Показать ПП
Процедура Плашка7Нажатие(Форма, Элемент)

	Попытка
		//ЗаказСсылка = Форма.Заказ.Ссылка;
		ЛояльностьДанныеЗаказа = Форма.ОбработкаОбъект.ЛояльностьДанныеЗаказа;
	Исключение
	    Возврат;
	КонецПопытки;
	
	Параметры = Новый Структура;
	Параметры.Вставить("КупоныГостя", ЛояльностьДанныеЗаказа.Купоны);
	Параметры.Вставить("ИмяКоманды", "ПлашкаКупон");
	КодКупона = ОткрытьФормуМодально("Обработка.ОбработкаЛояльности.Форма.СписокАкцийИПП", Параметры, Форма);
	
	ОбработатьВыборКупона(Форма, КодКупона);
	
КонецПроцедуры
// Показать ЛУЧ
Процедура Плашка8Нажатие(Форма, Элемент)
	
	НомерКартыЛояльности = "";
	Попытка
		НомерКартыЛояльности = Форма.Заказ.Ссылка.НомерКартыЛояльности;
	Исключение
	    Возврат;
	КонецПопытки;
	Если НомерКартыЛояльности = "" Тогда
		Возврат;
	КонецЕсли;
	
	ЛУЧ = ЛояльностьКлиентСервер.ПолучитьЛУЧГостя(НомерКартыЛояльности, глПараметрыРМ.Тест);
	Если ЛУЧ.Пустой ИЛИ ЛУЧ.Ошибка Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Получить ЛУЧ гостя...", ЛУЧ.ТекстОшибки, "", "", "Esc=ОК", "");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЛУЧ", ЛУЧ.ЛУЧ);
	// массив структур {КодТовара,Проект,Коэффициент}
	
	ОтборФирма = Неопределено;
	ДПИ = Форма.ОбработкаОбъект.ДопПараметрыИнфо;
	Если ТипЗнч(ДПИ) = Тип("Структура") Тогда
		ДПИ.Свойство("ФирмаФильтр", ОтборФирма);
	КонецЕсли;
	ПараметрыФормы.Вставить("Фирма", ОтборФирма);
	
	ОткрытьФормуМодально("Обработка.ОбработкаЛояльности.Форма.ПоказатьЛУЧ", ПараметрыФормы, Форма);
	
	
КонецПроцедуры
// Расчет КеГеЛьБУМ 
Процедура Плашка9Нажатие(Форма, Элемент)
	
	Попытка
		ЗаказСсылка = Форма.Заказ.Ссылка;
	Исключение
	    Возврат;
	КонецПопытки;
	
	глОтсечкаПростоя();
	//Лояльность.ОбновитьПредварительныйРасчетЗаказа(ЗаказСсылка, глПараметрыРМ.Тест);
	Версия = "";
	ОбновитьКупоны(Форма, Версия, Форма.ОбработкаОбъект.ЛояльностьДанныеЗаказа);
	ОбновитьТабДокЛояльность(Форма, Версия, Форма.ОбработкаОбъект.ЛояльностьДанныеЗаказа); // Если передать пустую строку в версию - лояльность обновит расчет
	Форма.ОбновитьНадписьИтого();
	
КонецПроцедуры
// КеГеЛьБУМ подробно
Процедура Плашка10Нажатие(Форма, Элемент)
		
КонецПроцедуры
// Скрыть перс. данные
Процедура Плашка11Нажатие(Форма, Элемент)
	Попытка
		ЗаказСсылка = Форма.Заказ.Ссылка;
	Исключение
	    Возврат;
	КонецПопытки;
	
	ДЛПЗ = РегистрыСведений.ДанныеЛояльностиПоЗаказу.Получить(Новый Структура("Документ,ТипДанных", ЗаказСсылка, "СкрытьПерсДанные"));
	ТекСкрыть = ДЛПЗ.Данные = "1";
	
	МЗ = РегистрыСведений.ДанныеЛояльностиПоЗаказу.СоздатьМенеджерЗаписи();
	МЗ.Документ = ЗаказСсылка;
	МЗ.ТипДанных = "СкрытьПерсДанные";
	МЗ.Данные = ?(ТекСкрыть, "0", "1");
	МЗ.Записать(Истина);

	ПереключитьАктивностьКнопки(Форма, 11, ТекСкрыть, Истина);
	Если ТекСкрыть Тогда
		ИнтерфейсРМ.ВыводНаИнфоДисплей("ПоказатьПД");
	Иначе	
		ИнтерфейсРМ.ВыводНаИнфоДисплей("СкрытьПД");
	КонецЕсли;
	
КонецПроцедуры
// Показать Акции
Процедура Плашка12Нажатие(Форма, Элемент)

	Попытка
		//ЗаказСсылка = Форма.Заказ.Ссылка;
		ЛояльностьДанныеЗаказа = Форма.ОбработкаОбъект.ЛояльностьДанныеЗаказа;
	Исключение
	    Возврат;
	КонецПопытки;
	
	Параметры = Новый Структура;
	Параметры.Вставить("КупоныГостя", ЛояльностьДанныеЗаказа.Акции);
	Параметры.Вставить("ИмяКоманды", "ПлашкаАкция");
	КодКупона = ОткрытьФормуМодально("Обработка.ОбработкаЛояльности.Форма.СписокАкцийИПП", Параметры, Форма);
	
	ОбработатьВыборКупона(Форма, КодКупона);
	
КонецПроцедуры

Процедура ОбработатьВыборКупона(Форма, КодКупона)
	
	Если КодКупона = Неопределено Тогда
		Возврат; // Плашка пустая
	КонецЕсли;
	
	Если ТипЗнч(Форма.Заказ) = Тип("ДокументСсылка.Заказ") Тогда
		ЗаказОбъект = Форма.Заказ.ПолучитьОбъект();
		ЛояльностьКлиент.ПеренестиКупонВЗаказ(ЗаказОбъект, КодКупона);
		Форма.ОбработкаОбъект.ЗаписатьЗаказ(ЗаказОбъект, ПредопределенноеЗначение("Перечисление.СтатусыЗаказа.Открыт"));
	ИначеЕсли ТипЗнч(Форма.Заказ) = Тип("ДокументОбъект.Заказ") Тогда
		ЗаказОбъект = Форма.Заказ;
		ЛояльностьКлиент.ПеренестиКупонВЗаказ(ЗаказОбъект, КодКупона);
		Форма.ОбработкаОбъект.ЗаписатьЗаказ(ПредопределенноеЗначение("Перечисление.СтатусыЗаказа.Открыт"));
		Форма.ОбработкаОбъект.ПрочитатьТекущийДокумент();
		ОбновитьТабДокЛояльность(Форма, ""); // Если передать пустую строку в версию - лояльность обновит расчет
		ОбновитьКупоны(Форма);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

// обновляет элемент формы НадписьЛояльность1
//
Процедура ОбновитьНадписьПриветствие(Форма, ВерсияДанных = "") Экспорт 
	
	Попытка
		НомерКартыЛояльности = Форма.Заказ.НомерКартыЛояльности;
	Исключение
	    НомерКартыЛояльности = "";
	КонецПопытки;
	Форма.ЭлементыФормы.НадписьЛояльность1.Заголовок = "Здравствуйте, Гость!
	|Нет карты КеГеЛьБУМ.";
	
	ДанныеГостя = ЛояльностьКлиентСервер.ПолучитьДанныеГостя(НомерКартыЛояльности, глПараметрыРМ.Тест);
	Если ДанныеГостя.Ошибка Тогда
		Форма.ЭлементыФормы.НадписьЛояльность1.Заголовок = "Здравствуйте!";
	Иначе	
		НомерКартыЛояльности = СокрЛП(Формат(ДанныеГостя.НомерКарты, "ЧГ=0"));
		Попытка
			Имя = СтрРазделить(ДанныеГостя.ФИО, " ")[0];
		Исключение
			Имя = "Гость";
		КонецПопытки;
		Если ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
			Форма.ЭлементыФормы.НадписьЛояльность1.Заголовок = СтрШаблон("Здравствуйте, %1!
			|Карта %2*****%3", Имя, Лев(НомерКартыЛояльности, 2), Прав(НомерКартыЛояльности, 4));
		Иначе
			Форма.ЭлементыФормы.НадписьЛояльность1.Заголовок = "Здравствуйте, Гость!
			|Нет карты КеГеЛьБУМ.";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// обновляет заголовки плашек с купонами
//
Процедура ОбновитьКупоны(Форма, ВерсияДанных = "", ДанныеЛояльности = Неопределено) Экспорт 
	
	Попытка
		ЗаказСсылка = Форма.Заказ.Ссылка;
		НомерКартыЛояльности = ЗаказСсылка.НомерКартыЛояльности;
	Исключение
	    НомерКартыЛояльности = Неопределено;
	КонецПопытки;
	
	Попытка
		Форма.КупоныСоответствие = Новый Соответствие;
	Исключение
	    //ОписаниеОшибки()
	КонецПопытки;
	
	МаксКупонов = 6;
	ВыведеноКупонов = 0;
	
	Для Инд = 1 По МаксКупонов Цикл
		ТекЭлемент = Форма.ЭлементыФормы["Плашка" + Инд];
		ТекЭлемент.Заголовок = "";
		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
	КонецЦикла;
	
	Форма.ЭлементыФормы.Плашка7.ЦветФонаКнопки = ЦветаСтиля.ЦветТемы;

	Если НЕ ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеЛояльности = Неопределено ИЛИ ВерсияДанных = "" Тогда
		ДанныеЛояльности = ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(ЗаказСсылка, ВерсияДанных);
	КонецЕсли;
		
	Попытка
		Если ТипЗнч(Форма.ОтборФирма) = Тип("Булево") Тогда
			ОтборПоФирме = Форма.ОтборФирма;
		Иначе
			ОтборПоФирме = Форма.ОтборФирма.Использование;
		КонецЕсли;
	Исключение
		ОтборПоФирме = Ложь;
	КонецПопытки;
	ПроектФильтр = ?(ОтборПоФирме, ЛояльностьКлиентСерверПовтИсп.ПроектПоМестуРеализации(глПараметрыРМ.Фирма.МестоРеализации), 0);
	
	ОбновитьПлашкиКупоныПоМассивуКупонов(Форма, ДанныеЛояльности.Купоны, ВыведеноКупонов, МаксКупонов, ПроектФильтр, Истина);
	ОбновитьПлашкиКупоныПоМассивуКупонов(Форма, ДанныеЛояльности.Акции, ВыведеноКупонов, МаксКупонов, ПроектФильтр, Ложь);
	
	//КупоныГостя = ДанныеЛояльности.Купоны;
	//Для Сч = 0 По КупоныГостя.ВГраница() Цикл
	//	Если КупоныГостя[Сч].Статус = -1 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Инд = Сч + 1;
	//	Если Инд > 6 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	ТекЭлемент = Форма.ЭлементыФормы["Плашка" + Инд];
	//	ТекЭлемент.Заголовок = КупоныГостя[Сч].ИнфоСтанции;
	//	Если КупоныГостя[Сч].Статус = -1 Тогда
	//		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
	//		ТекЭлемент.ЦветТекстаКнопки = WebЦвета.Красный;
	//	ИначеЕсли КупоныГостя[Сч].Статус = 0 Тогда
	//		ТекЭлемент.ЦветФонаКнопки = WebЦвета.Лосось;
	//		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
	//	ИначеЕсли КупоныГостя[Сч].Статус = 1 Тогда	
	//		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
	//		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
	//	ИначеЕсли КупоныГостя[Сч].Статус = 2 Тогда	
	//		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаОплаченнойСтроки;
	//		ТекЭлемент.ЦветТекстаКнопки = WebЦвета.Черный;
	//	ИначеЕсли КупоныГостя[Сч].Статус = 3 Тогда	
	//		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.НеактивнаяКнопка;
	//		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
	//	КонецЕсли;
	//	
	//	Попытка
	//	Форма.КупоныСоответствие.Вставить(Формат(Сч + 1, "ЧДЦ=; ЧГ=0"), КупоныГостя[Сч].Код);
	//	Исключение
	//	    //ОписаниеОшибки()
	//	КонецПопытки; 
	//КонецЦикла;
	
	Если ДанныеЛояльности.Купоны.Количество() > МаксКупонов Тогда
		Форма.ЭлементыФормы.Плашка7.ЦветФонаКнопки = ЦветаСтиля.Акцент;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьПлашкиКупоныПоМассивуКупонов(Форма, КупоныГостя, ВыведеноКупонов, МаксКупонов, ПроектФильтр = 0, ЭтоКупоны = Истина)
	
	Для Сч = 0 По КупоныГостя.ВГраница() Цикл
		ТекСтатус = КупоныГостя[Сч].Статус;
		ТекПроект = КупоныГостя[Сч].Проект;
		
		Если НЕ ПроектФильтр = 0 И НЕ ТекПроект = 0 И НЕ ТекПроект = ПроектФильтр Тогда
			Продолжить;
		КонецЕсли;
		Если КупоныГостя[Сч].Статус = -1 Тогда
			Продолжить;
		КонецЕсли;
		
		ВыведеноКупонов = ВыведеноКупонов + 1;
		Если ВыведеноКупонов > МаксКупонов Тогда
			Прервать;
		КонецЕсли;
		ТекЭлемент = Форма.ЭлементыФормы["Плашка" + ВыведеноКупонов];
		ТекЭлемент.Заголовок = КупоныГостя[Сч].ИнфоСтанции;
		Если КупоныГостя[Сч].Статус = -1 Тогда
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
			ТекЭлемент.ЦветТекстаКнопки = WebЦвета.Красный;
		ИначеЕсли КупоныГостя[Сч].Статус = 0 Тогда
			ТекЭлемент.ЦветФонаКнопки = WebЦвета.Лосось;
			ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
		ИначеЕсли КупоныГостя[Сч].Статус = 1 Тогда	
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
			ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
		ИначеЕсли КупоныГостя[Сч].Статус = 2 Тогда	
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаОплаченнойСтроки;
			ТекЭлемент.ЦветТекстаКнопки = WebЦвета.Черный;
		ИначеЕсли КупоныГостя[Сч].Статус = 3 Тогда	
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.НеактивнаяКнопка;
			ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
		КонецЕсли;
		
		Если ЭтоКупоны Тогда
			Попытка
				Форма.КупоныСоответствие.Вставить(Формат(Сч + 1, "ЧДЦ=; ЧГ=0"), КупоныГостя[Сч].Код);
			Исключение
			    //ОписаниеОшибки()
			КонецПопытки; 
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры


Процедура ОбновитьПлашки(Форма, ВерсияДанных = "", ДанныеЛояльности = Неопределено) Экспорт
	
	Попытка
		ЗаказСсылка = Форма.Заказ.Ссылка;
		НомерКартыЛояльности = ЗаказСсылка.НомерКартыЛояльности;
	Исключение
	КонецПопытки;
	
	Если (ДанныеЛояльности = Неопределено ИЛИ ВерсияДанных = "") И НЕ ЗаказСсылка.Пустая() Тогда
		ДанныеЛояльности = ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(Форма.Заказ, ВерсияДанных);
	КонецЕсли;
	
	Если ДанныеЛояльности = Неопределено ИЛИ ДанныеЛояльности.Пустой ИЛИ ДанныеЛояльности.Ошибка ИЛИ НЕ ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
		Для Инд = 7 По 12 Цикл
			ПереключитьАктивностьКнопки(Форма, Инд, Ложь);
		КонецЦикла;
		Возврат;
	Иначе
		Для Инд = 7 По 12 Цикл
			ПереключитьАктивностьКнопки(Форма, Инд, Истина);
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеЛояльности.Купоны.Количество() = 0 Тогда
		ПереключитьАктивностьКнопки(Форма, 7, Ложь);
	КонецЕсли;
	Если ДанныеЛояльности.Акции.Количество() = 0 Тогда
		ПереключитьАктивностьКнопки(Форма, 12, Ложь);
	КонецЕсли;
	Если НЕ ДанныеЛояльности.Луч = Истина Тогда
		//ПереключитьАктивностьКнопки(Форма, 8, Ложь, Истина);
		ПереключитьАктивностьКнопки(Форма, 8, Ложь);
	КонецЕсли;
	Попытка
		ДЛПЗ = РегистрыСведений.ДанныеЛояльностиПоЗаказу.Получить(Новый Структура("Документ,ТипДанных", ЗаказСсылка, "СкрытьПерсДанные"));
		ТекСкрыть = ДЛПЗ.Данные = "1";
	Исключение
	    ТекСкрыть = Ложь;
	КонецПопытки;
	ПереключитьАктивностьКнопки(Форма, 10, Ложь);
	ПереключитьАктивностьКнопки(Форма, 11, НЕ ТекСкрыть, Истина);
	
КонецПроцедуры

Процедура ПереключитьАктивностьКнопки(Форма, Инд, Активность = Истина, Доступность = Неопределено)
	
	Если Доступность = Неопределено Тогда
		Доступность = Активность;
	КонецЕсли;
	
	ТекЭлемент = Форма.ЭлементыФормы["Плашка" + Инд];
	Если Активность И Доступность Тогда
		ТекЭлемент.Заголовок = ЛояльностьКлиентСерверПовтИсп.СоответствиеЗаголовковПлашек_Активная()[Инд];
		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветТемы;
		ТекЭлемент.ЦветРамки = ЦветаСтиля.ЦветТемы;
		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветФонаГлавнойФормы;
	ИначеЕсли Доступность Тогда	
		ТекЭлемент.Заголовок = ЛояльностьКлиентСерверПовтИсп.СоответствиеЗаголовковПлашек_Неактивная()[Инд];
		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаГлавнойФормы;
		ТекЭлемент.ЦветРамки = ЦветаСтиля.ЦветФонаГлавнойФормы;
		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТемы;
	Иначе	
		ТекЭлемент.Заголовок = ЛояльностьКлиентСерверПовтИсп.СоответствиеЗаголовковПлашек_Неактивная()[Инд];
		ТекЭлемент.ЦветФонаКнопки = Новый Цвет(109,109,109);
		ТекЭлемент.ЦветРамки = Новый Цвет(109,109,109);
		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветФонаГлавнойФормы;
	КонецЕсли;
	
	ТекЭлемент.Доступность = Доступность;
		
КонецПроцедуры


// обновляет элементы главной формы ТабДокЛояльность и ТабДокЛояльностьИтоги
//
Процедура ОбновитьТабДокЛояльность(Форма, ВерсияДанных = "", ДанныеЛояльности = Неопределено) Экспорт 
	
	ФирмаФильтр = Неопределено;
	Попытка
		Макет = ПолучитьОбщийМакет("ТабДокЛояльность");
		ОбластьСтрокаКГЛ = Макет.ПолучитьОбласть("СтрокаКГЛ");
		ОбластьСтрокаИтого = Макет.ПолучитьОбласть("СтрокаИтого");
		
		ТабДок = Форма.ЭлементыФормы.ТабДокЛояльность;
		ТабДок.Очистить();
		ТабДокИтоги = Форма.ЭлементыФормы.ТабДокЛояльностьИтоги;
		ТабДокИтоги.Очистить();
		
		ЗаказСсылка = Форма.Заказ.Ссылка;
		НомерКартыЛояльности = ЗаказСсылка.НомерКартыЛояльности;
		
		ДПИ = Форма.ОбработкаОбъект.ДопПараметрыИнфо;
		Если ТипЗнч(ДПИ) = Тип("Структура") Тогда
			ДПИ.Свойство("ФирмаФильтр", ФирмаФильтр);
		КонецЕсли;
		
	Исключение
	    НомерКартыЛояльности = Неопределено;
	КонецПопытки;
	
	Если НЕ ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеЛояльности = Неопределено ИЛИ ВерсияДанных = "" Тогда
		ДанныеЛояльности = ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(Форма.Заказ, ВерсияДанных);
	КонецЕсли;
	
	Если НЕ ФирмаФильтр = Неопределено Тогда
		ПроектФильтр = ЛояльностьКлиентСерверПовтИсп.ПроектПоМестуРеализации(ФирмаФильтр.МестоРеализации);
	Иначе
		ПроектФильтр = 0;
	КонецЕсли;
	
	Если ПроектФильтр = 0 Тогда
		ТекИтоги = ДанныеЛояльности.Итоги;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	ИначеЕсли ПроектФильтр = 1 Тогда
		ТекИтоги = ДанныеЛояльности.ИтогиО;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	ИначеЕсли ПроектФильтр = 2 Тогда
		ТекИтоги = ДанныеЛояльности.ИтогиМ;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	ИначеЕсли ПроектФильтр = 3 Тогда
		ТекИтоги = ДанныеЛояльности.ИтогиКП;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	КонецЕсли;
	
	Для каждого ТекСтрока Из ТекИтоги.КГЛИнфо Цикл
		ОбластьСтрокаКГЛ.Параметры.Заполнить(ТекСтрока);
		ТабДок.Вывести(ОбластьСтрокаКГЛ);
	КонецЦикла;
	ОбластьСтрокаИтого.Параметры.КГЛ = КГЛНачислено;
	ТабДокИтоги.Вывести(ОбластьСтрокаИтого);
	
	
	//
	//КГЛ = 0;
	//Итоги = ДанныеЛояльности.ИтогиМ.КГЛИнфо;
	//Для каждого ТекСтрока Из Итоги Цикл
	//	КГЛ = КГЛ + ТекСтрока.КГЛ;
	//	Если ТекСтрока.КГЛ > 0 Тогда
	//		ОбластьСтрокаКГЛ.Параметры.Заполнить(ТекСтрока);
	//		ТабДок.Вывести(ОбластьСтрокаКГЛ);
	//	КонецЕсли;
	//КонецЦикла;
	//Итоги = ДанныеЛояльности.ИтогиО.КГЛИнфо;
	//Для каждого ТекСтрока Из Итоги Цикл
	//	КГЛ = КГЛ + ТекСтрока.КГЛ;
	//	Если ТекСтрока.КГЛ > 0 Тогда
	//		ОбластьСтрокаКГЛ.Параметры.Заполнить(ТекСтрока);
	//		ТабДок.Вывести(ОбластьСтрокаКГЛ);
	//	КонецЕсли;
	//КонецЦикла;
	//Итоги = ДанныеЛояльности.ИтогиКП.КГЛИнфо;
	//Для каждого ТекСтрока Из Итоги Цикл
	//	КГЛ = КГЛ + ТекСтрока.КГЛ;
	//	Если ТекСтрока.КГЛ > 0 Тогда
	//		ОбластьСтрокаКГЛ.Параметры.Заполнить(ТекСтрока);
	//		ТабДок.Вывести(ОбластьСтрокаКГЛ);
	//	КонецЕсли;
	//КонецЦикла;
	//Если КГЛ > 0 Тогда
	//	ОбластьСтрокаИтого.Параметры.КГЛ = КГЛ;
	//	ТабДокИтоги.Вывести(ОбластьСтрокаИтого);
	//КонецЕсли;
	//	
КонецПроцедуры

// выполняет все действия предшествующих трех процедур:
//	- обновляет элемент формы НадписьЛояльность1
//	- обновляет заголовки плашек с купонами
//	- обновляет элементы главной формы ТабДокЛояльность и ТабДокЛояльностьИтоги
//
Процедура ОбновитьЭлементыФормы(Форма, ВерсияДанных = "", ДанныеЛояльности = Неопределено) Экспорт
	
	ОбновитьНадписьПриветствие(Форма, ВерсияДанных);
	ОбновитьКупоны(Форма, ВерсияДанных, ДанныеЛояльности);
	ОбновитьПлашки(Форма, ВерсияДанных, ДанныеЛояльности);
	ОбновитьТабДокЛояльность(Форма, ВерсияДанных, ДанныеЛояльности);
	
	Возврат;
	
	Попытка
		Макет = ПолучитьОбщийМакет("ТабДокЛояльность");
		ОбластьСтрокаКГЛ = Макет.ПолучитьОбласть("СтрокаКГЛ");
		ОбластьСтрокаИтого = Макет.ПолучитьОбласть("СтрокаИтого");
		
		ТабДок = Форма.ЭлементыФормы.ТабДокЛояльность;
		ТабДок.Очистить();
		ТабДокИтоги = Форма.ЭлементыФормы.ТабДокЛояльностьИтоги;
		ТабДокИтоги.Очистить();
		
		ЗаказСсылка = Форма.Заказ.Ссылка;
		НомерКартыЛояльности = ЗаказСсылка.НомерКартыЛояльности;
		//Форма.КупоныСоответствие = Новый Соответствие;
	Исключение
	    НомерКартыЛояльности = "";
	КонецПопытки;
	Попытка
		Форма.КупоныСоответствие = Новый Соответствие;
	Исключение
	    //ОписаниеОшибки()
	КонецПопытки; 
	
	Для Инд = 1 По 6 Цикл
		ТекЭлемент = Форма.ЭлементыФормы["Плашка" + Инд];
		ТекЭлемент.Заголовок = "";
		ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
		ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
	КонецЦикла;
	Форма.ЭлементыФормы.Плашка7.ЦветФонаКнопки = ЦветаСтиля.ЦветТемы;
	
	Форма.ЭлементыФормы.НадписьЛояльность1.Заголовок = "Здравствуйте, Гость!
	|Нет карты КеГеЛьБУМ.";

	Если НЕ ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеГостя = ЛояльностьКлиентСервер.ПолучитьДанныеГостя(НомерКартыЛояльности, глПараметрыРМ.Тест);
	Если ДанныеГостя.Ошибка Тогда
		Форма.ЭлементыФормы.НадписьЛояльность1.Заголовок = "Здравствуйте!";
	Иначе	
		НомерКартыЛояльности = СокрЛП(Формат(ДанныеГостя.НомерКарты, "ЧГ=0"));
		Попытка
			Имя = СтрРазделить(ДанныеГостя.ФИО, " ")[0];
		Исключение
			Имя = "Гость";
		КонецПопытки;
		Форма.ЭлементыФормы.НадписьЛояльность1.Заголовок = СтрШаблон("Здравствуйте, %1!
		|Карта %2*****%3", Имя, Лев(НомерКартыЛояльности, 2), Прав(НомерКартыЛояльности, 4));
	КонецЕсли;
	
	Если ДанныеЛояльности = Неопределено ИЛИ ВерсияДанных = "" Тогда
		ДанныеЛояльности = ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(Форма.Заказ, ВерсияДанных);
	КонецЕсли;
		
	КупоныГостя = ДанныеЛояльности.Купоны;
	Для Сч = 0 По КупоныГостя.ВГраница() Цикл
		Инд = Сч + 1;
		Если Инд > 6 Тогда
			Прервать;
		КонецЕсли;
		ТекЭлемент = Форма.ЭлементыФормы["Плашка" + Инд];
		ТекЭлемент.Заголовок = КупоныГостя[Сч].ИнфоСтанции;
		//ТекЭлемент.Видимость = Истина;
		Если КупоныГостя[Сч].Статус = -1 Тогда
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
			ТекЭлемент.ЦветТекстаКнопки = WebЦвета.Красный;
		ИначеЕсли КупоныГостя[Сч].Статус = 0 Тогда
			ТекЭлемент.ЦветФонаКнопки = WebЦвета.Лосось;
			ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
		ИначеЕсли КупоныГостя[Сч].Статус = 1 Тогда	
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаФормы;
			ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
		ИначеЕсли КупоныГостя[Сч].Статус = 2 Тогда	
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.ЦветФонаОплаченнойСтроки;
			ТекЭлемент.ЦветТекстаКнопки = WebЦвета.Черный;
		ИначеЕсли КупоныГостя[Сч].Статус = 3 Тогда	
			ТекЭлемент.ЦветФонаКнопки = ЦветаСтиля.НеактивнаяКнопка;
			ТекЭлемент.ЦветТекстаКнопки = ЦветаСтиля.ЦветТекстаКнопки;
		КонецЕсли;
		
		Попытка
		Форма.КупоныСоответствие.Вставить(Формат(Сч + 1, "ЧДЦ=; ЧГ=0"), КупоныГостя[Сч].Код);
		Исключение
		    //ОписаниеОшибки()
		КонецПопытки; 
	КонецЦикла;
	
	Если КупоныГостя.Количество() > 6 Тогда
		Форма.ЭлементыФормы.Плашка7.ЦветФонаКнопки = ЦветаСтиля.Акцент;
	КонецЕсли;
		
	КГЛ = 0;
	Итоги = ДанныеЛояльности.ИтогиМ.КГЛИнфо;
	Для каждого ТекСтрока Из Итоги Цикл
		КГЛ = КГЛ + ТекСтрока.КГЛ;
		Если ТекСтрока.КГЛ > 0 Тогда
			ОбластьСтрокаКГЛ.Параметры.Заполнить(ТекСтрока);
			ТабДок.Вывести(ОбластьСтрокаКГЛ);
		КонецЕсли;
	КонецЦикла;
	Итоги = ДанныеЛояльности.ИтогиО.КГЛИнфо;
	Для каждого ТекСтрока Из Итоги Цикл
		КГЛ = КГЛ + ТекСтрока.КГЛ;
		Если ТекСтрока.КГЛ > 0 Тогда
			ОбластьСтрокаКГЛ.Параметры.Заполнить(ТекСтрока);
			ТабДок.Вывести(ОбластьСтрокаКГЛ);
		КонецЕсли;
	КонецЦикла;
	Итоги = ДанныеЛояльности.ИтогиКП.КГЛИнфо;
	Для каждого ТекСтрока Из Итоги Цикл
		КГЛ = КГЛ + ТекСтрока.КГЛ;
		Если ТекСтрока.КГЛ > 0 Тогда
			ОбластьСтрокаКГЛ.Параметры.Заполнить(ТекСтрока);
			ТабДок.Вывести(ОбластьСтрокаКГЛ);
		КонецЕсли;
	КонецЦикла;
	Если КГЛ > 0 Тогда
		ОбластьСтрокаИтого.Параметры.КГЛ = КГЛ;
		ТабДокИтоги.Вывести(ОбластьСтрокаИтого);
	КонецЕсли;
	
КонецПроцедуры

Функция ВводКартыЛояльности(ЗаказОбъект) Экспорт
	
	Результат = Новый Структура("Ошибка,ТоварКарты", Ложь, Неопределено);
	
	// не спрашиваем, если карта уже привязана
	Если НЕ ПустаяСтрока(ЗаказОбъект.НомерКартыЛояльности) Тогда
		Результат.Ошибка = Истина;
		Возврат Результат;
	КонецЕсли;
	
	// не спрашиваем, если гость ранее уже отказался
	Если ЗаказОбъект.ОтказОтКартыЛояльности > 0 Тогда
		Результат.Ошибка = Истина;
		Возврат Результат;
	КонецЕсли;
	
	//СтруктураЗаказа = Новый Структура;
	//СтруктураЗаказа.Вставить("НомерКартыЛояльности", ЗаказОбъект.НомерКартыЛояльности);
	//ОтветЛояльности = ЛояльностьКлиент.ВвестиКарту(СтруктураЗаказа);
	Если ЛояльностьКлиент.ВвестиКарту(ЗаказОбъект) И НЕ ПустаяСтрока(ЗаказОбъект.НомерКартыЛояльности) Тогда
		
	//	ЗаказОбъект.НомерКартыЛояльности = СтруктураЗаказа.НомерКартыЛояльности;
	//	//ЛояльностьКлиент.ОткрытьЗаказ(ЗаказОбъект);
	//	//ЗаписатьЗаказ(ЗаказОбъект, ПредопределенноеЗначение("Перечисление.СтатусыЗаказа.Открыт"));
	//	//Лояльность.ОбновитьПредварительныйРасчетЗаказа(ЗаказОбъект.Ссылка, глПараметрыРМ.Тест);
	//	
	Иначе  
			
		ДисплейИнфо = "";
		
		ОтветГостя1 = ИнтерфейсРМ.ВопросПредупреждение(
			"Заказ открыт!",
			"Давайте приобретем карту КеГеЛьБУМ",
			ДисплейИнфо,
			"Esc=Отказаться",
			"",
			"Купить карту");
			
		Если ОтветГостя1 = "Купить карту" Тогда
				
			Если ЛояльностьКлиент.ВвестиКарту(ЗаказОбъект, "Считайте новую карту КеГеЛьБУМ", Истина) Тогда

				Если НЕ ПустаяСтрока(ЗаказОбъект.НомерКартыЛояльности) Тогда
					// добавление карты в список товаров
					ТоварКарты = ИнтерфейсРМ.НайтиТоварПоКоду(Лояльность.ПолучитьКодТовараКарты(ЛояльностьКлиентСервер.ПолучитьТекущийРегион()));
					
					// товар не найден - выход
					Если ТоварКарты = Справочники.Товары.ПустаяСсылка() Тогда
						ЗаказОбъект.НомерКартыЛояльности = "";
						ИнтерфейсРМ.ВопросПредупреждение("КеГеЛьБУМ","","Не найден товар карты лояльности (код 16020001/16020002)","","Вернуться в чек","");
						ЛояльностьКлиентСервер.Логирование(1, "расчет", "товар карты не найден");
						
						Результат.Ошибка = Истина;
						
					Иначе
						
						Результат.ТоварКарты = ТоварКарты;

					КонецЕсли;
					
					
					//// добавление карты в заказ, если ее там еще нет
					//ЗаписатьЗаказ(ЗаказОбъект, ПредопределенноеЗначение("Перечисление.СтатусыЗаказа.Открыт"));
					//СтрокаТЧ = ЗаказОбъект.Товары.Найти(ТоварКарты, "Товар");
					//Если СтрокаТЧ = Неопределено Тогда
					//	ВводНовойСтроки(ТоварКарты);
					//КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			ОтветГостя = ИнтерфейсРМ.ВопросПредупреждение(
				"Заказ открыт!",
				"У Вас есть карта КеГеЛьБУМ?",
				"Давайте сразу ее свяжем с Вашим бейджем!
				|Тогда для начисления или списания КеГЛей Вы можете
				|пользоваться только этим бейджем
				|А также Вы сможете воспользоваться
				|своими персональными предложениями!
				|
				|Если Карта предъявлена - прокатайте
				|
				|Если Карты нет - предложите купить, прокатайте и выдайте
				|
				|Если Карта не прокатана, нажмите на одну из кнопок:",
				"Esc=Не хочу приобретать",
				"Забыл карту дома",
				"Позже предъявлю",
				,,,12);
			Если ОтветГостя = "Не хочу приобретать" Тогда
				// больше не спрашивать
				ЗаказОбъект.ОтказОтКартыЛояльности = 1;
			ИначеЕсли ОтветГостя = "Забыл карту дома" Тогда 
				// ПОКА больше не спрашивать
				ЗаказОбъект.ОтказОтКартыЛояльности = 2;
			Иначе
				// спросить позже
				ЗаказОбъект.ОтказОтКартыЛояльности = 0;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОткрытьМенюЛояльности() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МенюЛояльности.Ссылка КАК Ссылка,
	|	ВЫБОР МенюЛояльности.Станция
	|		КОГДА ЗНАЧЕНИЕ(Справочник.МенюЛояльности.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДляВсехСтанций
	|ИЗ
	|	Справочник.МенюЛояльности КАК МенюЛояльности
	|ГДЕ
	|	МенюЛояльности.Регион = &Регион
	|	И МенюЛояльности.ТипТТ = &ТипТТ
	|	И (МенюЛояльности.Станция = &Станция
	|			ИЛИ МенюЛояльности.Станция = ЗНАЧЕНИЕ(Справочник.МенюЛояльности.ПустаяСсылка))
	|	И (МенюЛояльности.ДатаНачалаДействия <= &ТекДата
	|			ИЛИ МенюЛояльности.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1))
	|	И (МенюЛояльности.ДатаОкончанияДействия >= &ТекДата
	|			ИЛИ МенюЛояльности.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1))
	|	И НЕ МенюЛояльности.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДляВсехСтанций,
	|	МенюЛояльности.ДатаНачалаДействия УБЫВ");
	Запрос.УстановитьПараметр("Станция", глПараметрыРМ.Станция);
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДатаНаСервере()));
	Запрос.УстановитьПараметр("Регион", глПараметрыРМ.ИнформационнаяБаза.Регион);
	Запрос.УстановитьПараметр("ТипТТ", глПараметрыРМ.Фирма.ТипТТ);
	Рез =  Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка","","Настройка меню с таким сочетанием региона, станции и места реализации не задана!","","ОК","");
		
		Возврат Неопределено;
	КонецЕсли;
	
	Форма = Рез.Выгрузить()[0][0].ПолучитьФорму();
	РезультатОткрытия = Форма.ОткрытьМодально();
	Возврат	РезультатОткрытия;
КонецФункции

// Получает текстовые представления акций
// используется в тестовых целях
//
Функция ПолучитьГруппыАкцийСоответствие()
	
	ГруппыАкций = Новый Соответствие;
	ГруппыАкций.Вставить( 7,	"1+1");
	ГруппыАкций.Вставить( 8,	"2+1");
	ГруппыАкций.Вставить( 9,	"3+1");
	ГруппыАкций.Вставить(10,	"4+1");
	ГруппыАкций.Вставить(11,	"5+1");
	ГруппыАкций.Вставить(13,	"ЛУЧ");
	ГруппыАкций.Вставить(14,	"БКГЛ");
	ГруппыАкций.Вставить(15,	"х3");
	ГруппыАкций.Вставить(16,	"х5");
	ГруппыАкций.Вставить(17,	"х7");
	ГруппыАкций.Вставить(18,	"х10");
	ГруппыАкций.Вставить(20,	"Серт");
	ГруппыАкций.Вставить(21,	"ПП");
	ГруппыАкций.Вставить(22,	"БКГЛ");
	ГруппыАкций.Вставить(23,	"БКГЛ");
	ГруппыАкций.Вставить(25,	"ПП");
	ГруппыАкций.Вставить(27,	"ПП");
	ГруппыАкций.Вставить(29,	"ТП");
	ГруппыАкций.Вставить(30,	"ТП");

//	ГруппыАкций.Вставить(12,	"БН");

	Возврат ГруппыАкций;
	
КонецФункции

// Формирует табличный документ с данными лояльности
// для вывода на мониторе гостя
//
Функция ПолучитьТабДокЛояльность_МониторГостя(ЗаказСсылка, ВерсияДанных = "", ДанныеЛояльности = Неопределено, Фирма = Неопределено) Экспорт
	
	ФирмаКратко = "";
	ПроектФильтр = 0;
	Если Фирма = Неопределено Тогда
	ИначеЕсли Фирма.МестоРеализации = ПредопределенноеЗначение("Справочник.МестаРеализации.Ресторан") Тогда	
		ФирмаКратко = "Кухне Полли";
		ПроектФильтр = 3;
	Иначе
		ФирмаКратко = Строка(Фирма.МестоРеализации);
		ПроектФильтр = ?(Фирма.МестоРеализации = ПредопределенноеЗначение("Справочник.МестаРеализации.Мяснов"), 2, 1);
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	
	Попытка
		НомерКартыЛояльности = ЗаказСсылка.НомерКартыЛояльности;
	Исключение
	    НомерКартыЛояльности = Неопределено;
	КонецПопытки;
	Попытка
		Макет = ПолучитьОбщийМакет("ИД_Лояльность361х1024");
	Исключение
	    Возврат ТабДок;
	КонецПопытки;
	
	//Если НЕ ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
	//	//ТабДок.Вывести(Макет.ПолучитьОбласть("НетКарты"));
	//	Возврат ТабДок;
	//КонецЕсли;
	
	// Приветствие
	Если ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
		ДанныеГостя = ЛояльностьКлиентСервер.ПолучитьДанныеГостя(НомерКартыЛояльности, глПараметрыРМ.Тест);
		Если НЕ ДанныеГостя.Ошибка  Тогда
			//////Если НЕ ПустаяСтрока(ДанныеГостя.ФИО) Тогда 
			//////	Имя = СтрРазделить(ДанныеГостя.ФИО, " ")[0];
			//////	ДоброПожаловать = Имя + ", добро пожаловать в КуулКЛЕВЕР!";	
			//////КонецЕсли;
			НомерКартыЛояльности = СокрЛП(Формат(ДанныеГостя.НомерКарты, "ЧГ=0"));
		КонецЕсли;
	КонецЕсли;
	ДоброПожаловать = "Предложения для Вас:";
	Если НЕ ФирмаКратко = "" Тогда
		ДоброПожаловать = СтрШаблон("Предложения для Вас в %1:", ФирмаКратко);
	КонецЕсли;
	
	ОблМакета = Макет.ПолучитьОбласть("Шапка");
	ОблМакета.Параметры.ДоброПожаловать = ДоброПожаловать;
	ОблМакета.Параметры.НомерКартыЛояльности = СтрШаблон("%1*****%2", Лев(НомерКартыЛояльности, 2), Прав(НомерКартыЛояльности, 3));
	ТабДок.Вывести(ОблМакета);
	
	Если ДанныеЛояльности = Неопределено ИЛИ ВерсияДанных = "" Тогда
		ДанныеЛояльности = ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(ЗаказСсылка, ВерсияДанных);
	КонецЕсли;
	//Инициализация фильтров
	ЕстьЛуч = Ложь;
	КГЛНачислено = 0;
	Если ПроектФильтр = 0 Тогда
		ДанныеЛояльности.Свойство("Луч", ЕстьЛуч);
		ТекИтоги = ДанныеЛояльности.Итоги;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	ИначеЕсли ПроектФильтр = 1 Тогда
		ДанныеЛояльности.Свойство("ЛучО", ЕстьЛуч);
		ТекИтоги = ДанныеЛояльности.ИтогиО;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	ИначеЕсли ПроектФильтр = 2 Тогда
		ДанныеЛояльности.Свойство("ЛучМ", ЕстьЛуч);
		ТекИтоги = ДанныеЛояльности.ИтогиМ;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	ИначеЕсли ПроектФильтр = 3 Тогда
		ДанныеЛояльности.Свойство("ЛучКП", ЕстьЛуч);
		ТекИтоги = ДанныеЛояльности.ИтогиКП;
		КГЛНачислено = ТекИтоги.КГЛНачислено;
	КонецЕсли;
	
	// Купоны
	МаксКупонов = 6;
	ВыведеноКупонов = 0;
	
	Если ДанныеЛояльности.Свойство("Купоны") Тогда
		тдКупоны = ВывестиКупоныГостяПоСпискуСОтбором(ДанныеЛояльности.Купоны, Макет, ВыведеноКупонов, МаксКупонов, ПроектФильтр);
		ТабДок.Вывести(тдКупоны);
	КонецЕсли;
	Если ДанныеЛояльности.Свойство("Акции") Тогда
		тдКупоны = ВывестиКупоныГостяПоСпискуСОтбором(ДанныеЛояльности.Акции, Макет, ВыведеноКупонов, МаксКупонов, ПроектФильтр);
		ТабДок.Вывести(тдКупоны);
	КонецЕсли;
	
	//КупоныГостя = ДанныеЛояльности.Купоны;
	//Для Сч = 0 По КупоныГостя.ВГраница() Цикл
	//	ТекСтатус = КупоныГостя[Сч].Статус;
	//	
	//	Если ТекСтатус = -1 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	//Если ТекСтатус < 0 ИЛИ ТекСтатус > 2 Тогда
	//	//	Продолжить;
	//	//КонецЕсли;
	//	
	//	ОблМакета = Макет.ПолучитьОбласть("КупонСтатус" + ТекСтатус);
	//	ОблМакета.Параметры.ИнфоГостя = КупоныГостя[Сч].ИнфоГостя;
	//	ТабДок.Вывести(ОблМакета);
	//	ВыведеноКупонов = ВыведеноКупонов + 1;
	//	Если ВыведеноКупонов = МаксКупонов Тогда
	//		Прервать;
	//	КонецЕсли;
	//КонецЦикла;
	
	Если ВыведеноКупонов < МаксКупонов Тогда
		ОблМакета = Макет.ПолучитьОбласть("КупонПустой");
		Для Сч = ВыведеноКупонов + 1 По МаксКупонов Цикл
			ТабДок.Вывести(ОблМакета);
		КонецЦикла;
	КонецЕсли;
	
	// ЛУЧ
	ОблМакета = Макет.ПолучитьОбласть("ЛУЧ");
	Если ЕстьЛуч = Истина Тогда
		ОблМакета.Параметры.Текст = 
			СтрШаблон("Вы - ЛУЧший покупатель %1. 
			|Попросите продавца показать список Ваших любимых продуктов.",
			ФирмаКратко);
	Иначе
		ОблМакета.Параметры.Текст = "Хотите в 5 раз больше КеГЛей на любимые продукты? Подключите программу ЛУЧший покупатель.";
	КонецЕсли;
	ТабДок.Вывести(ОблМакета);
	
	// Итоги
	ОблМакета = Макет.ПолучитьОбласть("ИтогиШапка");
	ОблМакета.Параметры.ФирмаКратко = ?(ФирмаКратко = "", "за весь заказ", СтрЗаменить(ФирмаКратко, "хне", "хня"));
	ОблМакета.Параметры.КГЛ = КГЛНачислено;
	ТабДок.Вывести(ОблМакета);
	
	// говнокодим обход фирм
	СтрокПодвала = 8;
	ВыведеноСтрок = 0; // из 8
//1102	ОбходФирм = Новый Массив;
//1102	ОбходФирм.Добавить("ИтогиМ");
//1102	ОбходФирм.Добавить("ИтогиО");
//1102	ОбходФирм.Добавить("ИтогиКП");
	
//1102	ТекФирма = "Итоги" +  ВРег(Лев(глПараметрыРМ.Фирма, 1));
//1102	ТекФирма = ?(ТекФирма = "ИтогиК", "ИтогиКП", ТекФирма);
//1102	ОбходФирм.Удалить(ОбходФирм.Найти(ТекФирма));
	
//1102	ТекФирмаИмя = ?(ТекФирма = "ИтогиМ", "МясновЪ", ?(ТекФирма = "ИтогиО", "ОТДОХНИ", "Кухне Полли"));
	
//1102	ТекИтоги = ДанныеЛояльности[ТекФирма];
//1102	ВывестиСтрокуИтогов(ТабДок, Макет, ВыведеноСтрок, "Будет начислено в " + ТекФирмаИмя, ТекИтоги.КГЛНачислено, Истина);
	
	Для каждого ТекСтрока Из ТекИтоги.КГЛИнфо Цикл
		ВывестиСтрокуИтогов(ТабДок, Макет, ВыведеноСтрок, ТекСтрока.Текст, ТекСтрока.КГЛ);
	КонецЦикла;
	
	Если ВыведеноСтрок < СтрокПодвала Тогда
		Пока ВыведеноСтрок < СтрокПодвала Цикл
			ВывестиСтрокуИтогов(ТабДок, Макет, ВыведеноСтрок);
		КонецЦикла;
	КонецЕсли;
	
//1102	Для каждого ТекФирма Из ОбходФирм Цикл
//1102		ТекИтоги = ДанныеЛояльности[ТекФирма];
//1102		Если ТекИтоги.КГЛНачислено Тогда
//1102			ТекФирмаИмя = ?(ТекФирма = "ИтогиМ", "МясновЪ", ?(ТекФирма = "ИтогиО", "ОТДОХНИ", "Кухне Полли"));
//1102			ВывестиСтрокуИтогов(ТабДок, Макет, ВыведеноСтрок, "Начислено в " + ТекФирмаИмя, ТекИтоги.КГЛНачислено, Истина);
//1102		Иначе
//1102			ВывестиСтрокуИтогов(ТабДок, Макет, ВыведеноСтрок);
//1102		КонецЕсли;
//1102	КонецЦикла;
	
	//Подвал
	Если ПроектФильтр = 0 Тогда
		ОблМакета = Макет.ПолучитьОбласть("ПодвалСКартойПусто");
	ИначеЕсли ПустаяСтрока(НомерКартыЛояльности) Тогда
		ОблМакета = Макет.ПолучитьОбласть("ПодвалБезКарты");
	Иначе
		ОблМакета = Макет.ПолучитьОбласть("ПодвалСКартой");
	КонецЕсли;
	ТабДок.Вывести(ОблМакета);

	Возврат ТабДок;
		
КонецФункции

Функция ВывестиКупоныГостяПоСпискуСОтбором(КупоныГостя, Макет, ВыведеноКупонов, МаксКупонов, ПроектФильтр = 0)
	
	ТабДок = Новый ТабличныйДокумент;
	
	Для Сч = 0 По КупоныГостя.ВГраница() Цикл
		ТекСтатус = КупоныГостя[Сч].Статус;
		ТекПроект = КупоныГостя[Сч].Проект;
		
		Если НЕ ПроектФильтр = 0 И НЕ ТекПроект = 0 И НЕ ТекПроект = ПроектФильтр Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтатус = -1 Тогда
			Продолжить;
		КонецЕсли;
		ВыведеноКупонов = ВыведеноКупонов + 1;
		Если ВыведеноКупонов > МаксКупонов Тогда
			Прервать;
		КонецЕсли;
		//Если ТекСтатус < 0 ИЛИ ТекСтатус > 2 Тогда
		//	Продолжить;
		//КонецЕсли;
		
		ОблМакета = Макет.ПолучитьОбласть("КупонСтатус" + ТекСтатус);
		ОблМакета.Параметры.ИнфоГостя = КупоныГостя[Сч].ИнфоГостя;
		ТабДок.Вывести(ОблМакета);
	КонецЦикла;
	
	Возврат ТабДок;
		
КонецФункции


Процедура ВывестиСтрокуИтогов(ТабДок, Макет, ВыведеноСтрок, Знач Текст = "", КГЛ = 0, Итоги = Ложь)
	
	Если НЕ Итоги И НЕ Текст = "" Тогда
		Текст = Лев(Текст, СтрДлина(Текст) - 2);
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Текст,КГЛ", Текст, КГЛ);
	Если Итоги Тогда
		ИмяОбласти = "ИтогиМР";
	ИначеЕсли НЕ КГЛ = 0 Тогда 	
		ИмяОбласти = "ИтогиДетально";
	ИначеЕсли Текст = "" Тогда
		ИмяОбласти = "ИтогиПустаяСтрока";
	Иначе	
		ИмяОбласти = "ИтогиДетально0";
	КонецЕсли;
	ОблМакета = Макет.ПолучитьОбласть(ИмяОбласти);
	ОблМакета.Параметры.Заполнить(СтруктураПараметров);
	ТабДок.Вывести(ОблМакета);
	
	ВыведеноСтрок = ВыведеноСтрок + 1;
	
КонецПроцедуры

Функция СформироватьУрлТовараДляМонитораГостя(ТоварСсылка, Цена = 0, КГЛ = 0, ТолькоТекст = Ложь) Экспорт 

	Если ТоварСсылка.Пустая() Тогда
		Возврат "";
	КонецЕсли;
	
	ИД = "0000000000000000";
	Регион = ЛояльностьКлиентСервер.ПолучитьТекущийРегионСтрокой();

	Если Регион = "52" Тогда
		ИД = ТоварСсылка.Номенклатура.КодСУП + "00000000";
	ИначеЕсли Регион = "77" Тогда
		ИД = "00000000" + ТоварСсылка.Номенклатура.КодСУП;
	КонецЕсли;
	
	УРЛ = СтрШаблон("https://www.kegelbum.ru/getinfo/%4?id=%1&price=%2&kgl=%3", ИД, Формат(Цена, "ЧДЦ=2; ЧН=0.00; ЧГ=0"), Формат(КГЛ, "ЧДЦ=; ЧН=0; ЧГ=0"),?(ТолькоТекст, "text/", ""));
	
	Возврат УРЛ;
	
КонецФункции

Процедура ПоказатьИнформациюОТоваре(Товар, ЛояльностьДанныеЗаказа = Неопределено, ИдСтроки = "", РежимПредпросмотра = Ложь, Действие = "") Экспорт 
	Обработка = ИнтерфейсРМ.ПолучитьОбъектОбработки("ИнформацияОтоваре");
	//: Обработка = Обработки.ИнформацияОтоваре.Создать();
	Обработка.Товар = Товар;
	Обработка.РежимПредпросмотра = РежимПредпросмотра;
	Если ПустаяСтрока(Действие) Тогда
		Обработка.ВариантОтображенияКнопок = 2;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдСтроки) 
		И ТипЗнч(ЛояльностьДанныеЗаказа) = Тип("Структура") 
		И ЛояльностьДанныеЗаказа.Свойство("СоставЗаказа") 
		И ТипЗнч(ЛояльностьДанныеЗаказа.СоставЗаказа) = Тип("Массив")
		Тогда
		
		Для каждого ТекСтрокаСостава Из ЛояльностьДанныеЗаказа.СоставЗаказа Цикл
			Если ТекСтрокаСостава.ИдСтроки = ИдСтроки Тогда
				Обработка.Цена = ТекСтрокаСостава.ЦенаФакт;
				Обработка.КГЛ = ТекСтрокаСостава.КГЛНачислено;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Результат = Обработка.ПолучитьОсновнуюФорму().ОткрытьМодально();
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Результат.Свойство("РежимПредпросмотра", РежимПредпросмотра);
		Результат.Свойство("Действие", Действие);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеРецептыГостя(ГлавнаяФорма) Экспорт 
	
	НомерКартыЛояльности = ГлавнаяФорма.Заказ.НомерКартыЛояльности;
	
	Если НЕ ЗначениеЗаполнено(НомерКартыЛояльности) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаРецептыГостя = ИнтерфейсРМ.ПолучитьОбъектОбработки("РецептыГостя");
	ОбработкаРецептыГостя.НомерКартыЛояльности = НомерКартыЛояльности;
	ОбработкаРецептыГостя.ТТ = глРабочееМесто.ИнформационнаяБаза;
	ОбработкаРецептыГостя.ГлавнаяФорма = ГлавнаяФорма;
	
	РезультатДействия = ОбработкаРецептыГостя.ВыбратьВыполнитьДействие();
	Если РезультатДействия.Свойство("ВыбратьРецептГостя") И ЗначениеЗаполнено(РезультатДействия.ВыбратьРецептГостя) Тогда
		
		РецептСсылка = РезультатДействия.ВыбратьРецептГостя;
		СтруктураВыбораРецепта = Новый Структура;
		СтруктураВыбораРецепта.Вставить("Рецепт", РецептСсылка);
		СтруктураВыбораРецепта.Вставить("ДатаВыбора", ТекущаяДата());
		
		СохранитьЗначение("ВыбранныйРецептГостя", СтруктураВыбораРецепта);
		ГлавнаяФорма.ВводНовойСтроки(РецептСсылка.Блюдо);
		
	ИначеЕсли РезультатДействия.Свойство("РедактироватьРецептГостя") И ЗначениеЗаполнено(РезультатДействия.РедактироватьРецептГостя) Тогда
		
		Результат = РезультатДействия.РедактироватьРецептГостя;
		Если Результат.Ошибка Тогда
			ИнтерфейсРМ.ВопросПредупреждение("Создание рецепта гостя...", Результат.Текст1, "", "", "Esc=OK", "");
		Иначе
			Ответ = ИнтерфейсРМ.ВопросПредупреждение("Создание рецепта гостя...", Результат.Текст1, Результат.Текст2, "Да", "", "Esc=Нет");
			Если Ответ = "Да" Тогда
				СтруктураВыбораРецепта = Новый Структура;
				СтруктураВыбораРецепта.Вставить("Рецепт", Результат.Рецепт);
				СтруктураВыбораРецепта.Вставить("ДатаВыбора", ТекущаяДата());
				
				СохранитьЗначение("ВыбранныйРецептГостя", СтруктураВыбораРецепта);
				ГлавнаяФорма.ВводНовойСтроки(Результат.Рецепт.Блюдо);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли РезультатДействия.Свойство("СохранитьРецептГостя") И ЗначениеЗаполнено(РезультатДействия.СохранитьРецептГостя) Тогда
		
		ИнтерфейсРМ.ВопросПредупреждение("Создание рецепта гостя...", РезультатДействия.СохранитьРецептГостя, "", "", "Esc=OK", "");
		
	КонецЕсли;
	
КонецПроцедуры

#Область УДАЛИТЬ

Функция ОбновитьТовары(Форма, ВерсияДанных = Неопределено, ТабличноеПоле = Неопределено) Экспорт 
	
	Возврат ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(Форма.Заказ, ВерсияДанных);
	//ОбнТов
	
	
	
	Попытка
		ЗаказСсылка = Форма.Заказ.Ссылка;
	Исключение
	    Возврат Неопределено;
	КонецПопытки;

	Если ТабличноеПоле = Неопределено ИЛИ НЕ ТипЗнч(ТабличноеПоле) = Тип("ТаблицаЗначений") Тогда
		Возврат ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(Форма.Заказ, ВерсияДанных); 
	КонецЕсли;
	
	Если ТабличноеПоле.Колонки.Найти("КГЛ") = Неопределено Тогда
		НовКолонка = ТабличноеПоле.Колонки.Добавить("КГЛ", "КеГЛи");
		НовКолонка.ЦветТекстаПоля = ЦветаСтиля.ЦветТемы;
		НовКолонка.ШрифтТекста = Новый Шрифт(НовКолонка.ШрифтТекста,,,Истина);
		НовКолонка.Ширина = 8;
	КонецЕсли;
	Если ТабличноеПоле.Колонки.Найти("ГруппаАкции") = Неопределено Тогда
		НовКолонка = ТабличноеПоле.Колонки.Добавить("ГруппаАкции", "Акция");
		НовКолонка.Ширина = 5;
	КонецЕсли;
	
	ГруппыАкций = ПолучитьГруппыАкцийСоответствие();
	
	ДанныеЛояльности = ЛояльностьКлиент.ПолучитьДанныеЛояльностиПоЗаказу(Форма.Заказ, ВерсияДанных);
	Если НЕ ЗначениеЗаполнено(ДанныеЛояльности) Тогда
		Возврат ДанныеЛояльности;
	КонецЕсли;
	Для каждого ТекСтрока Из ДанныеЛояльности.СоставЗаказа Цикл
		Стр = ТабличноеПоле.Найти(ТекСтрока.ИдСтроки, "ИдСтроки");
		Если Стр = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Стр.КГЛ = ТекСтрока.КГЛНачислено;
		//Стр.ГруппаАкцииЙ = ТекСтрока.ГруппаАкции;
		ТекстАкций = ГруппыАкций.Получить(ТекСтрока.ГруппаАкции);
		Стр.ГруппаАкции = ?(ТекстАкций = Неопределено, "", ТекстАкций);
	КонецЦикла; 
	Возврат ДанныеЛояльности;	
КонецФункции

#КонецОбласти

#КонецЕсли
