
#Если Клиент Тогда
	
	Перем ИнформацияРасшифровки Экспорт;               // информация расшифроки отчета.
	Перем ЗапросИсх Экспорт;                           // исходный запрос
	Перем ШиринаКолонок;
	Перем Задание; 
	Перем ЗаголовокНастройка;
	Перем НастройкиОтчетаНаМоментФормирования Экспорт; // настройка при формировании отчета.
	
	// Устанавливает параметры
	//
	Процедура УстановитьПараметры()
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаС");
		Параметр.Значение = НачалоДня(ДатаС);
		Параметр.Использование = Истина;
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаПо");
		Параметр.Значение = КонецДня(ДатаПо);
		Параметр.Использование = Истина;
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("МассивСмен");
		
		Параметр.Значение = МассивСмен;
		Параметр.Использование = Истина;
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПараметрДата");
		
		Параметр.Использование = Истина;
		Если МассивСмен = Неопределено Тогда
			Параметр.Значение = Истина;	
		Иначе
			Параметр.Значение = Ложь;	
		КонецЕсли;	
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПустаяДата");
		Параметр.Значение = Дата("00010101");
		Параметр.Использование = Истина;
		
		
	КонецПроцедуры
	
	// Выводит отчет в табличный документ.
	//
	// Параметры:
	//  ТабличныйДокумент - табличный документ, в который выводится отчет.
	//
	Процедура СформироватьОтчет(ТабличныйДокумент = "", НаПринтер = Ложь, ВарФормирования = 0, ЭлементыФормы = "") Экспорт
		
		КомпоновщикНастроек.Настройки.Структура.Очистить();
		
		Если ПоказыватьДиаграмму И ПараметрВыводаДиаграммы = 0 Тогда
			СформироватьДиаграмму();
		КонецЕсли;
		
		Заголовок = "ЖУРНАЛ УЧЕТА РАБОЧЕГО ВРЕМЕНИ" + Символы.ПС + Период;
		
		КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок")).Значение = Заголовок;
		
		// добавим поле группировки
		ГруппировкаРодитель = КомпоновщикНастроек.Настройки;
		
		ДопГруппировки = ГруппировкаРодитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		
		ПолеГруппировки                = ДопГруппировки.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Использование  = Истина;
		ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
		
		ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ВариантФормирования);
		
		НовоеВыбранноеПоле = ДопГруппировки.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ГруппировкаРодитель = ДопГруппировки;	 
			
		ГруппировкаПоПериоду = ГруппировкаРодитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		
		ПолеГруппировки                = ГруппировкаПоПериоду.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Использование  = Истина;
		ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
		ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ВидПериода);
		
		// Добавим колонку дня недели рядом с датой
		Если ВидПериода = "День" Тогда
			
			ПолеГруппировки                = ГруппировкаПоПериоду.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных("ДниНедели");
						
		КонецЕсли;
		НовоеВыбранноеПоле = ГруппировкаПоПериоду.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ГруппировкаРодитель = ГруппировкаПоПериоду;	 
		
		Если РасшифровыватьПоДокументам Тогда
			ГруппировкаПоДокументУчетаВремени = ГруппировкаРодитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			ПолеГруппировки                = ГруппировкаПоДокументУчетаВремени.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных("ДокументУчетаВремени"); 
			НовоеВыбранноеПоле = ГруппировкаПоДокументУчетаВремени.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных")); 
			
		КонецЕсли;
		
		УстановитьПараметры();
		
		Если ПоказыватьДиаграмму И ПараметрВыводаДиаграммы = 1 Тогда
			СформироватьДиаграмму();
		КонецЕсли;
		
		ФормированиеОтчетов.отчСформироватьОтчет(ЭтотОбъект, ТабличныйДокумент,,,ЭлементыФормы);
		
		НастройкиОтчетаНаМоментФормирования = ПолучитьТекущиеНастройки();
		
	КонецПроцедуры
	
	// Формирует диаграмму.
	//
	Процедура СформироватьДиаграмму() Экспорт
		
		Диаграмма = КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ДиаграммаКомпоновкиДанных"));
		ВыбранноеПоле = Диаграмма.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Использование = Истина;
		ВыбранноеПоле.Заголовок = "Отработано часов";
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ОтработаноЧасовДляДиаграммы");
		
		Серия = Диаграмма.Серии.Добавить();
		Серия.Использование = Истина;
		Поле = Серия.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		Поле.Поле = Новый ПолеКомпоновкиДанных(ВариантФормирования);
		Поле.Использование = Истина;
		Поле.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
		
		НовоеВыбранноеПоле = Серия.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		Параметр = Диаграмма.ПараметрыВывода.Элементы.Найти("ТипДиаграммы");
		Параметр.Значение = ТипДиаграммы;
		Параметр.Использование = Истина;
		
		Параметр2 = Диаграмма.ПараметрыВывода.Элементы.Найти("TitleOutput");
		Параметр2.Значение = ТипВыводаТекстаКомпоновкиДанных.Выводить;
		Параметр2.Использование = Ложь;
		
		Параметр4 = Параметр.ЗначенияВложенныхПараметров.Найти("ТипДиаграммы.РасположениеЛегенды");
		Параметр4.Значение = РасположениеЛегендыДиаграммыКомпоновкиДанных.Низ;
		Параметр4.Использование = Истина;
		
	КонецПроцедуры	
	
	// Получает текущие настройки.
	//
	// Параметры:
	//	ИсключитьДату - флаг исключения даты.
	//
	// Возвращаемое значение:
	//	Структура настроек.
	//
	Функция ПолучитьТекущиеНастройки(ИсключитьДату = Ложь) Экспорт
		
		СтруктураНастроек = Новый Структура;
		
		СтруктураНастроек.Вставить("КраткийВидНастройки"       , КраткийВидНастройки);
		СтруктураНастроек.Вставить("НастройкиКомпоновкиДанных" , КомпоновщикНастроек.ПолучитьНастройки());
		
		Возврат СтруктураНастроек;
		
	КонецФункции
	
	// Загружает настройки.
	//
	// Параметры:
	//	Настройки - структура настроек.
	//
	Процедура ЗагрузитьНастройки(Настройки) Экспорт
		
		КраткийВидНастройки  = Настройки.КраткийВидНастройки;
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки.НастройкиКомпоновкиДанных);
		
	КонецПроцедуры
			
	// Печать отчета из Рабочего места.
	//
	Процедура ПечататьНаПринтере(Смена) 
		
		МестоРеализации = глПараметрыРМ.МестоРеализации;
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	НачислениеБезнал.Ссылка КАК Начисление,
		|	НачислениеБезнал.Сумма КАК Сумма,
		|	НачислениеБезнал.ККМ КАК ККМ,
		|	НачислениеБезнал.ВариантОплаты
		|ИЗ
		|	Документ.НачислениеБезнал КАК НачислениеБезнал
		|ГДЕ
		|	НачислениеБезнал.ПометкаУдаления = ЛОЖЬ
		|	И НачислениеБезнал.Дата МЕЖДУ &ДатаС И &ДатаПо
		|   И НачислениеБезнал.Смена.МестоРеализации = &МестоРеализации
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ККМ";	               
		
		ТекстЗапроса = ТекстЗапроса;
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("МестоРеализации", МестоРеализации);
		Запрос.УстановитьПараметр("ДатаС", Смена.Дата);
		Запрос.УстановитьПараметр("ДатаПо", ТекущаяДата());
		Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.ВариантыОплаты.ПустаяСсылка());
		РезультатЗапроса = Запрос.Выполнить();
		
		Заголовок1 = "НАЧИСЛЕНИЯ ПО КАРТАМ";
		Заголовок2 = "";
		
		ДлинаСтроки = ИнтерфейсРМ.ПРНДлинаСтроки(глПараметрыРМ.ПечатьОтчетовПринтер);
		ШиринаКолонок = Новый СписокЗначений;    
		Шапка = "";
		
		Если ДлинаСтроки=32 Тогда
			ШиринаКолонок.Добавить(20);
			ШиринаКолонок.Добавить(12);
		ИначеЕсли ДлинаСтроки=36 Тогда
			ШиринаКолонок.Добавить(24);
			ШиринаКолонок.Добавить(12);
		ИначеЕсли ДлинаСтроки=40 Тогда
			ШиринаКолонок.Добавить(28);
			ШиринаКолонок.Добавить(12);
		ИначеЕсли ДлинаСтроки=42 Тогда
			ШиринаКолонок.Добавить(30);
			ШиринаКолонок.Добавить(12);	
		ИначеЕсли ДлинаСтроки=44 Тогда
			ШиринаКолонок.Добавить(32);
			ШиринаКолонок.Добавить(12);
		Иначе //Если ДлинаСтроки=48 Тогда
			ШиринаКолонок.Добавить(36);
			ШиринаКолонок.Добавить(12);
		КонецЕсли;
		
		Задание = Новый ТаблицаЗначений;
		Задание.Колонки.Добавить("Данные");
		Задание.Колонки.Добавить("ТипДанных");
		Задание.Колонки.Добавить("Параметры");
		
		Выгрузка = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Для Каждого Строка Из Выгрузка.Строки Цикл
			НоваяСтрока = Задание.Добавить(); 
			НоваяСтрока.Данные    = "ККМ: "+ Строка.ККМ;
			НоваяСтрока.ТипДанных = "Строка";
			НоваяСтрока.Параметры = "Лево,Жирный,ПереводСтроки";
			Для Каждого Документ Из Строка.Строки Цикл
				НоваяСтрока = Задание.Добавить(); 
				НоваяСтрока.Данные    = "" + Документ.Начисление.Дата + " Док №" + Документ.Начисление.Номер;
				НоваяСтрока.ТипДанных = "Строка";
				НоваяСтрока.Параметры = "ПереводСтроки";
				СформироватьСтроку(Документ.Начисление.ВариантОплаты.Наименование, Документ.Сумма, Ложь);
			КонецЦикла;
		КонецЦикла;
		
		НоваяСтрока = Задание.Добавить(); 
		НоваяСтрока.Данные    = "СтрЧерта";
		НоваяСтрока.ТипДанных = "Строка";
		НоваяСтрока.Параметры = "Центр,ПереводСтроки";
		
		СформироватьСтроку("ИТОГО:", Выгрузка.Строки.Итог("Сумма"), Ложь);
		
		НоваяСтрока = Задание.Добавить(); 
		НоваяСтрока.Данные    = "СтрЧерта";
		НоваяСтрока.ТипДанных = "Строка";
		НоваяСтрока.Параметры = "Центр,ПереводСтроки";
		
		ФормированиеОтчетов.ПечатьОтчетаРМ(Задание, Заголовок1, Заголовок2, Шапка);
		
	КонецПроцедуры
	
	// Формирование строки отчета на принтер.
	//
	Процедура СформироватьСтроку(Стр, Сумма, Выделение)
		
		Выделение=?(Выделение,"Жирный","НеЖирный");
		
		НоваяСтрока = Задание.Добавить();
		НоваяСтрока.Данные    = СтрДополнитьСправа(Стр, ШиринаКолонок[0].Значение);
		НоваяСтрока.ТипДанных = "Строка";
		НоваяСтрока.Параметры = Выделение+",НеПереводСтроки";
		
		НоваяСтрока = Задание.Добавить();
		НоваяСтрока.Данные    = СтрДополнитьСлева(Формат(Сумма,"ЧЦ="+ШиринаКолонок[1].Значение +"; ЧДЦ=2; ЧН=0,00"), ШиринаКолонок[1].Значение);
		НоваяСтрока.ТипДанных = "Строка";
		НоваяСтрока.Параметры = Выделение+",ПереводСтроки";
		
		
	КонецПроцедуры
	
	Если глВерсия > 1 Тогда
		ЭтотОбъект.СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаясхемаКомпоновкиДанных"+глВерсия);
	КонецЕсли;
	
#КонецЕсли
