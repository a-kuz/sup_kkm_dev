#Если Клиент Тогда
	
	Перем ИнформацияРасшифровки Экспорт;               // информация расшифроки отчета.
	Перем ЗапросИсх Экспорт;                           // Исходный запрос.
	
	// Формирует отчет
	//
	Процедура СформироватьОтчет(ТабличныйДокумент = "",ЭлементыФормы = "") Экспорт
		Менеджер = Новый МенеджерВременныхТаблиц;
		
		Запрос1 = Новый Запрос;
		Запрос1.МенеджерВременныхТаблиц = Менеджер;
		
		Запрос1.Текст = "ВЫБРАТЬ
		|	ЗаказТоварыДопИнф.Заказ.Дата КАК Дата,
		|	ЗаказТоварыДопИнф.Заказ КАК Заказ,
		|	ЗаказТоварыДопИнф.ВремяЗаказано КАК ПриемЗаказа,
		|	ЗаказТоварыДопИнф.ВремяГотово КАК ВремяГотовности,
		|	ЗаказТоварыДопИнф.ВремяВыдано КАК ВремяВыдачи,
		|	ЗаказТоварыДопИнф.ГруппаПечати КАК ГруппаПечати,
		|	ЗаказТоварыДопИнф.Подача КАК Подача,	
		|	ЗаказТоварыДопИнф.Товар КАК Товар,
		|	ЗаказТоварыДопИнф.РабочееМесто КАК РабочееМесто,
		|	ЗаказТоварыДопИнф.АвторЗаказано КАК АвторЗаказано,
		|	ЗаказТоварыДопИнф.АвторГотово КАК АвторГотово,
		|	ВЫБОР
		|		КОГДА ЗаказТоварыДопИнф.ВремяГотово = ДАТАВРЕМЯ(1, 1, 1) ИЛИ ЗаказТоварыДопИнф.ВремяЗаказано = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(ЗаказТоварыДопИнф.ВремяЗаказано, ЗаказТоварыДопИнф.ВремяГотово, СЕКУНДА)
		|	КОНЕЦ КАК ВремяПриготовления,
		|	ВЫБОР
		|		КОГДА ЗаказТоварыДопИнф.ВремяВыдано = ДАТАВРЕМЯ(1, 1, 1) ИЛИ ЗаказТоварыДопИнф.ВремяГотово = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(ЗаказТоварыДопИнф.ВремяГотово, ЗаказТоварыДопИнф.ВремяВыдано, СЕКУНДА)
		|	КОНЕЦ КАК ВремяПодачи,
		|	ВЫБОР
		|		КОГДА ЗаказТоварыДопИнф.ВремяВыдано = ДАТАВРЕМЯ(1, 1, 1) ИЛИ ЗаказТоварыДопИнф.ВремяЗаказано = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(ЗаказТоварыДопИнф.ВремяЗаказано, ЗаказТоварыДопИнф.ВремяВыдано, СЕКУНДА)
		|	КОНЕЦ КАК ПолноеВремяОбслуживания,
		|	ЕСТЬNULL(ЗаказТоварыДопИнф.Товар.Категория, ЗНАЧЕНИЕ(Справочник.КатегорииТоваров.ПустаяСсылка)) КАК Категория
		|ПОМЕСТИТЬ ВременнаяТаблица
		|ИЗ
		|	РегистрСведений.ЗаказТоварыДопИнф КАК ЗаказТоварыДопИнф
		|ГДЕ
		|	ЗаказТоварыДопИнф.Количество > 0
		|	И ВЫБОР
		|			КОГДА &ПараметрДата
		|				ТОГДА ЗаказТоварыДопИнф.ВремяДозаказ МЕЖДУ &ДатаС И &ДатаПо
		|			ИНАЧЕ ЗаказТоварыДопИнф.Заказ.Смена В (&МассивСмен)
		|		КОНЕЦ";
		Если МассивСмен = Неопределено Тогда
			ПараметрДата = Истина;	
		Иначе
			ПараметрДата = Ложь;	
		КонецЕсли;
		
		Запрос1.УстановитьПараметр("ПараметрДата", ПараметрДата);
		Запрос1.УстановитьПараметр("ДатаС", ДатаС);
		Запрос1.УстановитьПараметр("ДатаПо", ДатаПо);
		Запрос1.УстановитьПараметр("МассивСмен", МассивСмен);
		//Запрос1.УстановитьПараметр("ПождверждениеГотовности", Константы.ПодтверждениеГотовности.Получить());//pr Нужно добавить
		Запрос1.УстановитьПараметр("ПождверждениеГотовности", Константы.РаботаСПодтверждениямиПозицийЗаказа.Получить());//pr Нужно добавить
		
		// Установим отбор
		ТаблицаОтбора = Новый ТаблицаЗначений;
		ТаблицаОтбора.Колонки.Добавить("Поле");
		ТаблицаОтбора.Колонки.Добавить("ВидСравнения");
		ТаблицаОтбора.Колонки.Добавить("Значение");
		
		Для каждого Элемент Из ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если Элемент.Использование Тогда
				НоваяСтрока = ТаблицаОтбора.Добавить();
				Если Строка(Элемент.ЛевоеЗначение) = "Официант" ИЛИ Строка(Элемент.ЛевоеЗначение) = "Автор" Тогда
					НоваяСтрока.Поле = "АвторЗаказано";
				ИначеЕсли Строка(Элемент.ЛевоеЗначение) = "Категория" Тогда
					НоваяСтрока.Поле = "Товар.Категория";
				ИначеЕсли Строка(Элемент.ЛевоеЗначение) = "ВариантФормирования" Тогда
					НоваяСтрока.Поле = ВариантФормирования;
				ИначеЕсли Строка(Элемент.ЛевоеЗначение) = "Итог" 
					ИЛИ Строка(Элемент.ЛевоеЗначение) = "ВремяПриготовления1"
					ИЛИ Строка(Элемент.ЛевоеЗначение) = "ВремяПодачи1" 
					ИЛИ Строка(Элемент.ЛевоеЗначение) = "ПолноеВремяОбслуживания1" Тогда
					ТаблицаОтбора.Удалить(НоваяСтрока);
					Продолжить;
				Иначе
					НоваяСтрока.Поле = Строка(Элемент.ЛевоеЗначение);
				КонецЕсли;
					
				Если Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					НоваяСтрока.ВидСравнения = " = ";
					НоваяСтрока.Значение = "&"+Строка(Элемент.ЛевоеЗначение);
				Иначе
					НоваяСтрока.ВидСравнения = " В ИЕРАРХИИ (";
					НоваяСтрока.Значение = "&"+Строка(Элемент.ЛевоеЗначение)+")";
				КонецЕсли;
				Запрос1.УстановитьПараметр(Строка(Элемент.ЛевоеЗначение), Элемент.ПравоеЗначение);
			КонецЕсли;
		КонецЦикла;
		Если ТаблицаОтбора.Количество() > 0 ТОгда
			Для каждого стр Из ТаблицаОтбора Цикл
				Если стр.Поле <> "Официант" И стр.Поле <> "ВремяПодачи" И стр.Поле <> "ПолноеВремяОбслуживания" И стр.Поле <> "ВремяПриготовления" Тогда
					Запрос1.Текст = Запрос1.Текст + "
						|	И "+стр.Поле + стр.ВидСравнения + стр.Значение +"";
				ИначеЕсли стр.Поле = "ВремяПодачи" Тогда
					Запрос1.Текст = Запрос1.Текст + "
						|	И 
		                |	ВЫБОР
		                |		КОГДА ЗаказТоварыДопИнф.ВремяГотово = ДАТАВРЕМЯ(1, 1, 1) ИЛИ ЗаказТоварыДопИнф.ВремяВыдано = ДАТАВРЕМЯ(1, 1, 1)
		                |			ТОГДА 0
		                |		ИНАЧЕ РАЗНОСТЬДАТ(ЗаказТоварыДопИнф.ВремяГотово, ЗаказТоварыДопИнф.ВремяВыдано, СЕКУНДА)
		                |	КОНЕЦ " + стр.ВидСравнения + стр.Значение +""; 
				ИначеЕсли стр.Поле = "ПолноеВремяОбслуживания" Тогда
					Запрос1.Текст = Запрос1.Текст + "
						|	И 
		                |	ВЫБОР
		                |		КОГДА ЗаказТоварыДопИнф.ВремяВыдано = ДАТАВРЕМЯ(1, 1, 1) ИЛИ ЗаказТоварыДопИнф.ВремяЗаказано = ДАТАВРЕМЯ(1, 1, 1)
		                |			ТОГДА 0
		                |		ИНАЧЕ РАЗНОСТЬДАТ(ЗаказТоварыДопИнф.ВремяЗаказано, ЗаказТоварыДопИнф.ВремяВыдано, СЕКУНДА)
		                |	КОНЕЦ " + стр.ВидСравнения + стр.Значение +""; 
				ИначеЕсли стр.Поле = "ВремяПриготовления" Тогда
					Запрос1.Текст = Запрос1.Текст + "
						|	И 
		                |	ВЫБОР
		                |		КОГДА ЗаказТоварыДопИнф.ВремяГотово = ДАТАВРЕМЯ(1, 1, 1) ИЛИ ЗаказТоварыДопИнф.ВремяЗаказано = ДАТАВРЕМЯ(1, 1, 1)
		                |			ТОГДА 0
		                |		ИНАЧЕ РАЗНОСТЬДАТ(ЗаказТоварыДопИнф.ВремяЗаказано, ЗаказТоварыДопИнф.ВремяГотово, СЕКУНДА)
		                |	КОНЕЦ " + стр.ВидСравнения + стр.Значение +""; 
				Иначе		
					Запрос1.Текст = Запрос1.Текст + "
						|	И АвторЗаказано " + стр.ВидСравнения + стр.Значение +"";
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		
		Запрос1.Выполнить();
		
		Запрос2 = Новый Запрос;
		Запрос2.МенеджерВременныхТаблиц = Менеджер;
		Запрос2.Текст = "ВЫБРАТЬ
		|	ВременнаяТаблица.Дата,
		|	ВременнаяТаблица.Заказ,
		|	ВременнаяТаблица.ПриемЗаказа,
		|	ВременнаяТаблица.ВремяГотовности,
		|	ВременнаяТаблица.ВремяВыдачи,
		|	ВременнаяТаблица.ГруппаПечати,
		|	ВременнаяТаблица.Подача,
		|	ВременнаяТаблица.Товар,
		|	ВременнаяТаблица.РабочееМесто,
		|	ВременнаяТаблица.АвторЗаказано,
		|	ВременнаяТаблица.АвторГотово,
		|	ВременнаяТаблица.ВремяПриготовления,
		|	ВременнаяТаблица.ВремяПодачи,
		|	ВременнаяТаблица.ПолноеВремяОбслуживания,
		|	ВременнаяТаблица.Категория
		|ИЗ
		|	ВременнаяТаблица КАК ВременнаяТаблица";
		
		Таб1 = Запрос2.Выполнить().Выгрузить();
		
		Если НЕ ДопГруппировка Тогда
		
			ТаблицаПриготовления = Таб1.Скопировать( ,"ВремяПриготовления");
			ТаблицаПриготовления.Колонки.Получить(0).Имя = "Значение";

			ТаблицаПодачи = Таб1.Скопировать( ,"ВремяПодачи");
			ТаблицаПодачи.Колонки.Получить(0).Имя = "Значение";

			ТаблицаПолноеВремя = Таб1.Скопировать( ,"ПолноеВремяОбслуживания");
			ТаблицаПолноеВремя.Колонки.Получить(0).Имя = "Значение";

			ОтклПриготовления = РассчитатьОтклонение(ТаблицаПриготовления); 
			ОтклПодачи = РассчитатьОтклонение(ТаблицаПодачи);
			ОтклПолноеВремя = РассчитатьОтклонение(ТаблицаПолноеВремя);

			Запрос3 = Новый Запрос;
			Запрос3.МенеджерВременныхТаблиц = Менеджер;
			Запрос3.Текст = "ВЫБРАТЬ
			|	СРЕДНЕЕ(таб.ВремяПриготовления) КАК ВремяПриготовления1,
			|	СРЕДНЕЕ(таб.ВремяПодачи) КАК ВремяПодачи1,
			|	СРЕДНЕЕ(таб.ПолноеВремяОбслуживания) КАК ПолноеВремяОбслуживания1,
			|	""Среднее время операции"" КАК итог
			|ИЗ
			|	ВременнаяТаблица КАК таб
			|Где
			|	таб.ВремяПриготовления <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МАКСИМУМ(таб.ВремяПриготовления),
			|	МАКСИМУМ(таб.ВремяПодачи),
			|	МАКСИМУМ(таб.ПолноеВремяОбслуживания),
			|	""Максимальное время операции""
			|ИЗ
			|	ВременнаяТаблица КАК таб
			|Где
			|	таб.ВремяПриготовления <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МИНИМУМ(Таб.ВремяПриготовления),
			|	МИНИМУМ(Таб.ВремяПодачи),
			|	МИНИМУМ(Таб.ПолноеВремяОбслуживания),
			|	""Минимальное время операции""
			|ИЗ
			|	ВременнаяТаблица КАК Таб
			|Где
			|	таб.ВремяПриготовления <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МИНИМУМ("+ Формат(ОтклПриготовления,"ЧН=; ЧГ=") +"),
			|	МИНИМУМ("+ Формат(ОтклПодачи,"ЧН=; ЧГ=") +"),
			|	МИНИМУМ("+ Формат(ОтклПолноеВремя,"ЧН=; ЧГ=") +"),
			|	""Среднеквадратическое отклонение""
			|ИЗ
			|	ВременнаяТаблица КАК Таб";

			Таб2 = Запрос3.Выполнить().Выгрузить();
		Иначе

			ТабОтбор = Таб1.СкопироватьКолонки();
			ТабВариантФормирования = Таб1.Скопировать(,ВариантФормирования);
			Запрос3 = Новый Запрос;
			Таб2 = Неопределено;
			ТабВариантФормирования.Свернуть(ВариантФормирования);
			ТабВариантФормирования.Сортировать(ВариантФормирования);
			Для каждого Вариант Из ТабВариантФормирования Цикл
				
				ТабОтбор = таб1.Скопировать(Новый Структура(ВариантФормирования, Вариант[ВариантФормирования]));
				
				ТаблицаПриготовления = ТабОтбор.Скопировать( ,"ВремяПриготовления");
				ТаблицаПриготовления.Колонки.Получить(0).Имя = "Значение";

				ТаблицаПодачи = ТабОтбор.Скопировать( ,"ВремяПодачи");
				ТаблицаПодачи.Колонки.Получить(0).Имя = "Значение";

				ТаблицаПолноеВремя = ТабОтбор.Скопировать( ,"ПолноеВремяОбслуживания");
				ТаблицаПолноеВремя.Колонки.Получить(0).Имя = "Значение";

				ОтклПриготовления = РассчитатьОтклонение(ТаблицаПриготовления); 
				ОтклПодачи = РассчитатьОтклонение(ТаблицаПодачи);
				ОтклПолноеВремя = РассчитатьОтклонение(ТаблицаПолноеВремя);
				
				Запрос3.УстановитьПараметр("ВариантФормирования", Вариант[ВариантФормирования]);

				ТекстЗапроса = 
				"Выбрать
				|	Таб.ВремяПриготовления,
				|	Таб.ВремяПодачи,
				|	Таб.ПолноеВремяОбслуживания
				|Поместить ТабОтбор
				|ИЗ
				|	&ТабОтбор КАК Таб
				|;
				|
				|ВЫБРАТЬ
				|	СРЕДНЕЕ(таб.ВремяПриготовления) КАК ВремяПриготовления1,
				|	СРЕДНЕЕ(таб.ВремяПодачи) КАК ВремяПодачи1,
				|	СРЕДНЕЕ(таб.ПолноеВремяОбслуживания) КАК ПолноеВремяОбслуживания1,
				|	&ВариантФормирования КАК ВариантФормирования,
				|	""Среднее время операции"" КАК итог
				|ИЗ
				|	ТабОтбор КАК таб
				|Где
				|	таб.ВремяПриготовления <> 0
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	МАКСИМУМ(таб.ВремяПриготовления),
				|	МАКСИМУМ(таб.ВремяПодачи),
				|	МАКСИМУМ(таб.ПолноеВремяОбслуживания),
				|	&ВариантФормирования,
				|	""Максимальное время операции""
				|ИЗ
				|	ТабОтбор КАК таб
				|Где
				|	таб.ВремяПриготовления <> 0
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	МИНИМУМ(Таб.ВремяПриготовления),
				|	МИНИМУМ(Таб.ВремяПодачи),
				|	МИНИМУМ(Таб.ПолноеВремяОбслуживания),
				|	&ВариантФормирования,
				|	""Минимальное время операции""
				|ИЗ
				|	ТабОтбор КАК таб
				|Где
				|	таб.ВремяПриготовления <> 0
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	МИНИМУМ("+ Формат(ОтклПриготовления,"ЧН=; ЧГ=") +"),
				|	МИНИМУМ("+ Формат(ОтклПодачи,"ЧН=; ЧГ=") +"),
				|	МИНИМУМ("+ Формат(ОтклПолноеВремя,"ЧН=; ЧГ=") +"),
				|	&ВариантФормирования,
				|	""Среднеквадратическое отклонение""
				|ИЗ
				|	ТабОтбор КАК таб";
				
				Запрос3.УстановитьПараметр("ТабОтбор", ТабОтбор);
				Запрос3.Текст = ТекстЗапроса;
				Если Таб2 = Неопределено Тогда
					Таб2 = Запрос3.Выполнить().Выгрузить();
				Иначе
					ВыборкаТаб2 = Запрос3.Выполнить().Выбрать();
					Пока ВыборкаТаб2.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(Таб2.Добавить(), ВыборкаТаб2);
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			Если Таб2 = Неопределено Тогда
				Таб2 = Новый ТаблицаЗначений;
				Таб2.Колонки.Добавить("ВремяПриготовления1");
				Таб2.Колонки.Добавить("ВремяПодачи1");
				Таб2.Колонки.Добавить("ПолноеВремяОбслуживания1");
				Таб2.Колонки.Добавить("ВариантФормирования");
				Таб2.Колонки.Добавить("Итог");
			КонецЕсли;	
			
		КонецЕсли;
		
		ВнешниеНаборыДанных = Новый Структура;
		ВнешниеНаборыДанных.Вставить("Таб1", Таб1);
		ВнешниеНаборыДанных.Вставить("Таб2", Таб2); 
		
		Заголовок = "АНАЛИЗ ВРЕМЕНИ ОБСЛУЖИВАНИЯ"
		+ Символы.ПС + Период;
		
		КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок")).Значение = Заголовок;
		
		// добавим поле группировки
		КомпоновщикНастроек.Настройки.Структура.Очистить();
		ГруппировкаРодитель = КомпоновщикНастроек.Настройки;
		
		Если ДопГруппировка Тогда
			Группирока = ГруппировкаРодитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			
			ПолеГруппировки                = Группирока.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ВариантФормирования);
			
			НовоеВыбранноеПоле = Группирока.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			
			ГруппировкаРодитель = Группирока;
			
		КонецЕсли;	
		
		ДетальнаяГруппировка = ГруппировкаРодитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		
		ВыбранноеПоле1 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле1.Использование = Истина;
		ВыбранноеПоле1.Заголовок = "№ п/п";
		ВыбранноеПоле1.Поле = Новый ПолеКомпоновкиДанных("СистемныеПоля.НомерПоПорядку");
		
		ВыбранноеПоле2 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле2.Использование = Истина;
		ВыбранноеПоле2.Заголовок = "Дата";
		ВыбранноеПоле2.Поле = Новый ПолеКомпоновкиДанных("Дата");
		
		ВыбранноеПоле3 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле3.Использование = Истина;
		ВыбранноеПоле3.Заголовок = "Заказ/Подача/Товар";
		ВыбранноеПоле3.Поле = Новый ПолеКомпоновкиДанных("Заказ");
		
		ВыбранноеПоле4 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле4.Использование = Истина;
		ВыбранноеПоле4.Заголовок = "Прием заказа";
		ВыбранноеПоле4.Поле = Новый ПолеКомпоновкиДанных("ПриемЗаказа");
		
		ВыбранноеПоле5 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле5.Использование = Истина;
		ВыбранноеПоле5.Заголовок = "Готовность заказа";
		ВыбранноеПоле5.Поле = Новый ПолеКомпоновкиДанных("ВремяГотовности");
		
		Если Константы.ПодтверждениеВыдачи.Получить() Тогда
			ВыбранноеПоле6 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле6.Использование = Истина;
			ВыбранноеПоле6.Заголовок = "Выдача заказа";
			ВыбранноеПоле6.Поле = Новый ПолеКомпоновкиДанных("ВремяВыдачи");
		КонецЕсли;	
		
		ВыбранноеПоле7 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле7.Использование = Истина;
		ВыбранноеПоле7.Заголовок = "Время приготовления";
		ВыбранноеПоле7.Поле = Новый ПолеКомпоновкиДанных("ВремяПриготовления");
		
		Если Константы.ПодтверждениеВыдачи.Получить() Тогда
			ВыбранноеПоле8 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле8.Использование = Истина;
			ВыбранноеПоле8.Заголовок = "Время подачи";
			ВыбранноеПоле8.Поле = Новый ПолеКомпоновкиДанных("ВремяПодачи");
			
			ВыбранноеПоле9 = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле9.Использование = Истина;
			ВыбранноеПоле9.Заголовок = "Полное время обслуживания";
			ВыбранноеПоле9.Поле = Новый ПолеКомпоновкиДанных("ПолноеВремяОбслуживания");
		КонецЕсли;	
		
		ГруппировкаРодитель = КомпоновщикНастроек.Настройки;
		
		Если ДопГруппировка Тогда
			Группирока = ГруппировкаРодитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			
			ПолеГруппировки                = Группирока.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных("ВариантФормирования");
			
			НовоеВыбранноеПоле = Группирока.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			
			ГруппировкаРодитель = Группирока;
			
		КонецЕсли;
		
		ДетальнаяГруппировка2 = ГруппировкаРодитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ВыбранноеПоле1 = ДетальнаяГруппировка2.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле1.Использование = Истина;
		ВыбранноеПоле1.Заголовок = "Итог";
		ВыбранноеПоле1.Поле = Новый ПолеКомпоновкиДанных("Итог");
		
		ВыбранноеПоле1 = ДетальнаяГруппировка2.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле1.Использование = Истина;
		ВыбранноеПоле1.Заголовок = "Время приготовления";
		ВыбранноеПоле1.Поле = Новый ПолеКомпоновкиДанных("ВремяПриготовления1");
		
		Если Константы.ПодтверждениеВыдачи.Получить() Тогда
			ВыбранноеПоле1 = ДетальнаяГруппировка2.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле1.Использование = Истина;
			ВыбранноеПоле1.Заголовок = "Время подачи";
			ВыбранноеПоле1.Поле = Новый ПолеКомпоновкиДанных("ВремяПодачи1");
			
			ВыбранноеПоле1 = ДетальнаяГруппировка2.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле1.Использование = Истина;
			ВыбранноеПоле1.Заголовок = "Полное время обслуживания";
			ВыбранноеПоле1.Поле = Новый ПолеКомпоновкиДанных("ПолноеВремяОбслуживания1");
		КонецЕсли;
		
		ФормированиеОтчетов.отчСформироватьОтчет(ЭтотОбъект, ТабличныйДокумент, ,ВнешниеНаборыДанных,ЭлементыФормы);
		
	КонецПроцедуры	
	
	// Получает текущие настройки.
	//
	// Параметры:
	//	ИсключитьДату - флаг исключения даты.
	//
	// Возвращаемое значение:
	//	Структура настроек.
	//
	Функция ПолучитьТекущиеНастройки(ИсключитьДату = Ложь) Экспорт
		
		СтруктураНастроек = Новый Структура;
		
		СтруктураНастроек.Вставить("НастройкиКомпоновкиДанных" , КомпоновщикНастроек.ПолучитьНастройки());
		
		Возврат СтруктураНастроек;
		
	КонецФункции
	
	// Загружает настройки.
	//
	// Параметры:
	//	Настройки - структура настроек.
	//
	Процедура ЗагрузитьНастройки(Настройки) Экспорт
		
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки.НастройкиКомпоновкиДанных);
		
	КонецПроцедуры
	
	Функция РассчитатьОтклонение(Таблица)
		// удалим пустые значения для вычисления среднеквадратичного отклонения
		Для каждого стр Из Таблица Цикл
			Если Стр.Значение = 0 Тогда
				Таблица.Удалить(стр);
			КонецЕсли; 
		КонецЦикла; 
		
		Среднее = ?(Таблица.Количество()=0, 0,Таблица.Итог("Значение")/ Таблица.Количество());
		
		Если Среднее = 0 Тогда
			Возврат 0;
		КонецЕсли;	
		
		Отклонение = 0;
		
		Для Каждого Строка Из Таблица Цикл
			Отклонение = Отклонение + Pow(Строка.Значение-Среднее, 2);		
		КонецЦикла;	
		
		Отклонение = Sqrt(Отклонение/Таблица.Количество());
		
		Возврат Окр(Отклонение);
	КонецФункции	
	
#КонецЕсли

