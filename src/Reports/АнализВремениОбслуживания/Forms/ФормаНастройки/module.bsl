Перем СтруктураНастроекПриОткрытии; // содержит структуру настроек при открытии формы.

Перем СтруктураДанныхКраткогоВида;
Перем МассивГруппировок;			// содержит массив группировок.
Перем СоответствиеОтборов;			// содержит соответствие отборов и их типов.
Перем Отмена;						// признак отмены при закрытии формы.
Перем ОчищатьЗначениеОтбораПриПодборе;
Перем ПодборИзДокумента;
Перем СписокВариантовФормирования;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	СтруктураНастроекПриОткрытии = ПолучитьТекущиеНастройки();
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = ПредставлениеПериода(ДатаС,ДатаПо);	
	КонецЕсли;	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.ВариантФормирования.Доступность = ДопГруппировка;
	
	ЭлементыФормы.ВариантФормирования.Значение = СписокВариантовФормирования.НайтиПоЗначению(ВариантФормирования).Представление;
	
	ФормированиеОтчетов.ЗаполнитьТабличныеПоляОтборовКраткогоВида(ЭтотОбъект, ЭтаФорма, СтруктураДанныхКраткогоВида);
	
КонецПроцедуры

// Обработчик события ПередЗакрытием.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ Отмена Тогда
		ФормированиеОтчетов.ЗаполнитьНастройкиКомпоновкиДанныхПоПолямКраткогоВида(ЭтотОбъект, ЭтаФорма, СтруктураДанныхКраткогоВида);
	КонецЕсли;
	
КонецПроцедуры    

Процедура КнопкаДатаНажатие(Элемент)
	ФормаПодбораПериода = Обработки.ВыборПериода.ПолучитьФорму();;
	ФормаПодбораПериода.ДатаС = ДатаС;
	ФормаПодбораПериода.ДатаПо = ДатаПо;
	СтруктураПериода = ФормаПодбораПериода.ОткрытьМодально();
	Если Не СтруктураПериода = Неопределено Тогда
		Период = СтруктураПериода.ПредставлениеПериода;	
		ДатаС = СтруктураПериода.ДатаС;
		ДатаПо = СтруктураПериода.ДатаПо;
		МассивСмен = Неопределено;
	КонецЕсли;	
КонецПроцедуры

Процедура КнопкаСменыНажатие(Элемент) 
	ОбработкаСмены = Обработки.ВыборСмен.Создать();
    Если НЕ МассивСмен = Неопределено Тогда
		ОбработкаСмены.МассивСмен = МассивСмен.Скопировать();
	КонецЕсли;
	СтруктураСмен = ОбработкаСмены.ПолучитьФорму("ФормаПодбораСмен").ОткрытьМодально();
	Если Не СтруктураСмен = Неопределено Тогда
		Период = СтруктураСмен.ПредставлениеСмен;
		МассивСмен = СтруктураСмен.МассивСмен;
		ДатаС = Неопределено;
		ДатаПо = Неопределено;
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыОК(Кнопка)
	
	Закрыть();
	СформироватьОтчет(ВладелецФормы.ЭлементыФормы.Результат,ВладелецФормы.ЭлементыФормы);
КонецПроцедуры

Процедура ТабличноеПолеВидыОтбораПриАктивизацииСтроки(Элемент)
	ФормированиеОтчетов.ПриВыбореВидаОтбора(ЭтаФорма);
КонецПроцедуры

Процедура ТабличноеПолеВидыОтбораПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущаяКолонка = Элемент.Колонки["ЗначениеОтбора"] Тогда
		Отказ = Истина;
		ПодборИзДокумента = Ложь;
		ОчищатьЗначениеОтбораПриПодборе = Истина;
		ФормированиеОтчетов.ПриВыбореВидаОтбора(ЭтаФорма);
		ФормированиеОтчетов.ПодборЗначенийОтбора(ЭтаФорма, Ложь, ПодборИзДокумента);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеВидыОтбораПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекДанные = ЭлементыФормы.ТабличноеПолеВидыОтбора.ТекущиеДанные;
	
	Если НЕ ОтменаРедактирования И ЗначениеЗаполнено(ТекДанные) И ЗначениеЗаполнено(ТекДанные.ПодборЗначения) 
		И Элемент.ТекущаяКолонка.Имя = "ПодборЗначения" Тогда
		
		ТекДанные.ЗначениеОтбора.Добавить(ТекДанные.ПодборЗначения);
		
		ТекДанные.ПодборЗначения = Новый(ТипЗнч(ТекДанные.ПодборЗначения));
		ТекДанные.Пометка        = Истина;
		
		ФормированиеОтчетов.ПриВыбореВидаОтбора(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеВидыОтбораПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.ЗначениеОтбора) Тогда
		ОформлениеСтроки.Ячейки.ПодборЗначения.УстановитьТекст(ДанныеСтроки.ЗначениеОтбора);
	Иначе
		ОформлениеСтроки.Ячейки.ПодборЗначения.УстановитьТекст("");
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеВидыОтбораПриИзмененииФлажка(Элемент, Колонка)
	ФормированиеОтчетов.УправлениеАктуальностьюОтборов(ЭтаФорма);
КонецПроцедуры

// Обработчик события "Очистка" поля ввода ПодборЗначения табличного поля ТабличноеПолеВидыОтбора.
//
Процедура ТабличноеПолеВидыОтбораПодборЗначенияОчистка(Элемент, СтандартнаяОбработка)
	
	ТекДанные = ЭлементыФормы.ТабличноеПолеВидыОтбора.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекДанные) Тогда
		
		ТекДанные.ЗначениеОтбора.Очистить();
		ФормированиеОтчетов.ПриВыбореВидаОтбора(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "ПослеУдаления" табличного поля ТабличноеПолеЗначенияОтбора.
//
Процедура ТабличноеПолеЗначенияОтбораПослеУдаления(Элемент)
	
	ФормированиеОтчетов.ОбновитьЗначенияОтборов(ЭтаФорма);
	
КонецПроцедуры

// Обработчик события "ПриОкончанииРедактирования" табличного поля ТабличноеПолеЗначенияОтбора.
//
Процедура ТабличноеПолеЗначенияОтбораПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ ОтменаРедактирования Тогда
		ФормированиеОтчетов.ОбновитьЗначенияОтборов(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при нажатии на кнопку "Подбор" командной панели КоманднаяПанельЗначенияОтбора.
//
Процедура КоманднаяПанельЗначенияОтбораДействиеПодбор(Кнопка)
	
	ПодборИзДокумента = Ложь;
	ОчищатьЗначениеОтбораПриПодборе = Ложь;
	ФормированиеОтчетов.ПодборЗначенийОтбора(ЭтаФорма, Истина, ПодборИзДокумента);
	
КонецПроцедуры

// Процедура вызывается при нажатии на кнопку "ПодборИзДокумента" командной панели КоманднаяПанельЗначенияОтбора.
//
Процедура КоманднаяПанельЗначенияОтбораДействиеПодборИзДокумента(Кнопка)
	
	ПодборИзДокумента = Истина;
	ОчищатьЗначениеОтбораПриПодборе = Ложь;
	ФормированиеОтчетов.ПодборЗначенийОтбора(ЭтаФорма, Истина, ПодборИзДокумента);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыЗакрыть(Кнопка)
	ЗагрузитьНастройки(СтруктураНастроекПриОткрытии);
	
	Отмена = Истина;
	Закрыть();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если ОчищатьЗначениеОтбораПриПодборе Тогда
		ЭлементыФормы.ТабличноеПолеВидыОтбора.ТекущиеДанные.ЗначениеОтбора.Очистить();
		ЭлементыФормы.ТабличноеПолеЗначенияОтбора.Значение.Очистить();
	КонецЕсли;
	ФормированиеОтчетов.ОбработкаВыбораЗначенияВКраткомВиде(ЭтаФорма, ЗначениеВыбора, ПодборИзДокумента);	
	
КонецПроцедуры

Процедура ДопГруппировкаПриИзменении(Элемент)
	ЭлементыФормы.ВариантФормирования.Доступность = ДопГруппировка; 
КонецПроцедуры

Процедура ВариантФормированияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = ВыбратьИзМеню(СписокВариантовФормирования);
	Если Не ВыбранноеЗначение = Неопределено Тогда      
		ВариантФормирования = ВыбранноеЗначение.Значение;
		Элемент.Значение = ВыбранноеЗначение.Представление;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеЗначенияОтбораОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТабличноеПолеЗначенияОтбора.Добавить().ЗначенияОтбора = ВыбранноеЗначение;
	ФормированиеОтчетов.ОбновитьЗначенияОтборов(ЭтаФорма);

КонецПроцедуры


Отмена = Ложь;
СтруктураНастроекПриОткрытии = Новый Структура;
ПодборИзДокумента = Ложь;
ОчищатьПриПодборе = Ложь;


СоответствиеОтборов = Новый Соответствие;
СоответствиеОтборов.Вставить(Новый ПолеКомпоновкиДанных("ГруппаПечати")     , Новый ОписаниеТипов("СправочникСсылка.ГруппыПечати"));
СоответствиеОтборов.Вставить(Новый ПолеКомпоновкиДанных("Товар")            , Новый ОписаниеТипов("СправочникСсылка.Товары"));
СоответствиеОтборов.Вставить(Новый ПолеКомпоновкиДанных("АвторЗаказано") 	, Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
СоответствиеОтборов.Вставить(Новый ПолеКомпоновкиДанных("АвторГотово")	 	, Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
СоответствиеОтборов.Вставить(Новый ПолеКомпоновкиДанных("РабочееМесто")     , Новый ОписаниеТипов("СправочникСсылка.РабочиеМеста"));
СоответствиеОтборов.Вставить(Новый ПолеКомпоновкиДанных("Категория")        , Новый ОписаниеТипов("СправочникСсылка.КатегорииТоваров"));

СтруктураДанныхКраткогоВида = Новый Структура;
//СтруктураДанныхКраткогоВида.Вставить("МассивГруппировок"   , МассивГруппировок);
СтруктураДанныхКраткогоВида.Вставить("СоответствиеОтборов" , СоответствиеОтборов);

СписокВариантовФормирования = Новый СписокЗначений;
СписокВариантовФормирования.Добавить("АвторЗаказано", "Официант");
СписокВариантовФормирования.Добавить("АвторГотово", "Повар");
СписокВариантовФормирования.Добавить("Товар", "Товар");
СписокВариантовФормирования.Добавить("ГруппаПечати", "Группа печати");
СписокВариантовФормирования.Добавить("Категория", "Категория");
ЭлементыФормы.ВариантФормирования.СписокВыбора = СписокВариантовФормирования;

