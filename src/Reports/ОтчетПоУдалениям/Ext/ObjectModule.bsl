#Если Клиент Тогда
	Перем ВидНастройки Экспорт;                        // Вид настройки
	Перем ИнформацияРасшифровки Экспорт;               // информация расшифроки отчета.
	Перем ЗапросИсх Экспорт;                           // Исходный запрос
	Перем ШиринаКолонок;
	Перем Задание; 
	Перем ЗаголовокНастройка;
	Перем НастройкиОтчетаНаМоментФормирования Экспорт; // настройка при формировании отчета.
	
// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
	Процедура УстановкаНачальныхЗначений() Экспорт
		
	КонецПроцедуры
 	
	// Устанавливает параметры.
	//
	Процедура УстановитьПараметры()
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаС");
		Параметр.Значение = ДатаС;
		Параметр.Использование = Истина;
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаПо");
		Параметр.Значение = ДатаПо;
		Параметр.Использование = Истина;
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("МассивСмен");
		Параметр.Значение = МассивСмен;
		Параметр.Использование = Истина;
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПараметрДата");
		
		Параметр.Использование = Истина;
		Если МассивСмен = Неопределено Тогда
			Параметр.Значение = Истина;	
		Иначе
			Параметр.Значение = Ложь;	
		КонецЕсли;	
		
		Если ПараметрФормирования = 1 Тогда
			Статусы = Новый СписокЗначений;	
			Статусы.Добавить(Перечисления.СтатусыЗаказа.Закрыт);
			Статусы.Добавить(Перечисления.СтатусыЗаказа.Открыт);
			Статусы.Добавить(Перечисления.СтатусыЗаказа.Удален);			
		ИначеЕсли ПараметрФормирования = 2 Тогда
			Статусы = Новый СписокЗначений;
			Статусы.Добавить(Перечисления.СтатусыЗаказа.Удален);
		КонецЕсли;	
		
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Статусы");
		Параметр.Значение = Статусы;
		Параметр.Использование = Истина;
		
		
	КонецПроцедуры
	
	// Выводит отчет в табличный документ.
	//
	// Параметры:
	//  ТабличныйДокумент - табличный документ, в который выводится отчет.
	//
	Процедура СформироватьОтчет(ТабличныйДокумент = "", НаПринтер = Ложь, ПарФормирования = 1, ЭлементыФормы = "") Экспорт
		
		Если НаПринтер Тогда
			Смена = ИнтерфейсРМ.ТекущаяСмена();
			
			Если НЕ ЗначениеЗаполнено(Смена) Тогда
				Текст1="Смена не открыта!";
				Текст2="Для формирования отчета нет данных...";
				ИнтерфейсРМ.ВопросПредупреждение("Предупреждение",Текст1,Текст2,"","ОК","");
				Возврат;
			КонецЕсли;
			
			ПечататьНаПринтере(Смена, ПарФормирования);
			Возврат;
		КонецЕсли;	
		
		Если НЕ КраткийВидНастройки Тогда
			ЗаголовокНастройка = СтрПолучитьСтроку(КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок")).Значение,1);
			Заголовок = ЗаголовокНастройка + Символы.ПС + Период;
			
			КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок")).Значение = Заголовок;
			
			УстановитьПараметры();	
			ФормированиеОтчетов.отчСформироватьОтчет(ЭтотОбъект, ТабличныйДокумент,,,ЭлементыФормы);
			КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок")).Значение = ЗаголовокНастройка;
			
			НастройкиОтчетаНаМоментФормирования = ПолучитьТекущиеНастройки();
			
			Возврат;
		КонецЕсли;
		
		КомпоновщикНастроек.Настройки.Структура.Очистить();
		
		Если ПоказыватьДиаграмму И ПараметрВыводаДиаграммы = 0 Тогда
			СформироватьДиаграмму();
		КонецЕсли;
		
		Заголовок = "ОТЧЕТ ПО УДАЛЕНИЯМ"
		+ Символы.ПС + Период;
		
		КомпоновщикНастроек.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок")).Значение = Заголовок;
		
		// добавим поле группировки		
		Родитель = КомпоновщикНастроек.Настройки;
		
		Если ГруппироватьПоПериоду Тогда
			ГруппировкаПоПериоду = Родитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			
			ПолеГруппировки                = ГруппировкаПоПериоду.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ВидПериода);
			
			// Добавим колонку дня недели рядом с датой
			Если ВидПериода = "День" Тогда
				
				ПолеГруппировки                = ГруппировкаПоПериоду.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ПолеГруппировки.Использование  = Истина;
				ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
				ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных("ДниНедели");
				
			КонецЕсли;
			НовоеВыбранноеПоле = ГруппировкаПоПериоду.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			
			Родитель = ГруппировкаПоПериоду;	 
		КонецЕсли;
		
		Если ГруппироватьПоВиду Тогда
			ГруппировкаПоВиду = Родитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			
			ПолеГруппировки                = ГруппировкаПоВиду.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ВариантФормирования);
			
			НовоеВыбранноеПоле = ГруппировкаПоВиду.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			
			Родитель = ГруппировкаПоВиду;	 
		КонецЕсли;
		
		ДетальныеЗаписи = Родитель.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ВыбранноеПоле = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		УстановитьПараметры();
		
		Если ПоказыватьДиаграмму И ПараметрВыводаДиаграммы = 1 Тогда
			СформироватьДиаграмму();
		КонецЕсли;
		
		ФормированиеОтчетов.отчСформироватьОтчет(ЭтотОбъект, ТабличныйДокумент,,,ЭлементыФормы);
		
		НастройкиОтчетаНаМоментФормирования = ПолучитьТекущиеНастройки();
	КонецПроцедуры
	
	// Формирует диаграмму.
	//
	Процедура СформироватьДиаграмму() Экспорт
		Диаграмма = КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ДиаграммаКомпоновкиДанных"));
		ВыбранноеПоле = Диаграмма.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Использование = Истина;
		ВыбранноеПоле.Заголовок = "Сумма";
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Сумма");
		
		Серия = Диаграмма.Серии.Добавить();
		Серия.Использование = Истина;
		Поле = Серия.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		Поле.Поле = Новый ПолеКомпоновкиДанных(?(ГруппироватьПоПериоду,ВидПериода, ?(ГруппироватьПоВиду,ВариантФормирования, "Товар")));
		Поле.Использование = Истина;
		Поле.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
		
		НовоеВыбранноеПоле = Серия.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		Параметр = Диаграмма.ПараметрыВывода.Элементы.Найти("ТипДиаграммы");
		Параметр.Значение = ТипДиаграммы;
		Параметр.Использование = Истина;
		
		Параметр2 = Диаграмма.ПараметрыВывода.Элементы.Найти("TitleOutput");
		Параметр2.Значение = ТипВыводаТекстаКомпоновкиДанных.Выводить;
		Параметр2.Использование = Ложь;
		
		Параметр4 = Параметр.ЗначенияВложенныхПараметров.Найти("ТипДиаграммы.РасположениеЛегенды");
		Параметр4.Значение = РасположениеЛегендыДиаграммыКомпоновкиДанных.Низ;
		Параметр4.Использование = Истина;
		//
	КонецПроцедуры	
	
	// Получает текущие настройки.
	//
	// Параметры:
	//	ИсключитьДату - флаг исключения даты.
	//
	// Возвращаемое значение:
	//	Структура настроек.
	//
	Функция ПолучитьТекущиеНастройки(ИсключитьДату = Ложь) Экспорт
		
		СтруктураНастроек = Новый Структура;
		
		СтруктураНастроек.Вставить("КраткийВидНастройки"       , КраткийВидНастройки);
		СтруктураНастроек.Вставить("НастройкиКомпоновкиДанных" , КомпоновщикНастроек.ПолучитьНастройки());
		
		Возврат СтруктураНастроек;
		
	КонецФункции
	
	// Загружает настройки.
	//
	// Параметры:
	//	Настройки - структура настроек.
	//
	Процедура ЗагрузитьНастройки(Настройки) Экспорт
		
		КраткийВидНастройки  = Настройки.КраткийВидНастройки;
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки.НастройкиКомпоновкиДанных);
		
	КонецПроцедуры
	
	// Печать отчета из Рабочего места.
	//
	Процедура ПечататьНаПринтере(Смена, ПарФормирования) 
		МестоРеализации = глПараметрыРМ.МестоРеализации;
		
		Заголовок1 = "ОТЧЕТ ПО УДАЛЕНИЯМ";
		Заголовок2 = "";
		
		ДлинаСтроки = ИнтерфейсРМ.ПРНДлинаСтроки(глПараметрыРМ.ПечатьОтчетовПринтер);
		ШиринаКолонок = Новый СписокЗначений;
		
		Если ДлинаСтроки=32 Тогда      
			Шапка="          Кол-во     Сумма";
			ШиринаКолонок.Добавить(14);
			ШиринаКолонок.Добавить(7);
			ШиринаКолонок.Добавить(11);
		ИначеЕсли ДлинаСтроки=36 Тогда 
			Шапка="              Кол-во      Сумма";
			ШиринаКолонок.Добавить(16);
			ШиринаКолонок.Добавить(8);
			ШиринаКолонок.Добавить(12);
		ИначеЕсли ДлинаСтроки=40 Тогда
			Шапка="                  Кол-во      Сумма";
			ШиринаКолонок.Добавить(18);
			ШиринаКолонок.Добавить(10);
			ШиринаКолонок.Добавить(12);
		ИначеЕсли ДлинаСтроки=42 Тогда
			Шапка="                    Кол-во      Сумма";
			ШиринаКолонок.Добавить(20);
			ШиринаКолонок.Добавить(10);
			ШиринаКолонок.Добавить(12);	
		ИначеЕсли ДлинаСтроки=44 Тогда
			Шапка="                      Кол-во      Сумма";
			ШиринаКолонок.Добавить(22);
			ШиринаКолонок.Добавить(10);
			ШиринаКолонок.Добавить(12);
		Иначе //Если ДлинаСтроки=48 Тогда  
			Шапка="                          Кол-во        Сумма";
			ШиринаКолонок.Добавить(22);
			ШиринаКолонок.Добавить(12);
			ШиринаКолонок.Добавить(14);
		КонецЕсли;
		
		Шапка=СтрДополнитьСлева(Шапка,ДлинаСтроки - 5);
		
		Задание = Новый ТаблицаЗначений;
		Задание.Колонки.Добавить("Данные");
		Задание.Колонки.Добавить("ТипДанных");
		Задание.Колонки.Добавить("Параметры");
		
		Если ПарФормирования = "1" Тогда
			Шапка = "Товар" + Шапка;
			
			ТекстЗапроса = "ВЫБРАТЬ
			               |	Удаление.Товар КАК Товар,
			               |	СУММА(Удаление.Количество) КАК Количество,
			               |	СУММА(Удаление.Сумма) КАК Сумма
			               |ИЗ
			               |	Документ.Удаление КАК Удаление
			               |ГДЕ
			               |	Удаление.ПометкаУдаления = ЛОЖЬ
			               |	И Удаление.Дата МЕЖДУ &ДатаС И &ДатаПо
			               |	И Удаление.МестоРеализации = &МестоРеализации
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Удаление.Товар
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Удаление.Товар.Наименование";
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("МестоРеализации", МестоРеализации); 	
			Запрос.УстановитьПараметр("ДатаС", Смена.Дата);
			Запрос.УстановитьПараметр("ДатаПо", ТекущаяДата());
			РезультатЗапроса = Запрос.Выполнить();
			
			Выгрузка = РезультатЗапроса.Выгрузить();
			
			Для Каждого Строка Из Выгрузка Цикл
				СформироватьСтроку(Строка.Товар.Наименование, Строка.Количество, Строка.Сумма, Ложь);	
			КонецЦикла;
			
			НоваяСтрока = Задание.Добавить();
			НоваяСтрока.Данные    = "СтрЧерта";
			НоваяСтрока.ТипДанных = "Строка";
			НоваяСтрока.Параметры = "ПереводСтроки";
			
			СформироватьСтроку("ИТОГО:", Выгрузка.Итог("Количество"), Выгрузка.Итог("Сумма"), Истина); 
			
		ИначеЕсли ПарФормирования = "2" Тогда
			Шапка = "Заказ" + Шапка;
			
			ТекстЗапроса = "ВЫБРАТЬ
			               |	СУММА(Удаление.Количество) КАК Количество,
			               |	СУММА(Удаление.Сумма) КАК Сумма,
			               |	Удаление.Заказ КАК Заказ
			               |ИЗ
			               |	Документ.Удаление КАК Удаление
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказДопИнф КАК ЗаказДопИнф
			               |		ПО Удаление.Заказ = ЗаказДопИнф.Заказ
			               |ГДЕ
			               |	Удаление.ПометкаУдаления = ЛОЖЬ
			               |	И Удаление.Дата МЕЖДУ &ДатаС И &ДатаПо
			               |	И Удаление.МестоРеализации = &МестоРеализации
			               |	И ЗаказДопИнф.Статус = &Статус
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Удаление.Заказ
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Удаление.Заказ.Дата";
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("МестоРеализации", МестоРеализации); 	
			Запрос.УстановитьПараметр("ДатаС", Смена.Дата);
			Запрос.УстановитьПараметр("ДатаПо", ТекущаяДата());
			Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыЗаказа.Удален);
			РезультатЗапроса = Запрос.Выполнить();
			
			Выгрузка = РезультатЗапроса.Выгрузить();
			
			Для Каждого Строка Из Выгрузка Цикл
				СформироватьСтроку(УбратьВсеБуквы(Строка.Заказ.Номер), Строка.Количество, Строка.Сумма, Ложь);	
			КонецЦикла;
			
			НоваяСтрока = Задание.Добавить();
			НоваяСтрока.Данные    = "СтрЧерта";
			НоваяСтрока.ТипДанных = "Строка";
			НоваяСтрока.Параметры = "ПереводСтроки";
			
			СформироватьСтроку("ИТОГО:", Выгрузка.Итог("Количество"), Выгрузка.Итог("Сумма"), Истина); 
			
		КонецЕсли;
		
		ФормированиеОтчетов.ПечатьОтчетаРМ(Задание, Заголовок1, Заголовок2, Шапка);
		
	КонецПроцедуры
	
	// Формирование строки отчета на принтер.
	//
	Процедура СформироватьСтроку(Стр, Число1="", Число2="", Выделение)
		
		Выделение=?(Выделение,"Жирный","НеЖирный");
		
		НоваяСтрока = Задание.Добавить();
		НоваяСтрока.Данные    = СтрДополнитьСправа(Стр, ШиринаКолонок[0].Значение);
		НоваяСтрока.ТипДанных = "Строка";
		НоваяСтрока.Параметры = Выделение+",НеПереводСтроки";
		
		НоваяСтрока = Задание.Добавить();
		НоваяСтрока.Данные    = СтрДополнитьСлева(Строка(Формат(Число1,"ЧЦ="+ШиринаКолонок[1].Значение +"; ЧДЦ=2")), ШиринаКолонок[1].Значение);
		НоваяСтрока.ТипДанных = "Строка";
		НоваяСтрока.Параметры = Выделение+",НеПереводСтроки";
		
		НоваяСтрока = Задание.Добавить();
		НоваяСтрока.Данные    = СтрДополнитьСлева(Строка(Формат(Число2,"ЧЦ="+ШиринаКолонок[2].Значение +"; ЧДЦ=2")), ШиринаКолонок[2].Значение);
		НоваяСтрока.ТипДанных = "Строка";
		НоваяСтрока.Параметры = Выделение+",ПереводСтроки";
		
		
	КонецПроцедуры
#КонецЕсли
