
////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Управление доступностью элементов формы
//
Процедура УправлениеДоступностью()
	
	Если ПолныйДоступ Тогда
		СвернутьДерево();
	КонецЕсли; 
	
	ЭлементыФормы.ДеревоПрав			.Доступность = НЕ ПолныйДоступ;
	ЭлементыФормы.КоманднаяПанельПрава	.Доступность = НЕ ПолныйДоступ;
	
КонецПроцедуры

// Описание процедуры
//
Процедура РазвернутьДерево()
	
	Для каждого СтрокаДерева Из ДеревоПрав.Строки Цикл
		ЭлементыФормы.ДеревоПрав.Развернуть(СтрокаДерева, Истина);
	КонецЦикла; 
	
КонецПроцедуры

// Описание процедуры
//
Процедура СвернутьДерево()
	
	Для каждого СтрокаДерева Из ДеревоПрав.Строки Цикл
		ЭлементыФормы.ДеревоПрав.Свернуть(СтрокаДерева);
	КонецЦикла; 
	
КонецПроцедуры

// Описание процедуры
//
Процедура УстановитьВсеПрава(СтрокиУровня, УстановитьСнять)
	
	Для каждого СтрокаДерева Из СтрокиУровня Цикл
		
		Если ЗначениеЗаполнено(СтрокаДерева.Строки) Тогда
			УстановитьВсеПрава(СтрокаДерева.Строки, УстановитьСнять);
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(СтрокаДерева.Значение) = Тип("Булево") Тогда
			СтрокаДерева.Значение = УстановитьСнять;
		Иначе
			СтрокаДерева.Значение = ?(УстановитьСнять, Перечисления.ТипыПравДоступаВЗаказе.Все, Перечисления.ТипыПравДоступаВЗаказе.Нет );
		КонецЕсли;
		
	КонецЦикла; 
	
	
КонецПроцедуры

// Заполняет набор записей регистра сведений не пустыми значениями
//
Процедура ЗаполнитьНаборЗаписей(СтрокиДерева, НаборЗаписей)
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		
		Если ЗначениеЗаполнено(СтрокаДерева.Строки) Тогда
			ЗаполнитьНаборЗаписей(СтрокаДерева.Строки, НаборЗаписей)
		Иначе
			Запись = НаборЗаписей.Добавить();
			Запись.НаборПрав	= Ссылка;
			Если глВерсия = 3 И ТипЗнч(СтрокаДерева.ПравоДоступа) = Тип("ПеречислениеСсылка.СтатусыДоставки") Тогда
				Запись.ПравоДоступа = СтрокаДерева.Родитель.ПравоДоступа;				
				Запись.Статус = СтрокаДерева.ПравоДоступа;
			Иначе
				Запись.ПравоДоступа = СтрокаДерева.ПравоДоступа;
			КонецЕсли;
			Запись.Значение		= СтрокаДерева.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	УправлениеРИБ.ПередОткрытиемЭлементаСправочника(ЭтотОбъект, ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	НаборПрав = ?(ЭтоНовый() И ЗначениеЗаполнено(ПараметрОбъектКопирования), ПараметрОбъектКопирования, Ссылка);  
		
	Справочники.НаборыПравДоступа.ЗаполнитьДеревоПрав(НаборПрав, ДеревоПрав);
	УправлениеДоступностью();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Набор = РегистрыСведений.ПраваДоступа.СоздатьНаборЗаписей();
	Набор.Отбор.НаборПрав.Использование = Истина;
	Набор.Отбор.НаборПрав.Значение		= Ссылка;
	
	Если НЕ ПолныйДоступ Тогда
		ЗаполнитьНаборЗаписей(ДеревоПрав.Строки, Набор);
	КонецЕсли; 
	
	Набор.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПолныйДоступПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

Функция ДеревоВариантыПравВыбора(ТекСтрока, ПравоВыбора=Ложь)
	Для Каждого Стр Из ТекСтрока.Строки Цикл
		Если ЗначениеЗаполнено(Стр.Строки) Тогда
			ДеревоВариантыПравВыбора(Стр, ПравоВыбора);
		Иначе
			Если ТипЗнч(Стр.Значение) = Тип("ПеречислениеСсылка.ТипыПравДоступаВЗаказе") Тогда
				ПравоВыбора=Истина;
				Возврат ПравоВыбора;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	Возврат ПравоВыбора;
КонецФункции

Процедура ДеревоПравВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.Имя = "ПравоДоступа" И (
		ТипЗнч(ВыбраннаяСтрока.ПравоДоступа) = Тип("СправочникСсылка.ВариантыОплаты") ИЛИ 
		ТипЗнч(ВыбраннаяСтрока.ПравоДоступа) = Тип("СправочникСсылка.Скидки")) Тогда 
		ВыбраннаяСтрока.ПравоДоступа.ПолучитьФорму().Открыть();
	ИначеЕсли Колонка.Имя = "Значение" И ДеревоВариантыПравВыбора(ВыбраннаяСтрока) Тогда  
		СписокТиповПравДоступа = Новый СписокЗначений;
		СписокТиповПравДоступа.Добавить(Перечисления.ТипыПравДоступаВЗаказе.Нет);
		СписокТиповПравДоступа.Добавить(Перечисления.ТипыПравДоступаВЗаказе.Свои);
		СписокТиповПравДоступа.Добавить(Перечисления.ТипыПравДоступаВЗаказе.Все);
		ВыбСписокПрав = ВыбратьИзСписка(СписокТиповПравДоступа);
		Если ВыбСписокПрав = Неопределено Тогда
			Возврат;
		ИначеЕсли Перечисления.ТипыПравДоступаВЗаказе.Все = ВыбСписокПрав.Значение Тогда
			УстановкаФлажков(ВыбраннаяСтрока, 2);
		ИначеЕсли Перечисления.ТипыПравДоступаВЗаказе.Свои = ВыбСписокПрав.Значение Тогда
			УстановкаФлажков(ВыбраннаяСтрока, 1);
		Иначе
			УстановкаФлажков(ВыбраннаяСтрока, 0);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДеревоФлажокГруппы(ТекСтрока, ТекЗначение)
	
	Для Каждого Стр Из ТекСтрока.Строки Цикл
		Если НЕ ЗначениеЗаполнено(Стр.Строки) Тогда
			Если (ТипЗнч(Стр.Значение) = Тип("Булево")) И (Стр.Значение = Ложь) Тогда
				СтрЗначение	= 0;
			ИначеЕсли (ТипЗнч(Стр.Значение) = Тип("Булево")) И (Стр.Значение = Истина) Тогда
				СтрЗначение	= 1;
			ИначеЕсли (ТипЗнч(Стр.Значение) = Тип("ПеречислениеСсылка.ТипыПравДоступаВЗаказе")) И (Стр.Значение = Перечисления.ТипыПравДоступаВЗаказе.Нет) Тогда
				СтрЗначение	= 0;
			ИначеЕсли (ТипЗнч(Стр.Значение) = Тип("ПеречислениеСсылка.ТипыПравДоступаВЗаказе")) И (Стр.Значение = Перечисления.ТипыПравДоступаВЗаказе.Все) Тогда
				СтрЗначение	= 1;
			Иначе
				СтрЗначение	= 2;
			КонецЕсли;
		Иначе
			ДеревоФлажокГруппы(Стр, СтрЗначение);
		КонецЕсли;	
		Если ТекЗначение = НЕОПРЕДЕЛЕНО Тогда
			ТекЗначение	= СтрЗначение;
		ИначеЕсли ТекЗначение <> СтрЗначение Тогда
			ТекЗначение	= 2;
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДеревоПравПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ПравоДоступа.ОтображатьКартинку		= Истина;
	
	Если глВерсия=3 И ТипЗнч(ДанныеСтроки.ПравоДоступа) = Тип("ПеречислениеСсылка.СтатусыДоставки") Тогда
		ОформлениеСтроки.Ячейки.ПравоДоступа.Текст	= ДанныеСтроки.ПравоДоступа;
	Иначе
		ОформлениеСтроки.Ячейки.ПравоДоступа.Текст	= ДанныеСтроки.ПравоДоступа.Наименование;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСтроки.Строки) Тогда
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Родитель) Тогда
			ОформлениеСтроки.Ячейки.ПравоДоступа.ИндексКартинки	= 0;
		Иначе
			ОформлениеСтроки.Ячейки.ПравоДоступа.ИндексКартинки	= 3;
		КонецЕсли;
		ОформлениеСтроки.Ячейки.Значение.ОтображатьФлажок		= Истина;
		ОформлениеСтроки.Ячейки.Значение.ОтображатьТекст		= Ложь;
		ОформлениеСтроки.Ячейки.Значение.ТолькоПросмотр			= Истина;
		ТекСтрока	= ДанныеСтроки;
		ТекЗначение	= НЕОПРЕДЕЛЕНО;
		ДеревоФлажокГруппы(ТекСтрока, ТекЗначение);
		ОформлениеСтроки.Ячейки.Значение.Флажок					= ТекЗначение;
	Иначе
		ОформлениеСтроки.Ячейки.ПравоДоступа.ИндексКартинки 	= 1;
		ОформлениеСтроки.Ячейки.Значение.ОтображатьФлажок		= Истина;
		
		Если ТипЗнч(ДанныеСтроки.Значение) = Тип("Булево") Тогда
			ОформлениеСтроки.Ячейки.Значение.ОтображатьТекст	= Ложь;
			ОформлениеСтроки.Ячейки.Значение.ТолькоПросмотр		= Истина;
			ОформлениеСтроки.Ячейки.Значение.Флажок				= ДанныеСтроки.Значение;
			
		ИначеЕсли ДанныеСтроки.Значение = Перечисления.ТипыПравДоступаВЗаказе.Нет Тогда
			ОформлениеСтроки.Ячейки.Значение.Флажок				= Ложь;
			ОформлениеСтроки.Ячейки.Значение.ОтображатьТекст 	= Ложь;
		ИначеЕсли ДанныеСтроки.Значение = Перечисления.ТипыПравДоступаВЗаказе.Свои Тогда
			ОформлениеСтроки.Ячейки.Значение.Флажок				= 2;
		Иначе
			ОформлениеСтроки.Ячейки.Значение.Флажок				= Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановкаФлажков(ТекСтрока, ТекЗначение)
	
	Для Каждого Стр Из ТекСтрока.Строки Цикл
		Если ТипЗнч(Стр.Значение) = Тип("Булево") Тогда
			Если ТекЗначение = 0 Тогда
				Стр.Значение	= Ложь;
			Иначе
				Стр.Значение	= Истина;
			КонецЕсли; 		
		Иначе
			Если ТекЗначение = 0 Тогда
				Стр.Значение	= Перечисления.ТипыПравДоступаВЗаказе.Нет;
			ИначеЕсли ТекЗначение = 1 Тогда
				Стр.Значение	= Перечисления.ТипыПравДоступаВЗаказе.Свои;
			Иначе
				Стр.Значение	= Перечисления.ТипыПравДоступаВЗаказе.Все;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр.Строки) Тогда
			//УстановкаФлажков(Стр, Стр.Значение);
			УстановкаФлажков(Стр, ТекЗначение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДеревоПравПриИзмененииФлажка(Элемент, Колонка)
	
	СтрокаДерева = Элемент.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаДерева.Строки) Тогда
		ТекСтрока	= СтрокаДерева;
		ТекЗначение	= НЕОПРЕДЕЛЕНО;
		ДеревоФлажокГруппы(ТекСтрока, ТекЗначение);
		Если ТекЗначение = 0 Тогда
			УстановкаФлажков(ТекСтрока, 2);
		Иначе
			УстановкаФлажков(ТекСтрока, 0);
		КонецЕсли;	
	Иначе	
		Если ТипЗнч(СтрокаДерева.Значение) = Тип("Булево") Тогда
			СтрокаДерева.Значение = Не СтрокаДерева.Значение;
		Иначе
			СтрокаДерева.Значение = ?(СтрокаДерева.Значение = Перечисления.ТипыПравДоступаВЗаказе.Нет, Перечисления.ТипыПравДоступаВЗаказе.Все, Перечисления.ТипыПравДоступаВЗаказе.Нет );
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельПраваУстановитьВсе(Кнопка)
	
	УстановитьВсеПрава(ДеревоПрав.Строки, Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельПраваСнятьВсе(Кнопка)
	
	УстановитьВсеПрава(ДеревоПрав.Строки, Ложь);
	
КонецПроцедуры

Процедура КоманднаяПанельПраваРазвернуть(Кнопка)
	
	РазвернутьДерево();
	
КонецПроцедуры

Процедура КоманднаяПанельПраваСвернуть(Кнопка)
	
	СвернутьДерево();
	
КонецПроцедуры


