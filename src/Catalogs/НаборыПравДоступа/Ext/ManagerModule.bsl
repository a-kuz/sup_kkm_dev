
 // Возвращает созданные соответствия значений предопределенных ограничений прав по статусам
//
Функция СоответствияПредопределенныхОграниченийПравПоСтатусам() Экспорт			
	
	ОграниченяПравПоСтатусам = Новый Соответствие;

	с1	= Новый Массив;
    с1.Добавить(Перечисления.СтатусыДоставки.Открыт);
	
	с2	= Новый Массив;
	с2.Добавить(Перечисления.СтатусыДоставки.Отказ);
	с2.Добавить(Перечисления.СтатусыДоставки.Доставлен);
		
	с4	= Новый Массив;
	с4.Добавить(Перечисления.СтатусыДоставки.Подготовлен);
	с4.Добавить(Перечисления.СтатусыДоставки.Отправлен);
	с4.Добавить(Перечисления.СтатусыДоставки.Отказ);
	с4.Добавить(Перечисления.СтатусыДоставки.Доставлен);
	
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрДоставлено					, с2);
    ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрДоступОткрытыеЗаявки			, с2);
    ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрОтменаЗаявок					, с2);
	//ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКлиента			, с2);
	//ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКонтактныхДанных	, с2);
	//ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКоличестваГостей	, с2);
	//ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКурьера			, с2);
    ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрДозаказ						, с4);
    ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрУдалениеПозиций				, с4);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрВводРучнойСкидки				, с4);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрОтменаРучнойСкидки			, с4);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеМестаПроизводства	, с4);
	
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаИзменениеКурьера				, с1);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаПодготовлено					, с2);
    ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаОтправлено					, с2);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаДоставлено					, с2);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаДоступОткрытыеЗаказы			, с2);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаУдалениеОткрытыхЗаказов		, с2);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаПечатьПресчета				, с2);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаОтменаПресчета				, с2);
	//ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаВыборКлиента				, с2);
	//ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаИзменениеКолваГостей		, с2);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаДозаказ						, с4);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаУдалениеПозиций				, с4);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаВводРучнойСкидки				, с4);
	ОграниченяПравПоСтатусам.Вставить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаОтменаРучнойСкидки			, с4);

	Возврат ОграниченяПравПоСтатусам;
     	
КонецФункции

// Возвращает созданную таблицу значений соответствия прав из разных групп
//
Функция СписокПравДоставки() Экспорт			
	
	СписокПравДоставки = Новый СписокЗначений;
	
	ПВХ	= ПланыВидовХарактеристик.ПраваДоступа;
    Выборка = ПВХ.Выбрать(ПланыВидовХарактеристик.ПраваДоступа.Доставка);
    Пока Выборка.Следующий() Цикл	
		Объект = Выборка.ПолучитьОбъект();
		Если Не Объект.ПометкаУдаления Тогда
			СписокПравДоставки.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ПолучитьИмяПредопределенного(Объект.Ссылка));
		КонецЕсли;	
	КонецЦикла;
	
	Возврат СписокПравДоставки;
	
КонецФункции

Функция ПолучитьСоответствующееПраво(ПравоДоступа) Экспорт
	
	ЗначениеТекст	= Ложь;
	
	Если ТипЗнч(ПравоДоступа) = ТипЗнч(ПланыВидовХарактеристик.ПраваДоступа) Тогда
		ПравоДоступа	= ПланыВидовХарактеристик.ПраваДоступа.ПолучитьИмяПредопределенного(ПравоДоступа);		
	КонецЕсли;
	
	СписокПравДоставки	= СписокПравДоставки();
	ТекПравоДоступа		= СписокПравДоставки.НайтиПоЗначению("Доставка"+ПравоДоступа);
	
	Если ТекПравоДоступа <> Неопределено Тогда
		ПравоДоступа	= ТекПравоДоступа.Значение;
	КонецЕсли;	
	          	
	Возврат ПравоДоступа;
	
КонецФункции

// Заполняет дерево прав
//
Процедура ЗаполнитьДеревоПрав(НаборПрав, ДеревоПрав) Экспорт
	
	Если ДеревоПрав = Неопределено Тогда
		ДеревоПрав = Новый ДеревоЗначений;
		ДеревоПрав.Колонки.Добавить("ПравоДоступа");
		ДеревоПрав.Колонки.Добавить("Значение");
	КонецЕсли; 
	
	Версия = ПараметрыСеанса.Версия;
	
	ЛишниеПрава = Новый Массив;
	
	ДеревоПрав.Строки.Очистить();
	
	УсловияПоСкидкам = ?(Версия=1, "Ложь", "НЕ Скидки.ПометкаУдаления И ПраваДоступа.Ссылка В ИЕРАРХИИ (&ГруппаСкидок) ");
	Если Версия = 2 Тогда
		УсловияПоСкидкам = УсловияПоСкидкам + "И НЕ Скидки.ЭтоГруппа И НЕ Скидки.Ручная"
	ИначеЕсли Версия = 3 Тогда
		УсловияПоСкидкам = УсловияПоСкидкам + "И ((Скидки.ЭтоГруппа И Скидки.ТипГруппы<>0) ИЛИ (НЕ Скидки.Ручная И (Скидки.Родитель.ТипГруппы=0 ИЛИ Скидки.Родитель=ЗНАЧЕНИЕ(Справочник.Скидки.ПустаяСсылка))))"
	КонецЕсли; 
	
	Если Версия<3 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код КАК Код1,
		|	ПраваДоступа.Код КАК Код2,
		|	NULL КАК Код3,
		|	ПраваДоступа.Родитель КАК Родитель,
		|	ПраваДоступа.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ТаблицаПрав
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка НЕ В ИЕРАРХИИ (&ЛишниеПрава)
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код,
		|	ПраваДоступа.Код,
		|	ВариантыОплаты.Код,
		|	ПраваДоступа.Ссылка,
		|	ВариантыОплаты.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыОплаты КАК ВариантыОплаты
		|		ПО (ПраваДоступа.Ссылка В ИЕРАРХИИ (&ГруппаВидовОплаты))
		|			И (НЕ ВариантыОплаты.Ссылка.ПометкаУдаления)
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка.ЭтоГруппа
		|	И ПраваДоступа.Ссылка НЕ В ИЕРАРХИИ (&ЛишниеПрава)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код,
		|	ПраваДоступа.Код,
		|	Скидки.Код,
		|	ПраваДоступа.Ссылка,
		|	Скидки.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Скидки КАК Скидки
		|		ПО (" + УсловияПоСкидкам + ")
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка.ЭтоГруппа
		|	И ПраваДоступа.Ссылка НЕ В ИЕРАРХИИ (&ЛишниеПрава)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПрав.Код1 КАК Код1,
		|	ТаблицаПрав.Код2 КАК Код2,
		|	ТаблицаПрав.Код3 КАК Код3,
		|	ТаблицаПрав.Родитель,
		|	ТаблицаПрав.Ссылка,
		|	ПраваДоступа.Значение
		|ИЗ
		|	ТаблицаПрав КАК ТаблицаПрав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПраваДоступа КАК ПраваДоступа
		|		ПО ТаблицаПрав.Ссылка = ПраваДоступа.ПравоДоступа
		|			И (ПраваДоступа.НаборПрав = &НаборПрав)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код1,
		|	Код2,
		|	Код3
		|";
		
		Запрос.УстановитьПараметр("НаборПрав", НаборПрав);
		Запрос.УстановитьПараметр("ЛишниеПрава", ЛишниеПрава);
		
		ГруппаВидовОплаты = ПланыВидовХарактеристик.ПраваДоступа.ВариантыОплаты;
		Запрос.УстановитьПараметр("ГруппаВидовОплаты", ГруппаВидовОплаты);	
		ГруппаСкидок = ПланыВидовХарактеристик.ПраваДоступа.ДоступныеСкидки;
		Запрос.УстановитьПараметр("ГруппаСкидок", ГруппаСкидок);
		ГруппаДоставка = ПланыВидовХарактеристик.ПраваДоступа.Доставка;
		
	Иначе
		
		// Статусы при которых всем правам можно
		с1 = Новый Массив;
		с1.Добавить(Перечисления.СтатусыДоставки.Открыт);
		с1.Добавить(Перечисления.СтатусыДоставки.Выгружен);
		с1.Добавить(Перечисления.СтатусыДоставки.Загружен);
		с1.Добавить(Перечисления.СтатусыДоставки.Принят);
		с1.Добавить(Перечисления.СтатусыДоставки.Отложен);
		
		// Статусы при которых можно в правах п2
		с2 = Новый Массив;
		с2.Добавить(Перечисления.СтатусыДоставки.Подготовлен);
		с2.Добавить(Перечисления.СтатусыДоставки.Отправлен);
		
		// Права при которых всем статусам можно
		п1 = Новый Массив;
		п1.Добавить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКлиента);
		п1.Добавить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКонтактныхДанных);
		п1.Добавить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКоличестваГостей);
		п1.Добавить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрИзменениеКурьера);
		п1.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаВыборКлиента);
		п1.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаИзменениеКолваГостей);
		п1.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаИзменениеКурьера);
		
		// Права при которых можно в статусах с2
		п2 = Новый Массив;
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрДоставлено);
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрОтменаЗаявок);
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.КолЦентрДоступОткрытыеЗаявки);
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаПодготовлено);
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаОтправлено);
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаДоставлено);
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаУдалениеОткрытыхЗаказов);
		п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаПечатьПресчета);
        п2.Добавить(ПланыВидовХарактеристик.ПраваДоступа.ДоставкаОтменаПресчета);
		
		Запрос = Новый Запрос;
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код КАК Код1,
		|	ПраваДоступа.Код КАК Код2,
		|	NULL КАК Код3,
		|	ПраваДоступа.Родитель КАК Родитель,
		|	ПраваДоступа.Ссылка КАК Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыДоставки.ПустаяСсылка) КАК Статус
		|ПОМЕСТИТЬ ТаблицаПрав
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка НЕ В ИЕРАРХИИ (&ЛишниеПрава)
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код,
		|	ПраваДоступа.Код,
		|	ВариантыОплаты.Код,
		|	ПраваДоступа.Ссылка,
		|	ВариантыОплаты.Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыДоставки.ПустаяСсылка)
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыОплаты КАК ВариантыОплаты
		|		ПО (ПраваДоступа.Ссылка В ИЕРАРХИИ (&ГруппаВидовОплаты))
		|			И (НЕ ВариантыОплаты.Ссылка.ПометкаУдаления)
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка.ЭтоГруппа
		|	И ПраваДоступа.Ссылка НЕ В ИЕРАРХИИ (&ЛишниеПрава)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код,
		|	ПраваДоступа.Код,
		|	Скидки.Код,
		|	ПраваДоступа.Ссылка,
		|	Скидки.Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыДоставки.ПустаяСсылка)
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Скидки КАК Скидки
		|		ПО (" + УсловияПоСкидкам + ")
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка.ЭтоГруппа
		|	И ПраваДоступа.Ссылка НЕ В ИЕРАРХИИ (&ЛишниеПрава)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код,
		|	ПраваДоступа.Код,
		|	СтатусыДоставки.Порядок,
		|	ПраваДоступа.Ссылка,
		|	ПраваДоступа.Ссылка,
		|	СтатусыДоставки.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.СтатусыДоставки КАК СтатусыДоставки
		|		ПО (ПраваДоступа.Ссылка В ИЕРАРХИИ (&ГруппаДоставка))
		|			И (ПраваДоступа.Ссылка <> &ГруппаДоставка)
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка.ЭтоГруппа
		|	И НЕ ПраваДоступа.Ссылка В ИЕРАРХИИ (&ЛишниеПрава)
		|	И (СтатусыДоставки.Ссылка В ИЕРАРХИИ (&с1)
		|			ИЛИ ПраваДоступа.Ссылка В ИЕРАРХИИ (&п1)
		|			ИЛИ СтатусыДоставки.Ссылка В ИЕРАРХИИ (&с2)
		|				И ПраваДоступа.Ссылка В ИЕРАРХИИ (&п2))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПраваДоступа.Родитель.Код,
		|	ПраваДоступа.Код,
		|	СтатусыДоставки.Порядок,
		|	ПраваДоступа.Ссылка,
		|	ПраваДоступа.Ссылка,
		|	СтатусыДоставки.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ПраваДоступа КАК ПраваДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.СтатусыДоставки КАК СтатусыДоставки
		|		ПО (ПраваДоступа.Ссылка В ИЕРАРХИИ (&ГруппаКолЦентра))
		|			И (ПраваДоступа.Ссылка <> &ГруппаКолЦентра)
		|ГДЕ
		|	НЕ ПраваДоступа.Ссылка.ПометкаУдаления
		|	И ПраваДоступа.Ссылка.ЭтоГруппа
		|	И НЕ ПраваДоступа.Ссылка В ИЕРАРХИИ (&ЛишниеПрава)
		|	И (СтатусыДоставки.Ссылка В ИЕРАРХИИ (&с1)
		|			ИЛИ ПраваДоступа.Ссылка В ИЕРАРХИИ (&п1)
		|			ИЛИ СтатусыДоставки.Ссылка В ИЕРАРХИИ (&с2)
		|				И ПраваДоступа.Ссылка В ИЕРАРХИИ (&п2))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПрав.Код1 КАК Код1,
		|	ТаблицаПрав.Код2 КАК Код2,
		|	ТаблицаПрав.Код3 КАК Код3,
		|	ТаблицаПрав.Родитель,
		|	ТаблицаПрав.Ссылка,
		|	ТаблицаПрав.Статус,
		|	ПраваДоступа.Значение
		|ИЗ
		|	ТаблицаПрав КАК ТаблицаПрав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПраваДоступа КАК ПраваДоступа
		|		ПО ТаблицаПрав.Ссылка = ПраваДоступа.ПравоДоступа
		|			И ТаблицаПрав.Статус = ПраваДоступа.Статус
		|			И (ПраваДоступа.НаборПрав = &НаборПрав)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код1,
		|	Код2,
		|	Код3
		|";
		
		Запрос.УстановитьПараметр("НаборПрав", НаборПрав);
		Запрос.УстановитьПараметр("ЛишниеПрава", ЛишниеПрава);
		
		ГруппаВидовОплаты = ПланыВидовХарактеристик.ПраваДоступа.ВариантыОплаты;
		Запрос.УстановитьПараметр("ГруппаВидовОплаты", ГруппаВидовОплаты);	
		ГруппаСкидок = ПланыВидовХарактеристик.ПраваДоступа.ДоступныеСкидки;
		Запрос.УстановитьПараметр("ГруппаСкидок", ГруппаСкидок);
		ГруппаДоставка = ПланыВидовХарактеристик.ПраваДоступа.Доставка;
		Запрос.УстановитьПараметр("ГруппаДоставка", ГруппаДоставка);
		ГруппаКолЦентра = ПланыВидовХарактеристик.ПраваДоступа.КолЦентр;
		Запрос.УстановитьПараметр("ГруппаКолЦентра", ГруппаКолЦентра);
		Запрос.УстановитьПараметр("с1", с1);
		Запрос.УстановитьПараметр("с2", с2);
		Запрос.УстановитьПараметр("п1", п1);
		Запрос.УстановитьПараметр("п2", п2);
		
	КонецЕсли;
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если  Выборка.Родитель.Пустая() Тогда
			СтрокаГруппы = ДеревоПрав;
		Иначе
			СтрокаГруппы = ДеревоПрав.Строки.Найти(Выборка.Родитель, "ПравоДоступа", Истина);
			Если СтрокаГруппы=Неопределено Тогда
				СтрокаГруппы = ДеревоПрав.Строки.Добавить();
				СтрокаГруппы.ПравоДоступа	= Выборка.Родитель;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаДерева = СтрокаГруппы.Строки.Добавить();
		
		Если Версия = 3 И ЗначениеЗаполнено(Выборка.Статус) Тогда
			СтрокаДерева.ПравоДоступа = Выборка.Статус;
		Иначе
			СтрокаДерева.ПравоДоступа = Выборка.Ссылка;
		КонецЕсли;
		
		Если ТипЗнч(СтрокаДерева.ПравоДоступа) = Тип("ПланВидовХарактеристикСсылка.ПраваДоступа") И
			СтрокаДерева.ПравоДоступа.ТипЗначения.СодержитТип(Тип("ПеречислениеСсылка.ТипыПравДоступаВЗаказе")) Тогда
			ЗначениеПоУмолчанию = Перечисления.ТипыПравДоступаВЗаказе.Нет;
		ИначеЕсли Версия = 3 И ТипЗнч(СтрокаДерева.ПравоДоступа) = Тип("ПеречислениеСсылка.СтатусыДоставки") Тогда
			ЗначениеПоУмолчанию = Перечисления.ТипыПравДоступаВЗаказе.Нет;
		Иначе	
			ЗначениеПоУмолчанию = Ложь;
		КонецЕсли;
		СтрокаДерева.Значение = ?( ТипЗнч(Выборка.Значение) = ТипЗнч(ЗначениеПоУмолчанию), Выборка.Значение, ЗначениеПоУмолчанию);
		
	КонецЦикла;
	
КонецПроцедуры

