<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="">2.01</ВерсияФормата>
	<Ид>f1ececef-d255-4c55-a588-884265b8cb79    </Ид>
	<Наименование>Трактиръ: Front-Office v3 (3.0.22) — «Трактиръ: Back-Office ПРОФ», ред. 3.0 (3.0.26)</Наименование>
	<ДатаВремяСоздания>2014-06-05T14:25:14</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="3.0.22.5" СинонимКонфигурации="Трактиръ: Front-Office v3 ПРЕМИУМ">ТрактиръFrontOfficeПРЕМИУМ</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="3.0.26.13" СинонимКонфигурации="Трактиръ: Back-Office, редакция 3.0">ТрактиръBackOfficeProf</Приемник>
	<ПослеЗагрузкиПравилОбмена>Если Лев(Метаданные.Имя, 19) = "ТрактиръFrontOffice" Тогда
	Сообщить("Правила конвертации: Трактиръ: Front-Office v.3 —&gt; Трактиръ: Back-Office ПРОФ, ред. 3.0");
Иначе
	Сообщить("Правила конвертации не предназначены для текущей конфигурации");
КонецЕсли</ПослеЗагрузкиПравилОбмена>
	<Параметры>
		<Параметр Имя="ПереноситьНаименования                            " Наименование="Замещать наименования справочников у существующих элементов (Номенклатура, Склады, Сотрудники)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>Перечисления</Код>
			<Наименование>Перечисления</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>СБ_ТипыРасхода</Код>
				<Наименование>ПеречислениеСсылка.ТипыРасхода --&gt; ПеречислениеСсылка.СБ_ТипыРасхода</Наименование>
				<Порядок>50</Порядок>
				<Источник>ПеречислениеСсылка.ТипыРасхода</Источник>
				<Приемник>ПеречислениеСсылка.СБ_ТипыРасхода</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Реализация --&gt; Реализация</Наименование>
						<Порядок>50</Порядок>
						<Источник>Реализация</Источник>
						<Приемник>Реализация</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Списание --&gt; Списание</Наименование>
						<Порядок>100</Порядок>
						<Источник>Списание</Источник>
						<Приемник>Списание</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Возврат --&gt; Возврат</Наименование>
						<Порядок>150</Порядок>
						<Источник>Возврат</Источник>
						<Приемник>Возврат</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВозвратСуммы --&gt; ВозвратСуммы</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВозвратСуммы</Источник>
						<Приемник>ВозвратСуммы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СБ_ТипыОплаты</Код>
				<Наименование>Перечисление: Типы оплаты</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>//Индекс = Перечисления.ТипыОплаты.Индекс(Источник);
//ИмяЗначениеПеречисления = Метаданные.Перечисления.ТипыОплаты.ЗначенияПеречисления[Индекс].Имя;

//Если ИмяЗначениеПеречисления = "НаНомер" ИЛИ ИмяЗначениеПеречисления = "НаФолио" Тогда
//	ИмяЗначениеПеречисления = "Безнал";
//ИначеЕсли ИмяЗначениеПеречисления = "Сертификат" Тогда
//	ИмяЗначениеПеречисления = "Неплательщик";
//КонецЕсли;

//Приемник = ИмяЗначениеПеречисления;
</ПередВыгрузкой>
				<Источник>ПеречислениеСсылка.ТипыОплаты</Источник>
				<Приемник>ПеречислениеСсылка.СБ_ТипыОплаты</Приемник>
				<Свойства/>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>200</Порядок>
			<Правило>
				<Код>Контрагенты</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.Контрагенты</Наименование>
				<Порядок>50</Порядок>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>9</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>НеЗамещать = НЕ Параметры.ПереноситьНаименования;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>4</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторЕдиницИзмерения</Код>
				<Наименование>СправочникСсылка.КлассификаторЕдиницИзмерения --&gt; СправочникСсылка.КлассификаторЕдиницИзмерения</Наименование>
				<Порядок>100</Порядок>
				<Источник>СправочникСсылка.КлассификаторЕдиницИзмерения</Источник>
				<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>3</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>НеЗамещать = НЕ Параметры.ПереноситьНаименования;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Номенклатура</Код>
				<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.Номенклатура</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>Если НЕ Объект.ЭтоГруппа Тогда
	Объект.Услуга = Объект.СБ_ТипНоменклатуры = Перечисления.СБ_ТипыНоменклатуры.Услуга;
КонецЕсли;</ПослеЗагрузки>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>11</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>НеЗамещать = НЕ Параметры.ПереноситьНаименования;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>4</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СБ_ГруппыОплаты</Код>
				<Наименование>СправочникСсылка.ГруппыОплаты --&gt; СправочникСсылка.СБ_ГруппыОплаты</Наименование>
				<Порядок>200</Порядок>
				<Источник>СправочникСсылка.ГруппыОплаты</Источник>
				<Приемник>СправочникСсылка.СБ_ГруппыОплаты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>8</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Склады</Код>
				<Наименование>СправочникСсылка.МестаРеализации --&gt; СправочникСсылка.Склады</Наименование>
				<Порядок>250</Порядок>
				<Источник>СправочникСсылка.МестаРеализации</Источник>
				<Приемник>СправочникСсылка.Склады</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>9</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>НеЗамещать = НЕ Параметры.ПереноситьНаименования;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>350</Порядок>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>3</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПараметрыПрописиНаРусском --&gt; ПараметрыПрописиНаРусском</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПараметрыПрописиНаРусском" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ПараметрыПрописиНаРусском" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СБ_ВариантыОплаты</Код>
				<Наименование>Справочник: Варианты оплаты</Наименование>
				<Порядок>400</Порядок>
				<Источник>СправочникСсылка.ВариантыОплаты</Источник>
				<Приемник>СправочникСсылка.СБ_ВариантыОплаты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>8</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>500</Порядок>
			<Правило>
				<Код>СБ_ОтчетФО</Код>
				<Наименование>ДокументСсылка.ОтчетФО --&gt; ДокументСсылка.СБ_ОтчетФО</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Отказ = Источник.ПометкаУдаления;</ПередВыгрузкой>
				<ПослеЗагрузки>ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
Объект.Ответственный = ТекПользователь;
Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");

Если ЗначениеЗаполнено(Объект.ГруппаОплаты)
	И ЗначениеЗаполнено(Объект.ГруппаОплаты.Организация) Тогда
	Объект.Организация = Объект.ГруппаОплаты.Организация;
КонецЕсли;

мСписокВидовДоговоров = Новый СписокЗначений;
мСписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
мСписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);

БухгалтерскийУчетПереопределяемый.УстановитьДоговорКонтрагента(Объект.ДоговорКонтрагента, Объект.Контрагент,
													   Объект.Организация, мСписокВидовДоговоров);

Для Каждого СтрокаДокумента ИЗ Объект.Товары Цикл
	СтрокаДокумента.Коэффициент = СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьКоэффициентЕдиницыНоменклатуры(СтрокаДокумента.Номенклатура, СтрокаДокумента.ЕдиницаИзмерения);
	
	Если ЗначениеЗаполнено(СтрокаДокумента.Контрагент) Тогда
		// Выполняем общие действия для всех документов при изменении Контрагента.
		
		БухгалтерскийУчетПереопределяемый.УстановитьДоговорКонтрагента(СтрокаДокумента.ДоговорКонтрагента, СтрокаДокумента.Контрагент,
															   Объект.Организация, мСписокВидовДоговоров);
	КонецЕсли;
	
КонецЦикла;

Для Каждого СтрокаДокумента ИЗ Объект.Специфики Цикл
	СтрокаДокумента.Коэффициент = СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьКоэффициентЕдиницыНоменклатуры(СтрокаДокумента.Номенклатура, СтрокаДокумента.ЕдиницаИзмерения);
КонецЦикла;

Если НЕ Объект.ТипРасхода = Перечисления.СБ_ТипыРасхода.Возврат
	И НЕ Объект.ТипРасхода = Перечисления.СБ_ТипыРасхода.ВозвратСуммы Тогда
	Объект.ВключатьСпецификиВВыпускПродукции			= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("ВключатьСпецификиВВыпускПродукции");
	Объект.УчитыватьОстаткиТоваровИБлюдВМестеРеализации	= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("УчитыватьОстаткиНоменклатурыВМестеРеализации");
	Если Объект.ТипРасхода = Перечисления.СБ_ТипыРасхода.Реализация Тогда
		Объект.РегистрироватьЦеныРеализации				= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("РегистрироватьЦеныРеализации");
	КонецЕсли;
	Объект.ФормироватьДокументыВыпускИПеремещение		= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("ФормироватьДокументыВыпускИПеремещение");
	Объект.УчитыватьОстаткиПродукцииПолуфабрикатов		= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("УчитыватьОстаткиПродукцииПолуфабрикатов");
	Объект.ТипДокументаДляСпецифик = СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("ТипДокументаДляСпецифик");
	Если Не ЗначениеЗаполнено(Объект.ТипДокументаДляСпецифик) Тогда
		Объект.ТипДокументаДляСпецифик = Перечисления.СБ_ТипыДокументовРасхода.СписаниеТоваров;
	 КонецЕсли;

Иначе
	Объект.ФормироватьДокументыВыпускИПеремещение		= Ложь;
	Объект.УчитыватьОстаткиПродукцииПолуфабрикатов		= Ложь;
	Объект.ВключатьСпецификиВВыпускПродукции			= Ложь;
	Объект.УчитыватьОстаткиТоваровИБлюдВМестеРеализации	= Ложь;
	Объект.РегистрироватьЦеныРеализации					= Ложь;	
КонецЕсли;	

Если ЗначениеЗаполнено(Объект.Организация) Тогда
	Объект.НеФормироватьКассовыеДокументы 				= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("НеФормироватьКассовыеДокументы", Объект.Организация);
	Объект.СуммаВключаетНДС								= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("СуммаВключаетНДС", Объект.Организация);
	Объект.НДСВСтоимостиТоваров							= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("НДСВСтоимостиТоваров", Объект.Организация);
КонецЕсли;

Объект.ВидОперации		= Перечисления.СБ_ВидыОперацийОтчетФО.FrontOfficeV3;
Объект.СчетЗатрат 					= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("СчетУчетаЗатратПроизводства");
Объект.СписатьНаСебестоимость		= СБ_ОбщиеПроцедурыИФункцииСервер.ПолучитьЗначениеПоУмолчанию("СписатьНаСебестоимость")</ПослеЗагрузки>
				<Источник>ДокументСсылка.ОтчетФО</Источник>
				<Приемник>ДокументСсылка.СБ_ОтчетФО</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>ГруппаОплаты --&gt; ГруппаОплаты</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ГруппаОплаты" Вид="Реквизит" Тип="СправочникСсылка.ГруппыОплаты"/>
						<Приемник Имя="ГруппаОплаты" Вид="Реквизит" Тип="СправочникСсылка.СБ_ГруппыОплаты"/>
						<КодПравилаКонвертации>СБ_ГруппыОплаты                                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ИтоговаяСумма --&gt; ИтоговаяСумма</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ИтоговаяСумма" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ИтоговаяСумма" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>Контрагент --&gt; Контрагент</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>Номер --&gt; Номер</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>11</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>СуммаБезнал --&gt; СуммаБезнал</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="СуммаБезнал" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СуммаБезнал" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>СуммаДокумента --&gt; СуммаДокумента</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>СуммаКредит --&gt; СуммаКредит</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="СуммаКредит" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СуммаКредит" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>СуммаНал --&gt; СуммаНал</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="СуммаНал" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СуммаНал" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>СуммаНеплательщик --&gt; СуммаНеплательщик</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="СуммаНеплательщик" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СуммаНеплательщик" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>СуммаСкидок --&gt; СуммаСкидок</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="СуммаСкидок" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СуммаСкидок" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>ТипРасхода --&gt; ТипРасхода</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="ТипРасхода" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыРасхода"/>
						<Приемник Имя="ТипРасхода" Вид="Реквизит" Тип="ПеречислениеСсылка.СБ_ТипыРасхода"/>
						<КодПравилаКонвертации>СБ_ТипыРасхода                                    </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>17</Код>
						<Наименование>Товары --&gt; Товары</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>18</Код>
							<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаИзмерения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>Идентификатор --&gt; Идентификатор</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>СуммаБезСкидки --&gt; СуммаБезСкидки</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="СуммаБезСкидки" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаБезСкидки" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>СуммаБонусов --&gt; СуммаБонусов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="СуммаБонусов" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаБонусов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование>ВариантОплаты --&gt; ВариантОплаты</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ВариантОплаты" Вид="Реквизит" Тип="СправочникСсылка.ВариантыОплаты"/>
							<Приемник Имя="ВариантОплаты" Вид="Реквизит" Тип="СправочникСсылка.СБ_ВариантыОплаты"/>
							<КодПравилаКонвертации>СБ_ВариантыОплаты                                 </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>24</Код>
						<Наименование>Склад --&gt; МестоРеализации</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.МестаРеализации"/>
						<Приемник Имя="МестоРеализации" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Ложь;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>26</Код>
						<Наименование>--&gt; Специфики</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Специфики" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если глВерсия &gt; 1 Тогда	
	ТабличнаяЧасть = Источник.Специфики.Выгрузить();
Иначе
	Отказ = Истина;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; ЕдиницаИзмерения</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ЕдиницаИзмерения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ИдентификаторТовара</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторТовара" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ИдентификаторТовара;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>36</Код>
						<Наименование>РучноеИзменение --&gt; РучноеИзменение</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="РучноеИзменение" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="РучноеИзменение" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПриходныйКассовыйОрдер</Код>
				<Наименование>ДокументСсылка.НачислениеБезнал --&gt; ДокументСсылка.ПриходныйКассовыйОрдер</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Отказ = Источник.Сумма &lt; 0;
Если Источник.ВариантОплаты.Тип &lt;&gt; Перечисления.ТипыОплаты.Нал Тогда
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>//Выполнить(Алгоритмы.ЗаполнитьРеквизитыРасчетногоДокумента);

// Установим прочие реквизиты
Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) Тогда
	Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;
КонецЕсли;

Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
	Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
КонецЕсли;

Если НЕ ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
	Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
КонецЕсли;

Если НЕ ЗначениеЗаполнено(Объект.СчетКасса) Тогда
	Если Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации;
	Иначе
		Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизацииВал;
	КонецЕсли;
КонецЕсли;

РозничнаяТорговляОблагаетсяЕНВД = УчетнаяПолитика.РозничнаяТорговляОблагаетсяЕНВД(Объект.Организация, Объект.Дата);

Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.РозничнаяВыручка Тогда
	Объект.Контрагент = Справочники.Склады.ПустаяСсылка();
КонецЕсли;

Если Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
	СтрокаПлатеж = Объект.РасшифровкаПлатежа.Добавить();
	СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
КонецЕсли;

Для Каждого СтрокаПлатеж Из Объект.РасшифровкаПлатежа Цикл
	
	Если НЕ ЗначениеЗаполнено(СтрокаПлатеж.ДоговорКонтрагента) Тогда
		
		ВидыДоговоров = Новый Массив;
		
		ВидыДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
		ВидыДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));
		ВидыДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку"));
		ВидыДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));
		ВидыДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку"));
		
		НовыйДоговор  = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		
		Отбор = Новый Структура;
		ОплатаВВалюте = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Объект.СчетКасса).Валютный;
		ОтборОплатаВВалюте = Новый Структура("ЗначениеОтбора", ОплатаВВалюте);
		Отбор.Вставить("ОплатаВВалюте", ОтборОплатаВВалюте);
		Если ОплатаВВалюте Тогда
			ОтборВалютаВзаиморасчетов = Новый Структура("ЗначениеОтбора", Объект.ВалютаДокумента);
			Отбор.Вставить("ВалютаВзаиморасчетов", ОтборВалютаВзаиморасчетов);
		КонецЕсли;
		
		БухгалтерскийУчетПереопределяемый.УстановитьДоговорКонтрагента(
		НовыйДоговор, Объект.Контрагент, Объект.Организация, ВидыДоговоров, Отбор);
		СтрокаПлатеж.ДоговорКонтрагента = НовыйДоговор;
		
		Если ЗначениеЗаполнено(СтрокаПлатеж.ДоговорКонтрагента) Тогда
			
			ПрименениеУСН              = УчетнаяПолитика.ПрименяетсяУСН(Объект.Организация, Объект.Дата);
			ПрименяетсяОсобыйПорядокНалогообложения =
			УчетнаяПолитика.ПрименяетсяОсобыйПорядокНалогообложения(Объект.Организация, Объект.Дата);

			Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика Тогда
				СтрокаПлатеж.СтавкаНДС = ?(Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя 
				И (ПрименениеУСН ИЛИ ПрименяетсяОсобыйПорядокНалогообложения), 
				Перечисления.СтавкиНДС.БезНДС, Перечисления.СтавкиНДС.НДС18);
				ЗначениеСтавкиНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаПлатеж.СтавкаНДС);
				СтрокаПлатеж.СуммаНДС = СтрокаПлатеж.СуммаПлатежа * ЗначениеСтавкиНДС / (100 + ЗначениеСтавкиНДС);
			КонецЕсли;
			
			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(СтрокаПлатеж.ДоговорКонтрагента.ВалютаВзаиморасчетов, Объект.Дата);
			СтрокаПлатеж.КурсВзаиморасчетов      = СтруктураКурса.Курс;
			СтрокаПлатеж.КратностьВзаиморасчетов = СтруктураКурса.Кратность;
			
			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
			КурсДокумента = СтруктураКурса.Курс;
			КратностьДокумента = СтруктураКурса.Кратность;
			
			СтрокаПлатеж.СуммаВзаиморасчетов = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
			СтрокаПлатеж.СуммаПлатежа,
			Объект.ВалютаДокумента, СтрокаПлатеж.ДоговорКонтрагента.ВалютаВзаиморасчетов,
			КурсДокумента, СтрокаПлатеж.КурсВзаиморасчетов,
			КратностьДокумента, СтрокаПлатеж.КратностьВзаиморасчетов);
			
		КонецЕсли;
		
	КонецЕсли;
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
		Объект.Организация, Объект.Контрагент, СтрокаПлатеж.ДоговорКонтрагента);
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика Тогда
		
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
		СтрокаПлатеж.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
		
	Иначе
		
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
		СтрокаПлатеж.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
		
	КонецЕсли;
	
	Если РозничнаяТорговляОблагаетсяЕНВД Тогда
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ВыручкаЕНВД;
	Иначе
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
	КонецЕсли;
	
	Если (Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя)
		ИЛИ (Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика) Тогда
		СтрокаПлатеж.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
	КонецЕсли; 
	
	
КонецЦикла;

ПараметрыУСН = УчетУСН.СтруктураПараметровОбъектаДляУСН(Объект);
НалоговыйУчетУСН.ЗаполнитьОтражениеДокументаВУСН(Объект, ПараметрыУСН);</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.НачислениеБезнал</Источник>
				<Приемник>ДокументСсылка.ПриходныйКассовыйОрдер</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение =  "Введен на основании: Начисления (удержания) по картам № "+Источник.Номер+" от "+Источник.Дата;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Контрагент</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Контрагент" Вид="Реквизит"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.Клиент.Контрагент;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СуммаДокумента</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасходныйКассовыйОрдер</Код>
				<Наименование>ДокументСсылка.НачислениеБезнал --&gt; ДокументСсылка.ПриходныйКассовыйОрдер</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Отказ = Источник.Сумма &gt;= 0;
Если Источник.ВариантОплаты.Тип &lt;&gt; Перечисления.ТипыОплаты.Нал Тогда
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>//Выполнить(Алгоритмы.ЗаполнитьРеквизитыРасчетногоДокумента);

// Установим прочие реквизиты
// Установим прочие реквизиты
Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) Тогда
	Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратПокупателю;
КонецЕсли;

Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
	Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
КонецЕсли;

Если НЕ ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
	Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
КонецЕсли;


Если НЕ ЗначениеЗаполнено(Объект.СчетКасса) Тогда
	Если Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации;
	Иначе
		Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизацииВал;
	КонецЕсли;
КонецЕсли;

РозничнаяТорговляОблагаетсяЕНВД = УчетнаяПолитика.РозничнаяТорговляОблагаетсяЕНВД(Объект.Организация, Объект.Дата);

Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.РозничнаяВыручка Тогда
	Объект.Контрагент = Справочники.Склады.ПустаяСсылка();
КонецЕсли;

Для Каждого СтрокаПлатеж Из Объект.РасшифровкаПлатежа Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
		Объект.Организация, Объект.Контрагент, СтрокаПлатеж.ДоговорКонтрагента);
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика Тогда
		
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
		СтрокаПлатеж.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
		
	Иначе
		
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
		СтрокаПлатеж.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
		
	КонецЕсли;
	
	Если РозничнаяТорговляОблагаетсяЕНВД Тогда
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ВыручкаЕНВД;
	Иначе
		СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
	КонецЕсли;

	Если (Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя)
			ИЛИ (Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика) Тогда
		СтрокаПлатеж.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
	КонецЕсли; 
	
КонецЦикла;

ПараметрыУСН = УчетУСН.СтруктураПараметровОбъектаДляУСН(Объект);
НалоговыйУчетУСН.ЗаполнитьОтражениеДокументаВУСН(Объект, ПараметрыУСН);</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.НачислениеБезнал</Источник>
				<Приемник>ДокументСсылка.РасходныйКассовыйОрдер</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение =  "Введен на основании: Начисления (удержания) по картам № "+Источник.Номер+" от "+Источник.Дата;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Контрагент</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Контрагент" Вид="Реквизит"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.Клиент.Контрагент;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СуммаДокумента</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Значение = -Источник.Сумма;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>ОтчетФО</Код>
				<Наименование>Отчет ФО</Наименование>
				<Порядок>50</Порядок>
				<КодПравилаКонвертации>СБ_ОтчетФО                                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ОтчетФО</ОбъектВыборки>
			</Правило>
			<Правило Отключить="true">
				<Код>Начисление</Код>
				<Наименование>Начисления</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>ПриходныйКассовыйОрдер                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.НачислениеБезнал</ОбъектВыборки>
			</Правило>
			<Правило Отключить="true">
				<Код>Удержание</Код>
				<Наименование>Удержания</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>РасходныйКассовыйОрдер                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.НачислениеБезнал</ОбъектВыборки>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ЗаполнитьРеквизитыРасчетногоДокумента" ИспользуетсяПриЗагрузке="true">
			<Текст>
	ДокументОбъект = Объект;
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	ВалютаРегламентированногоУчета = Объект.мВалютаРегламентированногоУчета;
	ПараметрОбъектКопирования = Неопределено;
	 
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	
	// Реквизиты, которые требуется заполнить значениями по умолчанию в том числе и при копировании
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Ответственный", МетаданныеДокумента) Тогда
		ДокументОбъект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойОтветственный");
	КонецЕсли;
	
	РасшифровкаПлатежа = ДокументОбъект.РасшифровкаПлатежа;
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		СтрокаПлатеж = РасшифровкаПлатежа.Добавить();
	Иначе
		СтрокаПлатеж = РасшифровкаПлатежа[0];
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["Организация"]) Тогда
	  
		ДокументОбъект.Организация = глЗначениеПеременной("ОсновнаяОрганизация");
		
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВНалоговомУчете", МетаданныеДокумента) Тогда
			ДокументОбъект.ОтражатьВНалоговомУчете = НЕ УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "НеОтражатьДокументыВНалоговомУчете");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВидОперации", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["ВидОперации"]) Тогда
		ДокументОбъект.ВидОперации = Перечисления[ДокументОбъект.ВидОперации.Метаданные().Имя][0];
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ФормаОплаты", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["ФормаОплаты"]) Тогда

		ДокументОбъект.ФормаОплаты=Перечисления.ВидыДенежныхСредств.Наличные;

		Если ОбщегоНазначения.ЕстьРеквизитДокумента("БанковскийСчетКасса", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["БанковскийСчетКасса"]) Тогда
			ДокументОбъект.БанковскийСчетКасса = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяКасса");
			ДокументОбъект.ВалютаДокумента = ДокументОбъект.БанковскийСчетКасса.ВалютаДенежныхСредств;
		КонецЕсли;

	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Касса", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["Касса"]) Тогда
		ДокументОбъект.Касса = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяКасса");
		ДокументОбъект.ВалютаДокумента = ДокументОбъект.Касса.ВалютаДенежныхСредств;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтавкаНДС", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["СтавкаНДС"]) Тогда
		СтрокаПлатеж.СтавкаНДС = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяСтавкаНДС");
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СчетОрганизации", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["СчетОрганизации"])
	   	 И ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда

	   	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ВалютаДокумента) 
		   ИЛИ ДокументОбъект.Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств = ДокументОбъект.ВалютаДокумента Тогда
		   
			ДокументОбъект.СчетОрганизации = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
			ДокументОбъект.ВалютаДокумента = ДокументОбъект.Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств;
			
		КонецЕсли;

	КонецЕсли;

	ЕстьРасчетыСКонтрагентами = УправлениеДенежнымиСредствами.ЕстьРасчетыСКонтрагентами(ДокументОбъект.ВидОперации);
	ЕстьРасчетыПоКредитам     = УправлениеДенежнымиСредствами.ЕстьРасчетыПоКредитам(ДокументОбъект.ВидОперации);

	ДокументОбъект.ЕстьРасчетыСКонтрагентами = ЕстьРасчетыСКонтрагентами;
	ДокументОбъект.ЕстьРасчетыПоКредитам     = ЕстьРасчетыПоКредитам;

	Если ЕстьРасчетыСКонтрагентами ИЛИ ЕстьРасчетыПоКредитам Тогда
		
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("СчетКонтрагента", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["СчетКонтрагента"])
			И ЗначениеЗаполнено(ДокументОбъект.Контрагент.ОсновнойБанковскийСчет) 
			И ДокументОбъект.Контрагент.ОсновнойБанковскийСчет.ВалютаДенежныхСредств = ДокументОбъект.СчетОрганизации.ВалютаДенежныхСредств Тогда

			ДокументОбъект.СчетКонтрагента = ДокументОбъект.Контрагент.ОсновнойБанковскийСчет;

		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(СтрокаПлатеж.ДоговорКонтрагента) И ЗначениеЗаполнено(ДокументОбъект.Контрагент) Тогда 
			
			ОсновнойДоговорКонтрагента = УправлениеПользователями.ДоступныйДоговорКонтрагента(ДокументОбъект.Контрагент.ОсновнойДоговорКонтрагента);
			
			Если НЕ УправлениеВзаиморасчетами.ОпределитьВидДоговораСКонтрагентом(ДокументОбъект.ВидОперации).НайтиПоЗначению(ОсновнойДоговорКонтрагента.ВидДоговора)=Неопределено Тогда

				Если ДокументОбъект.Организация.Пустая() Тогда
					СтрокаПлатеж.ДоговорКонтрагента = ОсновнойДоговорКонтрагента;
					Организация = ОсновнойДоговорКонтрагента.Организация;
				ИначеЕсли ОсновнойДоговорКонтрагента.Организация.Пустая()
					ИЛИ ОсновнойДоговорКонтрагента.Организация=ДокументОбъект.Организация Тогда
					СтрокаПлатеж.ДоговорКонтрагента = ОсновнойДоговорКонтрагента;
				КонецЕсли;

			КонецЕсли;

			СтруктураКурсаВзаиморасчетов         = МодульВалютногоУчета.ПолучитьКурсВалюты(
				СтрокаПлатеж.ДоговорКонтрагента.ВалютаВзаиморасчетов, ДокументОбъект.Дата);
			СтрокаПлатеж.КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
			СтрокаПлатеж.КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;

			Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента)
		 		И НЕ ЗначениеЗаполнено(ДокументОбъект["ВалютаДокумента"])
				И НЕ СтрокаПлатеж.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах Тогда
				ДокументОбъект.ВалютаДокумента = СтрокаПлатеж.ДоговорКонтрагента.ВалютаВзаиморасчетов;
			КонецЕсли;

		КонецЕсли; // Договор

	КонецЕсли; // Контрагент

	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ВалютаДокумента) Тогда
		ДокументОбъект.ВалютаДокумента = ВалютаРегламентированногоУчета;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ДокументОбъект.КурсДокумента) Тогда

		СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, ДокументОбъект.Дата);

		ДокументОбъект.КурсДокумента      = СтруктураКурсаДокумента.Курс;
		ДокументОбъект.КратностьДокумента = СтруктураКурсаДокумента.Кратность;	

	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СчетБанк", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["СчетБанк"]) Тогда
		УправлениеДенежнымиСредствами.ЗаполнитьСчетУчетаДенежныхСредств(ДокументОбъект, "СчетБанк");
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("СчетКасса", МетаданныеДокумента)
		 И НЕ ЗначениеЗаполнено(ДокументОбъект["СчетКасса"]) Тогда
		УправлениеДенежнымиСредствами.ЗаполнитьСчетУчетаДенежныхСредств(ДокументОбъект, "СчетКасса");
	КонецЕсли;</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>