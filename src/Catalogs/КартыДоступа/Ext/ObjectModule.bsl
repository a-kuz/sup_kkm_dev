
// Обработчик события ПередЗаписью
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		
		Если НЕ ЗначениеЗаполнено(Наименование) Тогда
			Сообщить("Не заполнено наименование!",СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(Идентификатор) Тогда
			Сообщить("Не заполнен идентификатор карты!",СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		//Если НЕ ЗначениеЗаполнено(ИнформационнаяБаза) Тогда
		//	Сообщить("Не заполнена ИБ карты!",СтатусСообщения.Важное);
		//	Отказ = Истина;
		//КонецЕсли;
		
		Если ЗначениеЗаполнено(Дата1) И ЗначениеЗаполнено(Дата2) И Дата1>Дата2 Тогда
			Сообщить("Указан некорректный период!",СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		ПровСсылка = Ссылка;
		Если НЕ ПроверкаУникальностиРеквизитаСправочника(ПровСсылка, "Идентификатор", Идентификатор) Тогда
			Сообщить("Идентификатор уже использован в """+ПровСсылка.Наименование+"""", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Идентификатор1) Тогда
			Если НЕ ПроверкаУникальностиРеквизитаСправочника(ПровСсылка, "Идентификатор1", Идентификатор1) Тогда
				Сообщить("Идентификатор1 уже использован в """+ПровСсылка.Наименование+"""", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(Идентификатор2) Тогда
			Если НЕ ПроверкаУникальностиРеквизитаСправочника(ПровСсылка, "Идентификатор2", Идентификатор2) Тогда
				Сообщить("Идентификатор2 уже использован в """+ПровСсылка.Наименование+"""", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(ИдентификаторHEX) Тогда
			Если НЕ ПроверкаУникальностиРеквизитаСправочника(ПровСсылка, "ИдентификаторHEX", ИдентификаторHEX) Тогда
				Сообщить("GUID HEX уже использован в """+ПровСсылка.Наименование+"""", СтатусСообщения.Важное);
				//Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Привязка) И Не ПроверкаУникальностиРеквизитаСправочника(ПровСсылка, "Привязка", Привязка) Тогда
			Сообщить("Привязка уже использована в """ + СокрЛП(ПровСсылка.Наименование) + """", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Привязка= Неопределено;
	Идентификатор = "";
	Идентификатор1 = "";
	Идентификатор2 = "";
	ИдентификаторHEX = "";
КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение Тогда
Процедура ПечатьКонверта() экспорт
	Перем Клиент;
	
	Если НЕ ЭтотОбъект.Привязка = Неопределено тогда
		Клиент = ЭтотОбъект.Привязка;
		// Вставить содержимое обработчика.
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Карты_Конверт";
		Макет = ПолучитьМакет("Конверт");
		
		Макет.Параметры.Наименование 	= Клиент.Наименование;
		Макет.Параметры.КартаДоступа 	= ""+ксТрактир.Число16в10(ксТрактир.Число10в16(Лев(ЭтотОбъект.Идентификатор,3))+ ксТрактир.Число10в16(Сред(Сокрлп(ЭтотОбъект.Идентификатор),4)));//ЭтотОбъект.Идентификатор;
		Макет.Параметры.Подразделение = ""+Клиент.Родитель.Родитель+","+Клиент.Родитель;
		
		ТабДокумент.Вывести(Макет);
		
		ТабДокумент.ОтображатьСетку = Ложь;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		
		ТабДокумент.Показать();
	Иначе
		сообщить("Не установлена привязка к клиенту");
	КонецЕсли;
КонецПроцедуры
#КонецЕсли

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	
	Если НЕ ИнформационнаяБаза.Пустая() И НЕ ПустаяСтрока(Идентификатор2) Тогда
		СтандартнаяОбработка = Ложь;
		Код = ИнформационнаяБаза.Код + Прав(СокрЛП(Идентификатор2), 5); 
	КонецЕсли;
	
КонецПроцедуры
