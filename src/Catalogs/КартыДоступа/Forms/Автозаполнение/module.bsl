
Перем ВыбШаблон;

Процедура ЗакрытьНажатие(Элемент)
	Закрыть();
КонецПроцедуры

Процедура ЗаполнитьНажатие(Элемент)
	Если Не ЗначениеЗаполнено(Количество) Тогда
		Предупреждение("Укажите количество создаваемых карт!");
		Возврат;	
	КонецЕсли;
	
	Если ПрисвоениеКодов И Не ЗначениеЗаполнено(НачальныйКод) Тогда
		Предупреждение("Укажите начальный код карты!");
		Возврат;
	КонецЕсли;                                              
	
	Если ПрисвоениеКодов И НачальныйКод = "000000" Тогда
		Предупреждение("Начальный код задан не корректно!"); 
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьСвойИд И Не ЗначениеЗаполнено(Ид) Тогда
		Предупреждение("Укажите начальный идентификатор карты!");
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьСвойИд И ВыборШаблона = "EAN-13" И СтрДлина(СокрЛП(Префикс) + СокрЛП(Ид) + СокрЛП(Суффикс)) <> 12 Тогда
		Предупреждение("Количество знаков в шаблоне не соответствует EAN-13 (12 символов)!");
		Возврат;
	КонецЕсли;

	Если Вопрос("Создать карты доступа?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПрисвоениеКодов Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		|	КартыДоступа.Код КАК Код
		|ИЗ
		|	Справочник.КартыДоступа КАК КартыДоступа
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код УБЫВ");
		Выгрузка = Запрос.Выполнить().Выгрузить();
		Если Выгрузка.Количество()>0 Тогда
			ТекКод = Формат(Число(Выгрузка[0].Код) +1,"ЧГ=0");
		Иначе 
			ТекКод = 1;
		КонецЕсли;
	Иначе
		ТекКод = Формат(Число(НачальныйКод), "ЧГ=0");
	КонецЕсли;
	
	НачатьТранзакцию();
	
	ТекИд = Ид;
	Для Номер = 1 По Количество Цикл                       			
		
		Карта = Справочники.КартыДоступа.СоздатьЭлемент();
		Карта.Родитель = ВыбГруппа;
		// < КС_ВДВ -------------------------------------------------------------------- 
		Карта.ТипКарты = ТипКарт;
		// КС_ВДВ > -------------------------------------------------------------------- 
		Если ПрисвоениеКодов Тогда
			Код = ФорматироватьКод(Строка(ТекКод));
			Карта.Код = Код;
			ТекКод = Формат(Число(ТекКод) + 1, "ЧГ=0");
		Иначе
			Карта.Код = ФорматироватьКод(Строка(ТекКод));;
			ТекКод = Формат(Число(ТекКод) + 1, "ЧГ=0");
		КонецЕсли;	
		
		Если ИспользоватьСвойИд Тогда
			КолСимволов = СтрДлина(СокрЛП(Ид));
			
			Если ВыборШаблона = "EAN-13" Тогда
			    Карта.Идентификатор = СформироватьШК(СокрЛП(Префикс) + СокрЛП(ТекИд) + СокрЛП(Суффикс));
			Иначе
				Карта.Идентификатор = СокрЛП(Префикс) + СокрЛП(ТекИд) + СокрЛП(Суффикс);
			КонецЕсли;
			
			ТекИд = Формат(Число(ТекИд) + 1, "ЧГ=0"); 
			Пока СтрДлина(СокрЛП(ТекИд)) < КолСимволов Цикл
				ТекИд = "0" + СокрЛП(ТекИд);
			КонецЦикла;	
			
		Иначе
			Карта.Идентификатор = Карта.Код;
			
		КонецЕсли;	
		
		Если ЗадатьПериод Тогда
			Карта.Дата1 = ДатаС;
			Карта.Дата2 = ДатаПо;
		КонецЕсли;
		
		Если СоздаватьКлиента тогда
			Карта.Наименование = "Клиент "+(счетчикНачало+номер);
		иначе
			Карта.Наименование = "Карта № " + Карта.Код;
		КонецЕсли;
		
		Попытка
			Карта.Записать();
		Исключение
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
		
		Если СоздаватьКлиента тогда
			Клиент = Справочники.Клиенты.СоздатьЭлемент();
			Клиент.Родитель = КлиентРодитель;
			Клиент.Наименование = "Клиент "+(счетчикНачало+номер);
			Клиент.Записать();
			
			Карта.Привязка = Клиент.Ссылка;
			Карта.Записать();
		КонецЕсли;
		
		Стр = Результат.Добавить();
		Стр.Ссылка = Карта.Ссылка;		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	Закрыть();
КонецПроцедуры

Процедура ПрисвоениеКодовПриИзменении(Элемент)
	УправлениеФормой();	
КонецПроцедуры

Процедура ИспользоватьСвойИдПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

Процедура ПриОткрытии()
	УправлениеФормой();
КонецПроцедуры

Процедура ЗадатьПериодПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

Процедура УправлениеФормой()
	ЭлементыФормы.НачальныйКод.Доступность		= ПрисвоениеКодов;
	ЭлементыФормы.НадписьПрефикс.Доступность	= ИспользоватьСвойИд;
	ЭлементыФормы.НадписьСуффикс.Доступность	= ИспользоватьСвойИд;
	ЭлементыФормы.НадписьНачИд.Доступность		= ИспользоватьСвойИд;
	ЭлементыФормы.Префикс.Доступность			= ИспользоватьСвойИд;
	ЭлементыФормы.Суффикс.Доступность			= ИспользоватьСвойИд;
	ЭлементыФормы.Ид.Доступность				= ИспользоватьСвойИд;
	ЭлементыФормы.ВыборШаблона.Доступность		= ИспользоватьСвойИд;
	ЭлементыФормы.НадписьС.Доступность			= ЗадатьПериод;
	ЭлементыФормы.НадписьПо.Доступность			= ЗадатьПериод;
	ЭлементыФормы.ДатаС.Доступность				= ЗадатьПериод;
	ЭлементыФормы.ДатаПо.Доступность			= ЗадатьПериод;
	
КонецПроцедуры

Процедура КнопкаВыборПериодаНажатие(Элемент)
	ИнтерфейсАдмина.ВыборПериода(ДатаС, ДатаПо);
КонецПроцедуры

Процедура РезультатВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Не Колонка.Имя = "Владелец" Тогда
		ВыбраннаяСтрока.Ссылка.ПолучитьФорму().ОткрытьМодально();
	Иначе
		Список = Новый СписокЗначений;
		Список.Добавить("Сотрудники");
		Список.Добавить("Клиенты");
		Список.Добавить("Посадочные места");
		
		Кто = ВыбратьИзМеню(Список);
		Если Кто = Неопределено Тогда 
			Возврат;
		ИначеЕсли Кто.Значение = "Сотрудники" Тогда
			ФормаВыбора = Справочники.Сотрудники.ПолучитьФормуВыбора();
		ИначеЕсли  Кто.Значение = "Клиенты" Тогда
			ФормаВыбора = Справочники.Клиенты.ПолучитьФормуВыбора();
		ИначеЕсли  Кто.Значение = "Посадочные места" Тогда
			ФормаВыбора = Справочники.ПосадочныеМеста.ПолучитьФормуВыбора();
		КонецЕсли;
		
		Владелец = ФормаВыбора.ОткрытьМодально();
		
		Если ЗначениеЗаполнено(Владелец) Тогда
			Объект = ВыбраннаяСтрока.Ссылка.ПолучитьОбъект();
			Объект.Привязка = Владелец;
			Попытка
				Объект.Записать();	
			Исключение
			КонецПопытки;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура РезультатПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ДанныеСтроки.Код = ДанныеСтроки.Ссылка.Код;
	ДанныеСтроки.Идентификатор = ДанныеСтроки.Ссылка.Идентификатор;
	ДанныеСтроки.Владелец = ДанныеСтроки.Ссылка.Привязка;
КонецПроцедуры

Процедура НачальныйКодПриИзменении(Элемент)
	Элемент.Значение = ФорматироватьКод(Элемент.Значение);
КонецПроцедуры

Функция  ФорматироватьКод(Код)	
	
	Пока СтрДлина(СокрЛП(Код)) < 6 Цикл
		Код = "0" + СокрЛП(Код);
	КонецЦикла;	
	Возврат Код;	
КонецФункции

