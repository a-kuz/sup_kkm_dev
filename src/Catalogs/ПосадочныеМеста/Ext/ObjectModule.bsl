
Процедура УстановитьКодВнутриИБ() Экспорт
	
	Если НЕ ЭтоНовый() И ИнформационнаяБаза = Ссылка.ИнформационнаяБаза Тогда
		Код = Ссылка.Код;
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 
	                      | Код ИЗ Справочник.ПосадочныеМеста
	                      |ГДЕ
	                      |	ИнформационнаяБаза = &ИнформационнаяБаза И 
	                      |	Ссылка <> &Ссылка
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Код УБЫВ");
						  
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ИнформационнаяБаза);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Код = Выборка.Код + 1;
	Иначе
		Код = 1;
	КонецЕсли; 
	
КонецПроцедуры

Функция ПроверкаУникальностиКода()
	
	Запрос = Новый Запрос("ВЫБРАТЬ 
	                      | Код ИЗ Справочник.ПосадочныеМеста
	                      |ГДЕ
	                      |	ИнформационнаяБаза = &ИнформационнаяБаза И 
	                      |	Код = &Код И Ссылка <> &Ссылка
	                      |");
						  
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ИнформационнаяБаза);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Код", Код);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Пустой();
КонецФункции

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		Сообщить("Не заполнено наименование!",СтатусСообщения.Важное);
		Отказ = Истина;
	ИначеЕсли НЕ ЭтоГруппа И Уровень()=0 И ЭтоНовый() Тогда
		Сообщить("Попытка создать элемент без группы!",СтатусСообщения.Важное);
		Отказ = Истина;
	ИначеЕсли НЕ ПроверкаУникальностиКода() Тогда
		Сообщить("Код не уникален!",СтатусСообщения.Важное);
		Отказ = Истина;
		Если Не ЗначениеЗаполнено(Номер) Тогда
			Попытка
			
				Номер = Наименование;
			
			Исключение
			
			КонецПопытки; 
					
		
		КонецЕсли;
	КонецЕсли;
	ИнформационнаяБаза = ПараметрыСеанса.ТекущаяИБ;
	Если НЕ ЭтоГруппа И НЕ МестоРеализации.Пустая() И Ложь Тогда
		УстановитьКодВнутриИБ();
	КонецЕсли;
	
	//Проверка на изменение в шаблоне наименования посадочного места
	Если ЭтоГруппа И НЕ ЗначениеЗаполнено(ШаблонНаименования) Тогда
		ШаблонНаименования = "Стол №[Место.Номер]";
	КонецЕсли;		
	
КонецПроцедуры

#Если Клиент Тогда
// Перезаполнение наименованиий посадочных мест по шаблону
Процедура ПерезаполнениеНаименованийМестПоШаблону() Экспорт 
	
	Если НЕ ЭтоГруппа Тогда
		Сообщить("Перезаполнение наименований возможно только из группы!",СтатусСообщения.Важное);
        Возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ШаблонНаименования) Тогда 
		Сообщить("Для заполнения наименований отсутствует шаблон!",СтатусСообщения.Важное);
        Возврат;
	КонецЕсли;		
	
	Если Вопрос("Перезаполнить наименование посадочных мест по указанному шаблону?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		 Возврат;		
	КонецЕсли;

	ТекШаблон = ШаблонНаименования;
	
	ВыборкаМест = Справочники.ПосадочныеМеста.ВыбратьИерархически(Ссылка);
	
	Кл = 0;
	
	НачатьТранзакцию();
	
	Пока ВыборкаМест.Следующий() Цикл
		
		Если ВыборкаМест.ЭтоГруппа ИЛИ ВыборкаМест.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли; 
		
		Место = ВыборкаМест.ПолучитьОбъект();
		Место.Наименование = Вычислить(Шаблон2Выражение(ТекШаблон));
		Место.Записать();
		
		Кл = Кл + 1;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Предупреждение("Перезаполнено наименование " + Кл + " посадочных мест.");
	
КонецПроцедуры	

#КонецЕсли