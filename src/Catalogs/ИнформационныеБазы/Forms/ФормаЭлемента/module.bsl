
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() И Не УправлениеРИБ.ВедениеСправочников() Тогда
		Отказ = Истина;
	КонецЕсли;
		
КонецПроцедуры

Процедура тУзелНажатие(Элемент)
	УзелПланаОбмена.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура ПослеЗаписи()
	тпУзлы.Отбор.ИнформационнаяБаза.Установить(ПолучитьСсылку());
КонецПроцедуры

Процедура ОбработкаАктивизацииОбъекта(АктивныйОбъект, Источник)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПриИзмененииДанных()
	ДеревоРМ = ДеревоРМ();
	тпУзлы.Отбор.ИнформационнаяБаза.Установить(ПолучитьСсылку());
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	ДеревоРМ = ДеревоРМ();
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ДеревоРМ = ДеревоРМ();
	
КонецПроцедуры

Процедура СерверIpПриИзменении(Элемент)
	ДобавитьСвойства();
	ЭлементыФормы.ДополнительныеСвойства.ОбновитьСтроки();
КонецПроцедуры

Процедура СоздатьНачальныйОбраз(СтрокаСоединения)
	Попытка
		ПланыОбмена.СоздатьНачальныйОбраз(ПолучитьУзелРИБ().ПолучитьОбъект(), СтрокаСоединения);
		Предупреждение("Создание начального образа завершено!");
		ЭтотОбъект.Прочитать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

Процедура МенюМестаРеализацииДобавитьРМмяснов(Кнопка)
	МР = Справочники.МестаРеализации.Мяснов;
	МастерСозданияРМ(МР, "myasnov-pos");
КонецПроцедуры

Процедура МастерСозданияРМ(МестоРеализации, ИмяПользователя)
	стрИмяХоста = "";
	Если Не ВвестиСтроку(стрИмяХоста,"Введите имя компьютера РМ") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(стрИмяХоста) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРМ = Наименование + " | " + стрИмяХоста;
	РМ = Справочники.РабочиеМеста.НайтиПоНаименованию(ИмяРМ);
	Если РМ.Пустая() Тогда
		СоздатьРМ(ИмяРМ,стрИмяХоста,ИмяПользователя,МестоРеализации,"","");	
	Иначе
		Предупреждение("РМ " + ИмяРМ + " уже есть в справочнике!");
	КонецЕсли;
КонецПроцедуры

Процедура МенюМестаРеализацииДобавитьРМОтдохни(Кнопка)
	МР = Справочники.МестаРеализации.НайтиПоНаименованию("Отдохни");
	МастерСозданияРМ(МР, "otdohni-pos");
КонецПроцедуры

Процедура КоманднаяПанель3Свернуть(Кнопка)
	ТС = ЭлементыФормы.ДеревоРМ.ТекущаяСтрока;
	Если ТС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТС.Строки.Количество() Тогда
		
		Если ТС.Родитель <> Неопределено Тогда
			ЭлементыФормы.ДеревоРМ.Свернуть(ТС.Родитель);
		КонецЕсли;
	Иначе
		ЭлементыФормы.ДеревоРМ.Свернуть(ТС);	
	КонецЕсли;
	
	Если ТС.Родитель <> Неопределено Тогда
		Для Каждого Т Из ТС.Родитель.Строки Цикл
			ЭлементыФормы.ДеревоРМ.Свернуть(Т);	
		КонецЦикла;
		
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель3Развернуть(Кнопка)
	ТС = ЭлементыФормы.ДеревоРМ.ТекущаяСтрока;
	Если ТС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.ДеревоРМ.Развернуть(ТС, Истина);
КонецПроцедуры

Процедура МенюКнопкиСоздатьНачОбразНаСервере(Кнопка)
	СтрокаСоединения = СтрокаСоединения();
	//ВвестиСтроку(СтрокаСоединения, "Строка соединения с ИБ на сервере приложений");
	СоздатьНачальныйОбраз(СтрокаСоединения);	
КонецПроцедуры

Процедура МенюКнопкиСоздатьНачОбразВфайл(Кнопка)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок = "Выберите папку для размещения информационной базы:";
		
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Каталог = ДиалогВыбораФайла.Каталог;
	Иначе
		Возврат;
	КонецЕсли;
	
	СоздатьНачальныйОбраз("File = """ + Каталог + """");
	
КонецПроцедуры

Процедура ДействияФормыЗаполнитьПоДаннымСУПцентра(Кнопка)
	
	ДанныеДляЗаполнения = ОткрытьФормуМодально("Справочник.ИнформационныеБазы.Форма.ВводРегионаИНомераТТ", Новый Структура("Регион, НомерТТ", Регион, Прав(Код, 3)), ЭтаФорма);
	Если ДанныеДляЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДляЗаполнения.Регион) Тогда
		Регион = ДанныеДляЗаполнения.Регион;
	КонецЕсли;
	
	ЗаполнитьПоНомеруТТ(ДанныеДляЗаполнения.НомерТТ, ДанныеДляЗаполнения.СтандартныеПорты);

	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

КонецПроцедуры

Процедура ПриЗакрытии()
	Если ЭтоНовый() Тогда
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		Ссылки = НайтиПоСсылкам(Массив(ПолучитьСсылку()));
		УдалитьОбъекты(Ссылки.ВыгрузитьКолонку(1));
	КонецЕсли;
КонецПроцедуры

Процедура РабочиеМестаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ККМ = ПараметрыРМ(ДанныеСтроки.Ссылка).ККМ;
	Если ЗначениеЗаполнено(ККМ) Тогда
		ККМкодСУП = ККМ.КодСУП;
		ККМзаводской = ККМ.ЗаводскойНомер;
		ОформлениеСтроки.Ячейки.ККМ.УстановитьТекст(""+ККМкодСУП + ?(ЗначениеЗаполнено(ККМзаводской), "/" + ККМзаводской, ""));
	КонецЕсли;
КонецПроцедуры

Процедура ДеревоРМВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ТО = ВыбраннаяСтрока.Значение;
	Если ТипЗнч(ТО) = Тип("СправочникСсылка.ТорговоеОборудование") Тогда 
		ТО.ПолучитьФорму().Открыть();
	ИначеЕсли ВыбраннаяСтрока.Строки.Количество() = 1 Тогда 
		ТО = ВыбраннаяСтрока.Строки[0].Значение;
		ТО.ПолучитьФорму().Открыть();	
	КонецЕсли;
	
КонецПроцедуры

Процедура ГруппыИБПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

Процедура ПриОткрытии()
	ЭлементыФормы.ГруппыИБ.Значение.Отбор.ИнформационнаяБаза.Установить(ПолучитьСсылку());
	ЭлементыФормы.ГруппыИБ.НастройкаОтбора.ИнформационнаяБаза.Доступность = Ложь;
КонецПроцедуры

Если ЭтоНовый() И УправлениеРИБ.ВедениеСправочников() Тогда
	ДействияФормыЗаполнитьПоДаннымСУПцентра("");
КонецЕсли;


Массив = Массив("52","77","50");
ЭлементыФормы.КодГруппыОграниченияПродажи.СписокВыбора.ЗагрузитьЗначения(Массив);


ТекСсылка = ПолучитьСсылку();

ЭлементыФормы.РабочиеМеста.ИерархическийПросмотр = Ложь;
Если ЗначениеЗаполнено(Наименование) И Не ЭтоНовый() Тогда
	ЭлементыФормы.РабочиеМеста.ТекущийРодитель = ГруппаРМ();	
КонецЕсли;
РабочиеМеста.Отбор.ЭтоГруппа.Установить(Ложь);	
РабочиеМеста.Отбор.ИнформационнаяБаза.Установить(ТекСсылка);
НастройкиОбмена.Отбор.УзелИнформационнойБазы.Установить(ПолучитьУзелРИБ());
Фирмы.Отбор.ИнформационнаяБаза.Установить(ТекСсылка);	
ДополнительныеСвойства.Отбор.ИнформационнаяБаза.Установить(ТекСсылка);	
ГруппыИБ.Отбор.ИнформационнаяБаза.Установить(ТекСсылка);




УзелПланаОбмена = ПолучитьУзелРИБ(); 

тпУзлы.Отбор.ИнформационнаяБаза.Установить(ПолучитьСсылку());
ДобавитьСвойства();
ЭлементыФормы.ДополнительныеСвойства.ОбновитьСтроки();


