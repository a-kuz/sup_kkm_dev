
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыДинамическихСписков()
	УстановитьЭлементОтбораДинамическогоСписка(дФирмы, "ИнформационнаяБаза", Объект.Ссылка, ВидСравненияКомпоновкиДанных.Равно);	
	УстановитьЭлементОтбораДинамическогоСписка(дРабочиеМеста, "ИнформационнаяБаза", Объект.Ссылка, ВидСравненияКомпоновкиДанных.Равно);	
	УстановитьЭлементОтбораДинамическогоСписка(дДополнительныеСвойства, "ИнформационнаяБаза", Объект.Ссылка, ВидСравненияКомпоновкиДанных.Равно);	
	дТорговоеОборудование.Параметры.УстановитьЗначениеПараметра("МассивТО",Новый Массив);
КонецПроцедуры


&НаКлиенте
Процедура КомандаОткрытьОбычнуюФорму(Команда)
	ОткрытьОбычнуюФорму(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбычнуюФорму(Ссылка)
	#Если Штаны Тогда
		Ссылка = Справочники.ИнформационныеБазы.ПустаяСсылка();
	#КонецЕсли
	
	
	
	Если Ссылка.ПолучитьОбъект() = Неопределено Тогда
		ДанныеДляЗаполнения = ОткрытьФормуМодально("Справочник.ИнформационныеБазы.Форма.ВводРегионаИНомераТТ", Новый Структура("Регион, НомерТТ", Объект.Регион, Прав(Объект.Код, 3)));
		ОткрытьФорму("Справочник.ИнформационныеБазы.Форма.ВводРегионаИНомераТТ", );
	Иначе
		Ссылка.ПолучитьФорму("ФормаЭлемента").Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура дРабочиеМестаПриАктивизацииСтроки(Элемент)
	Попытка
		МассивТО = ПолучитьМассивПодключаемогоТО(Элементы.дРабочиеМеста.ДанныеСтроки(Элемент.ТекущаяСтрока).Ссылка); 		
		дТорговоеОборудование.Параметры.УстановитьЗначениеПараметра("МассивТО",МассивТО);
	Исключение
		дТорговоеОборудование.Параметры.УстановитьЗначениеПараметра("МассивТО",Новый Массив);
	КонецПопытки;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьМассивПодключаемогоТО(РабочееМесто)
	
	#Если Штаны Тогда
		РабочееМесто = Справочники.РабочиеМеста.ПустаяСсылка();
	#КонецЕсли
	ПараметрыРМ = ЗначениеИзСтрокиВнутр(РабочееМесто.ПараметрыРМ);
	МассивТО = Новый Массив;
	
	Если ПараметрыРМ.ДПЕсть Тогда
		МассивТО.Добавить(ПараметрыРМ.ДП);
	КонецЕсли;
	
	Если ПараметрыРМ.ИнфоДисплейЕсть Тогда
		МассивТО.Добавить(ПараметрыРМ.ИнфоДисплей);
	КонецЕсли;
	
	Если ПараметрыРМ.ВесыЕсть Тогда
		МассивТО.Добавить(ПараметрыРМ.Весы);
	КонецЕсли;
	
	ЕстьСчитыватель = Ложь;
	Для каждого ТО Из ПараметрыРМ.СписокСУ Цикл
		МассивТО.Добавить(ТО.Значение);
		Если Найти("РидерМК,Проксимити,ПроксимитиPERCo", ТО.Значение.КодМодели) Тогда
			ЕстьСчитыватель = Истина;
		КонецЕсли; 
	КонецЦикла;
	ПараметрыРМ.Вставить("ЕстьСчитыватель", ЕстьСчитыватель);
	
	Если ПараметрыРМ.СпецКВЕсть Тогда
		МассивТО.Добавить(ПараметрыРМ.СпецКВ);
	КонецЕсли;
	
		Для каждого ТО Из ПараметрыРМ.СписокКЭП Цикл
			МассивТО.Добавить(ТО.Значение);
		КонецЦикла;
		
		Если ПараметрыРМ.РегистрацияСобытийВидеоЕсть Тогда
			МассивТО.Добавить(ПараметрыРМ.РегистрацияСобытийВидеонаблюдение);
		КонецЕсли; 
	
	// ККМ и Принтеры не занимают порты постоянно, поэтому для корректной проверки подключаем их после сканеров
	// и прочих дисплеев, которые захватывают порт на все время работы
	Если ПараметрыРМ.ККМЕсть Тогда
		МассивТО.Добавить(ПараметрыРМ.ККМ);
	КонецЕсли;
	
	Если ПараметрыРМ.ККМЕстьДоп Тогда
		Для каждого ТО Из ПараметрыРМ.ККМСписокДоп Цикл
			МассивТО.Добавить(ТО.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Для каждого СтрокаГП Из ПараметрыРМ.ГруппыПечати.Строки Цикл
		Если НЕ СтрокаГП.ПроверкаСвязи Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(СтрокаГП.Принтер) Тогда
			Принтер = СтрокаГП.Принтер;
		Иначе
			Попытка
				Принтер = СтрокаГП.Группа.Оборудование[0].Принтер;
			Исключение
				Продолжить;
			КонецПопытки;
		КонецЕсли; 
		
		МассивТО.Добавить(Принтер);
	КонецЦикла;
	
	Если ПараметрыРМ.ПечатьСчета Тогда
		МассивТО.Добавить(ПараметрыРМ.ПечатьСчетаПринтер);
	КонецЕсли; 
	
	Возврат МассивТО;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() Тогда
		ДанныеДляЗаполнения = ОткрытьФормуМодально("Справочник.ИнформационныеБазы.Форма.ВводРегионаИНомераТТ", Новый Структура("Регион, НомерТТ", Объект.Регион, Прав(Объект.Код, 3)), ЭтаФорма);
		Объект.Регион = ДанныеДляЗаполнения.Регион;
		Объект.Код = СтрШаблон("%1%2", ДанныеДляЗаполнения.Регион, Формат(ДанныеДляЗаполнения.НомерТТ,"ЧЦ=5; ЧВН=; ЧГ=0"));
		Заполнить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Заполнить()
	ибОбъект = ДанныеФормыВЗначение(Объект, тип("СправочникОбъект.ИнформационныеБазы"));
	//:ибОбъект=Справочники.ИнформационныеБазы.СоздатьЭлемент();
	ибОбъект.ЗаполнитьПоНомеруТТ(ибОбъект.НомерТТ(),Истина,Ложь);
	ЗначениеВДанныеФормы(ибОбъект, Объект);
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры



