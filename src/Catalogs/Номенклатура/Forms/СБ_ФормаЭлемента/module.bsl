
// Функция определяет доступное значение кода для заданного регистра сведений
//
// Параметры
//  ИмяРегистра – <Строка> 
//              – имя регистра сведений, для которого определяется
//                доступное значение кода
//
// Возвращаемое значение:
//   <Число>    – значение, которое может быть использовано для новой
//                записи регистра сведений в качестве кода
//
Функция сбПолучитьНовыйКодДляРегистраСведений(ИмяРегистра)
	
	Перем Запрос;
	Перем Выборка;
	Перем Результат;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(Регистр.Код) КАК Код
	|ИЗ
	|	РегистрСведений." + ИмяРегистра + " КАК Регистр");
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = 1;
	Если Выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		Если ЗначениеЗаполнено(Выборка.Код) Тогда
			Результат = Выборка.Код + 1;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // сбПолучитьНовыйКодДляРегистраСведений()

// Функция осуществляет проверку уникальности штрих-кода штучного товара
//
// Параметры
//  ШтрихКод          - <Строка>
//                    - проверяемый штрих-код
//
//  Код               - <Число>
//                    - параметр содержит измерение Код регистра сведений Штрихкоды;
//                      позволяет исключить один элемент из рассматриваемого списка
//
// Возвращаемое значение:
//  <ТаблицаЗначений> - таблица, в которой содержится информация о найденных
//                      штрих-кодах
//
Функция сбПроверитьУникальностьШтрихКода(ШтрихКод, Код)
	
	Перем НайденныеШтрихкоды;
	Перем Запрос;
	
	Если НЕ ЗначениеЗаполнено(ШтрихКод) Тогда
		НайденныеШтрихкоды = Новый ТаблицаЗначений();	
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ШтрихКод", ШтрихКод);
		Запрос.УстановитьПараметр("Код", Код);
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Штрихкоды.Код,
		|	Штрихкоды.ТипШтрихкода,
		|	Штрихкоды.ШтрихКод,
		|	Штрихкоды.Владелец,
		|	Штрихкоды.ЕдиницаИзмерения
		|ИЗ
		|	РегистрСведений.ШтрихКодыНоменклатуры КАК Штрихкоды
		|
		|ГДЕ
		|	Штрихкоды.Код <> &Код
		|	И Штрихкоды.ШтрихКод = &ШтрихКод
		|
		|УПОРЯДОЧИТЬ ПО
		|	Владелец
		|";
		
		НайденныеШтрихкоды = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	Возврат НайденныеШтрихкоды;
	
КонецФункции // сбПроверитьУникальностьШтрихКода()

// Проверка наличия в передаваемом штрих-коде только цифр.
//
// Параметры:
//  ШтрихКод     - проверяемый штрих-код
//
// Возвращаемое значение:
//  Истина если штрих код только из цифр, иначе Ложь
//
Функция ТолькоЦифры(ШтрихКод)
	
	Для Сч = 1 По СтрДлина(ШтрихКод) Цикл
		Символ = Сред(ШтрихКод, Сч, 1);
		Если НЕ(Найти("0123456789", Символ)) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // ТолькоЦифры()

// Обработчик события ПередНачаломДобавления элемента Штрихкоды.
//
Процедура ШтрихкодыПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если ЭтоНовый() Тогда
		Сообщить("Сначала необходимо записать элемент");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры // ШтрихкодыПередНачаломДобавления()

// Обработчик события ПриНачалеРедактирования элемента Штрихкоды.
//
Процедура ШтрихкодыПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ТипШтрихкода     = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;  
		Элемент.ТекущиеДанные.Код              = сбПолучитьНовыйКодДляРегистраСведений("ШтрихКодыНоменклатуры");
		Элемент.ТекущиеДанные.Владелец         = ЭтотОбъект.Ссылка;
		Элемент.ТекущиеДанные.ЕдиницаИзмерения = БазоваяЕдиницаИзмерения;
		ТекущийШтрихкод                        = Неопределено;
	Иначе
		ТекущийШтрихкод                        = Элемент.ТекущиеДанные.Штрихкод;
	КонецЕсли;
	
КонецПроцедуры // ШтрихкодыПриНачалеРедактирования()

// Процедура - обработчик события ПередОкончаниемРедактирования элемента 
// Штрихкоды.
//
// Параметры
//  Элемент              – <ТабличноеПоле>
//                       – табличное поле, элемент которого редактировался
//
//  НоваяСтрока          – <Булево> 
//                       – имеет значение Истина, если строка была 
//                         добавлена или скопирована
//
//  ОтменаРедактирования - <Булево>
//                       - Истина, если произошла отмена редактирования
//
//  Отказ                - <Булево>
//                       - признак отказа от выполнения действия
//
Процедура ШтрихкодыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		ТекЗапись = Элемент.ТекущиеДанные;
		Если НЕ ЗначениеЗаполнено(ТекЗапись.Штрихкод)
			И (НЕ ЗначениеЗаполнено(ТекЗапись.ТипШтрихкода)
			Или ТекЗапись.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13) Тогда
			Ответ = Вопрос("Штрих-код не заполнен! Сформировать значение штрих-кода автоматически?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ТекЗапись.Штрихкод = СформироватьШтрихкод(ЭлементыФормы.Штрихкоды.ТекущиеДанные.Код);
				ТекЗапись.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЗапись.ТипШтрихкода)
			И  ЗначениеЗаполнено(ТекЗапись.Штрихкод)
			И (Не ПроверитьШтрихКод(ТекЗапись.Штрихкод, ТекЗапись.ТипШтрихкода)) Тогда
			Сообщить("Не верный штрих-код!", СтатусСообщения.Важное);
			ТекЗапись.ТипШтрихкода = Неопределено;
		КонецЕсли;
		
		НайденныеЗаписи = сбПроверитьУникальностьШтрихКода(ТекЗапись.ШтрихКод, ТекЗапись.Код);
		Если НайденныеЗаписи.Количество() > 0 Тогда
			Ответ = Вопрос(""+ТекЗапись.ШтрихКод+". Такой штрих-код уже установлен для других значений!"+Символы.ПС+
			"Показать записи с таким штрих-кодом?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				НаборЗаписей = РегистрыСведений.ШтрихКодыНоменклатуры.СоздатьНаборЗаписей();
				НаборЗаписей.Прочитать();
				ФормаНаборЗаписей = НаборЗаписей.ПолучитьФорму("ФормаНабораЗаписей");
				ФормаНаборЗаписей.ЭлементыФормы.РегистрСведенийНаборЗаписей.ОтборСтрок.Штрихкод.Значение = ТекЗапись.ШтрихКод;
				ФормаНаборЗаписей.ЭлементыФормы.РегистрСведенийНаборЗаписей.ОтборСтрок.Штрихкод.Использование = Истина;
				ФормаНаборЗаписей.ОткрытьМодально();
			КонецЕсли;
			
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ШтрихкодыПередОкончаниемРедактирования()

// Проверка штрих-кода на корректность.
//
// Параметры:
//  ШтрихКод     - проверяемый штрих-код;
//  ТипШтрихкода - элемент плана видов характеристик "ТипыШтрихкодов", содержит тип
//                 проверяемого штрих-кода.
//
// Возвращаемое значение:
//  Истина если штрих код корректен, иначе Ложь
//
Функция ПроверитьШтрихКод(ШтрихКод, ТипШтрихкода) Экспорт
	
	ДлинаКода = СтрДлина(Штрихкод);
	
	Если ДлинаКода = 0 Тогда
		Возврат Ложь;
	Иначе
		Если ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
			Если (ДлинаКода <> 13)
				Или НЕ(ТолькоЦифры(Штрихкод)) // штрих-код должен состоять из цифр
				Или КонтрольныйСимволEAN(Лев(Штрихкод,12), 13) <> Прав(Штрихкод, 1) Тогда
				Возврат Ложь;
			КонецЕсли;
		ИначеЕсли ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
			Если (ДлинаКода <> 8)
				Или НЕ(ТолькоЦифры(Штрихкод)) // штрих-код должен состоять из цифр
				Или КонтрольныйСимволEAN(Лев(Штрихкод, 7), 8 ) <> Прав(Штрихкод, 1) Тогда
				Возврат Ложь;
			КонецЕсли;
		ИначеЕсли ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code39 Тогда
			Условие = СтрДлина(ШтрихКод) - 1;
			Для Индекс = 0 По Условие Цикл
				Символ = Лев(Прав(Штрихкод, Условие - Индекс + 1), 1);
				Если НЕ (((Символ >= "0") И (Символ <= "9"))
					ИЛИ	((Символ >= "A") И (Символ <= "Z"))
					ИЛИ (Символ = "-")
					ИЛИ (Символ = ".")
					ИЛИ (Символ = " ")
					ИЛИ (Символ = "$")
					ИЛИ (Символ = "/")
					ИЛИ (Символ = "+")
					ИЛИ (Символ = "%")
					ИЛИ (Символ = "*")) Тогда
					Возврат Ложь;
				КонецЕсли
			КонецЦикла;
		ИначеЕсли ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code128 
			ИЛИ ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN128 Тогда
			Условие = СтрДлина(ШтрихКод) - 1;
			Для Индекс = 0 По Условие Цикл
				Если КодСимвола(ШтрихКод, Индекс) > 127 Тогда
					Возврат Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции // ПроверитьШтрихКод()

// Функция осуществляет формирование нового внутреннего штрих-кода для
// штучного товара.
//
// Параметры
//  Код  – <Число> 
//       – Измерение "Код" регистра сведений Штрихкоды
//
// Возвращаемое значение:
//  <Строка>
//       – сформированный штрих-код
//
Функция СформироватьШтрихКод(Код) Экспорт
	
	НеНашлиУникальный = Истина;
	Сч = 0;
	ТекКод = Код;
	Пока НеНашлиУникальный Цикл
		ТекКод = Число(ТекКод)+Сч;
		ТекКод = СтрЗаменить(ТекКод,Символы.НПП,"");
		
		ТекКод = ""+ТекКод;
		Пока СтрДлина(ТекКод)<11 Цикл
			ТекКод = "0"+ТекКод;
		КонецЦикла;
		Штрихкод = "2"+ТекКод;
		Штрихкод = Штрихкод + КонтрольныйСимволEAN(ШтрихКод, 13);
		НайденныеЗаписи = сбПроверитьУникальностьШтрихКода(ШтрихКод, Код);
		НеНашлиУникальный = (НайденныеЗаписи.Количество() > 0);
		Сч = Сч+1;
	КонецЦикла;
	
	Возврат Штрихкод;
	
КонецФункции // СформироватьШтрихКод()

// Процедура - обработчик кнопки НовыйШтрихкод командной панели 
// КоманднаяПанель2.
//
Процедура КоманднаяПанель2НовыйШтрихкод(Кнопка)
	ТекЗапись = РегистрыСведений.ШтрихКодыНоменклатуры.СоздатьМенеджерЗаписи();
	Если (ЭтоНовый())
		ИЛИ (ЭлементыФормы.Штрихкоды.ТекущиеДанные = Неопределено) Тогда
		Если ЭтоНовый() Тогда
			Сообщить("Сначала необходимо записать элемент");
			Отказ = Истина;
		КонецЕсли;
		
		ТекЗапись.Код                         = сбПолучитьНовыйКодДляРегистраСведений("ШтрихКодыНоменклатуры");
		ТекЗапись.Владелец                    = ЭтотОбъект.Ссылка;
		ТекЗапись.ЕдиницаИзмерения            = БазоваяЕдиницаИзмерения;
		ТекЗапись.ТипШтрихкода                = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
		ТекЗапись.Записать();
		Ключ                                  = Новый Структура("Код",ТекЗапись.Код);
		ЭлементыФормы.Штрихкоды.ТекущаяСтрока = РегистрыСведений.ШтрихКодыНоменклатуры.СоздатьКлючЗаписи(Ключ);
	КонецЕсли;
	
	Если ЭлементыФормы.Штрихкоды.ТекущиеДанные = Неопределено Тогда
		Сообщить("Не выбрана строка из таблицы штрихкодов, для которой регистрируется штрих-код.");
	Иначе //Получаем штрихкод и заносим его в выбранную строку
		ШтрихКод               = СформироватьШтрихкод(ЭлементыФормы.Штрихкоды.ТекущиеДанные.Код);
		Если НЕ ТекЗапись.Выбран() Тогда
			ТекЗапись.Код          = ЭлементыФормы.Штрихкоды.ТекущиеДанные.Код;
			ТекЗапись.Прочитать();
			ТекЗапись.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
		КОнецЕсли;
		ТекЗапись.Штрихкод     = ШтрихКод;
		ТекЗапись.Записать();
	КонецЕсли;
	
	
КонецПроцедуры // КоманднаяПанель2НовыйШтрихкод()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Штрихкоды.Отбор.Владелец.Значение = Ссылка;
	Штрихкоды.Отбор.Владелец.Использование = Истина;
	ЭлементыФормы.Штрихкоды.НастройкаОтбора.Владелец.Доступность = Ложь;
	
	Попытка
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы[ВосстановитьЗначение("ТекущаяСтраницаНоменклатуры")];
	Исключение
	КонецПопытки;
	
	ТолькоПросмотр = Истина;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение("ТекущаяСтраницаНоменклатуры",ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя); 
	
КонецПроцедуры

Процедура СБ_СодержаниеБелковПриИзменении(Элемент)
	СБ_СодержаниеККАЛ =	Окр((Окр(СБ_СодержаниеБелков  *4,2) +
	Окр(СБ_СодержаниеЖиров    *9,2) +
	Окр(СБ_СодержаниеУглеводов*4,2)),2);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	УправлениеРИБ.ПередОткрытиемЭлементаСправочника(ЭтотОбъект, ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	//ЭлементыФормы.Панель1.Видимость = глВерсия > 1;
КонецПроцедуры

Процедура ШтрихКодыПередУдалением(Элемент, Отказ)
	Если Не УправлениеРИБ.РазрешеноРедактированиеШК(Элемент.ТекущиеДанные,Элемент.Значение.Отбор.Владелец.Значение) Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ШтрихКодыПередНачаломИзменения(Элемент, Отказ)
	Если Не УправлениеРИБ.РазрешеноРедактированиеШК(Элемент.ТекущиеДанные,Элемент.Значение.Отбор.Владелец.Значение) Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры
