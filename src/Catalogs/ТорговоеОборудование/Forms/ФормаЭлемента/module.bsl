
Перем ДеревоТО;

Процедура ЗаполнитьДеревоТО(СтрокиУровня, Уровень, Таб, НомСтр)
	Перем СтрокаДереваТО;
	
	ВсегоСтрок = Таб.ВысотаТаблицы;
	
	Пока НомСтр <= ВсегоСтрок Цикл
		
		Если Уровень > 1 И ЗначениеЗаполнено(Таб.Область(НомСтр, Уровень - 1).Текст) Тогда
			Возврат;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Таб.Область(НомСтр, Уровень).Текст) Тогда
			Если ЗначениеЗаполнено(Таб.Область(НомСтр, Уровень + 1).Текст) Тогда
				ЗаполнитьДеревоТО(СтрокаДереваТО.Строки, Уровень + 1, Таб, НомСтр);
				СтрокаДереваТО.ОбработкаЕсть = ?(СтрокаДереваТО.Строки.Итог("ОбработкаЕсть")=0, 0, 1);
			Иначе
				НомСтр = НомСтр + 1;
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;
		
		_Код			= Таб.Область(НомСтр, Уровень).Текст;
		_Наименование	= Таб.Область(НомСтр, Уровень + 1).Текст;
		_ИмяОбработки	= Таб.Область(НомСтр, Уровень + 3).Текст;
		
		Если НЕ ЗначениеЗаполнено(_ИмяОбработки) Тогда
			_ИмяОбработки = ?(ЗначениеЗаполнено(СтрокиУровня.Родитель), СтрокиУровня.Родитель.ИмяОбработки, "Обслуживание") +"_"+ _Код;
		КонецЕсли; 
		
		СтрокаДереваТО = СтрокиУровня.Добавить();
		СтрокаДереваТО.Код			= _Код;
		СтрокаДереваТО.Наименование	= _Наименование;
		СтрокаДереваТО.ИмяОбработки	= _ИмяОбработки;
		СтрокаДереваТО.ОбработкаЕсть= ?(Метаданные.НайтиПоПолномуИмени("Обработка."+_ИмяОбработки) = Неопределено, 0, 1);
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьДеревоТО(СтрокиУровня, Уровень)
	
	ИндексСтроки = 0;
	Пока ИндексСтроки <= СтрокиУровня.Количество()-1 Цикл
		
		СтрокаДереваТО = СтрокиУровня[ИндексСтроки];
		
		Если СтрокаДереваТО.ОбработкаЕсть = 0 Тогда
			СтрокиУровня.Удалить(СтрокаДереваТО);
		Иначе
			ОчиститьДеревоТО(СтрокаДереваТО.Строки, Уровень+1);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьДеревоТО()
	
	ДеревоТО = Новый ДеревоЗначений;
	ДеревоТО.Колонки.Добавить("Код");
	ДеревоТО.Колонки.Добавить("Наименование");
	ДеревоТО.Колонки.Добавить("ИмяОбработки");
	ДеревоТО.Колонки.Добавить("ОбработкаЕсть");
	
	Таб=ПолучитьМакет("СписокТО");
	
	НомСтр = Таб.Область("Пример").Низ + 1;
	
	ЗаполнитьДеревоТО(ДеревоТО.Строки, 1, Таб, НомСтр);
	ОчиститьДеревоТО(ДеревоТО.Строки, 1);
	
КонецПроцедуры

Процедура ОпределитьИмяОбработки()
	
	Для Уровень = 1 По 3 Цикл
		
		ЗначениеПоляВыбора = ЭлементыФормы["СписокТО" + Уровень].Значение;
		
		Если НЕ ЗначениеЗаполнено(ЗначениеПоляВыбора) Тогда
			Прервать;		
		ИначеЕсли ЗначениеПоляВыбора.Код="Иное" Тогда
			
			Если НЕ ОбработкаВнешняя Тогда
				ОбработкаВнешняя = Истина;
			КонецЕсли; 
			
		Иначе		
			ИмяВстроеннойОбработки = ЗначениеПоляВыбора.ИмяОбработки;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ ОбработкаВнешняя И ИмяОбработки <> ИмяВстроеннойОбработки Тогда
		
		ИмяОбработки = ИмяВстроеннойОбработки;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораТО(Уровень, ЗаполнениеПриОткрытии = Ложь)
	
	ПолеВыбора = ЭлементыФормы["СписокТО" + Уровень];
	
	СписокВыбора = Новый СписокЗначений;
	
	Если Уровень = 1 Тогда
		СписокСтрок = ДеревоТО.Строки;
	Иначе
		ЗначениеРодитель = ЭлементыФормы["СписокТО" + (Уровень - 1)].Значение;
		Если ЗначениеЗаполнено(ЗначениеРодитель) Тогда
			СписокСтрок = ЗначениеРодитель.Строки;
		Иначе
			СписокСтрок = Неопределено;
		КонецЕсли; 
		
	КонецЕсли; 
	
	ТекЗначениеПолеВыбора = Неопределено;
	
	Если НЕ ЗначениеЗаполнено(СписокСтрок) Тогда
		ПолеВыбора.Доступность = Ложь;
		
	Иначе
		
		Если Уровень = 1 Тогда
			ТекЗначение = КодВида;
		ИначеЕсли Уровень = 2 Тогда
			ТекЗначение = КодМодели;
		ИначеЕсли Уровень = 3 Тогда
			ТекЗначение = КодВерсии;
		КонецЕсли;
		
		Для каждого СтрокаДереваТО Из СписокСтрок Цикл
			
			СписокВыбора.Добавить(СтрокаДереваТО, СтрокаДереваТО.Наименование);
			
			Если ЗаполнениеПриОткрытии И СтрокаДереваТО.Код = ТекЗначение Тогда
				ТекЗначениеПолеВыбора = СтрокаДереваТО;
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(ТекЗначениеПолеВыбора) Тогда
			ТекЗначениеПолеВыбора = СписокСтрок[0];
		КонецЕсли;
		
		ПолеВыбора.Доступность = Истина;
		
	КонецЕсли;
	
	ПолеВыбора.СписокВыбора = СписокВыбора;
	ПолеВыбора.Значение     = ТекЗначениеПолеВыбора;
	
	Если Уровень < 3 Тогда
		ЗаполнитьСписокВыбораТО(Уровень + 1, ЗаполнениеПриОткрытии);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьКоды()
	
	КодВида   = ?(ЗначениеЗаполнено(ЭлементыФормы.СписокТО1.Значение), ЭлементыФормы.СписокТО1.Значение.Код, "");
	КодМодели = ?(ЗначениеЗаполнено(ЭлементыФормы.СписокТО2.Значение), ЭлементыФормы.СписокТО2.Значение.Код, "");
	КодВерсии = ?(ЗначениеЗаполнено(ЭлементыФормы.СписокТО3.Значение), ЭлементыФормы.СписокТО3.Значение.Код, "");
	
КонецПроцедуры

Процедура УправлениеФормой()
	
	ЕстьИное = Ложь;
	
	Для Уровень = 1 По 3 Цикл
		ЗначениеПоляВыбора = ЭлементыФормы["СписокТО"+Уровень].Значение;
		
		Если НЕ ЗначениеЗаполнено(ЗначениеПоляВыбора) Тогда
			Прервать;
		ИначеЕсли ЗначениеПоляВыбора.Код="Иное" Тогда
			ЕстьИное = Истина;
		КонецЕсли; 
		
	КонецЦикла; 
	
	ЭлементыФормы.ОбработкаВнешняя.Доступность = НЕ ЕстьИное;
	ЭлементыФормы.ИмяОбработки.Доступность     = ОбработкаВнешняя;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура СписокТО1ПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораТО(2);
	ОпределитьИмяОбработки();
	УправлениеФормой();
	
КонецПроцедуры

Процедура СписокТО2ПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораТО(3);
	ОпределитьИмяОбработки();
	УправлениеФормой();
	
КонецПроцедуры

Процедура СписокТО3ПриИзменении(Элемент)
	
	ОпределитьИмяОбработки();
	
КонецПроцедуры

Процедура ОбработкаВнешняяПриИзменении(Элемент)
	
	ОпределитьИмяОбработки();
	УправлениеФормой();
	
КонецПроцедуры

Процедура ИмяОбработкиНачалоВыбора(Элемент,СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл...";
	Диалог.ПредварительныйПросмотр		= Ложь;
	Диалог.ПроверятьСуществованиеФайла	= Ложь;
	Диалог.МножественныйВыбор			= Ложь;
	Диалог.ПолноеИмяФайла				= Элемент.Значение;
	Диалог.Фильтр						= "Внешняя обработка (*.epf)|*.epf";
	Диалог.Расширение					= "epf";
	
	Если Диалог.Выбрать() Тогда
		Элемент.Значение=Диалог.ПолноеИмяФайла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаПараметрыДействие(Кнопка)
	
	Если Модифицированность Тогда
		ЗаполнитьКоды();
	КонецЕсли;
	
	НастройкаПараметров(Параметры);
	
КонецПроцедуры

Процедура ИнформационнаяБазаНажатие(Элемент)
	
	ВыбЭлемент = ИнтерфейсАдмина.ИнфБазаВыбратьИзСписка(ЭтаФорма, Элемент);
	Если ВыбЭлемент <> Неопределено Тогда
		ИнформационнаяБаза = ВыбЭлемент.Значение;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//УправлениеРИБ.ПередОткрытииЭлементаСправочника(ЭтотОбъект, ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьДеревоТО();
	
	Если НЕ ЗначениеЗаполнено(ДеревоТО) Тогда
		Предупреждение("Список видов подключаемого оборудования не определен!",5);
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
		ТипПрофиля=1;
		ИнформационнаяБаза = ?(глВерсия=1, Неопределено, ПараметрыСеанса.ТекущаяИБ);
	КонецЕсли;
	
	ЗаполнитьСписокВыбораТО(1, Истина);
	ОпределитьИмяОбработки();
	УправлениеФормой();
	
	Если НЕ ПараметрыСеанса.РаспределенныйРежим Тогда
		ЭлементыФормы.ИнформационнаяБаза.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	ЗаполнитьКоды();
	
КонецПроцедуры

Процедура ПортПриИзменении(Элемент)
	Параметры = Справочники.ТорговоеОборудование.ИзменитьНомерПорта(Параметры, Строка(ЭлементыФормы.Порт.Значение));
КонецПроцедуры

Процедура ДействияФормыУправляемаяФорма(Кнопка)
	ОткрытьФорму("Справочник.ТорговоеОборудование.Форма.ФормаЭлементаУправляемая", Новый Структура("Ключ", Ссылка));
КонецПроцедуры

СВ = ЭлементыФормы.Порт.СписокВыбора;
Для Инд = 0 по 9 Цикл
	СВ.Добавить(Инд, ?(Инд, "COM"+Инд, "Клавиатура"));
КонецЦикла;

СВ.Добавить(Неопределено, "<не задан>");

Порт = Справочники.ТорговоеОборудование.ПолучитьНомерПорта(Параметры, Истина);
Попытка Порт = Число(Порт) Исключение КонецПопытки;
ЭлементыФормы.Порт.Значение = Порт;
