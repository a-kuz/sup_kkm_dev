
Перем СписокОграниченийПериода;

Перем Объект;
Перем Тип;

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОбновитьВариантыОплаты(ДопустимыеВариантыОплаты=Неопределено)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВариантыОплаты.Ссылка
	                      |ИЗ
	                      |	Справочник.ВариантыОплаты КАК ВариантыОплаты
	                      |ГДЕ
	                      |	(НЕ ВариантыОплаты.ПометкаУдаления)
	                      |	И ВариантыОплаты.Тип В(&СписокТипов)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ВариантыОплаты.Наименование");
				   
				   
	СписокТипов = Новый Массив;
	Если Неплательщик Тогда
		СписокТипов.Добавить(Перечисления.ТипыОплаты.Неплательщик);
	КонецЕсли;
	Если Безнал Тогда
		СписокТипов.Добавить(Перечисления.ТипыОплаты.Безнал);
    КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокТипов",СписокТипов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПромежуточныеВариантыОплаты = Новый ТаблицаЗначений;
	ПромежуточныеВариантыОплаты = ВариантыОплаты.Скопировать();
	ВариантыОплаты.Очистить();
	Пока Выборка.Следующий() Цикл
		ВариантОплаты = ВариантыОплаты.Добавить();
		НайденнаяСтрока = ?(ЗначениеЗаполнено(ДопустимыеВариантыОплаты),ДопустимыеВариантыОплаты.Найти(Выборка.Ссылка,"ВариантОплаты"),ПромежуточныеВариантыОплаты.Найти(Выборка.Ссылка,"ВариантОплаты"));
		ВариантОплаты.ВариантОплаты = Выборка.Ссылка;
		Если ЗначениеЗаполнено(ДопустимыеВариантыОплаты) Тогда
			ВариантОплаты.Пометка = НайденнаяСтрока <> Неопределено;
		Иначе
			ВариантОплаты.Пометка = ?(НайденнаяСтрока = Неопределено, Ложь, НайденнаяСтрока.Пометка);
		КонецЕсли;
		ВариантОплаты.ОграничениеПериод = ?(НайденнаяСтрока = Неопределено, 0, НайденнаяСтрока.ОграничениеПериод);
		ВариантОплаты.ОграничениеСумма  = ?(НайденнаяСтрока = Неопределено, 0, НайденнаяСтрока.ОграничениеСумма);
	КонецЦикла; 

КонецПроцедуры

Процедура ЗаполнитьДопустимыеВариантыОплаты()
	
	ДопустимыеВариантыОплаты.Очистить();
	
	Если НЕ (Неплательщик ИЛИ Безнал) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВариантОплаты Из ВариантыОплаты Цикл 
		Если ВариантОплаты.Пометка Тогда
			ЗаполнитьЗначенияСвойств(ДопустимыеВариантыОплаты.Добавить(), ВариантОплаты);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьКонтактнуюИнформациюКонтрагента()
	
	ОбъектКИ = мТекущийОбъектКИ;
	
	КонтактнаяИнформацияКонтрагента.ОбъектКонтактнойИнформации = ОбъектКИ;
	
	ТекущийСтрокаКИ = Неопределено;
	Если ЭлементыФормы.КонтактнаяИнформацияКонтрагента.Значение.Количество() > 0 И ЭлементыФормы.КонтактнаяИнформацияКонтрагента.ТекущиеДанные <> Неопределено Тогда
		ТекущийСтрокаКИ = ЭлементыФормы.КонтактнаяИнформацияКонтрагента.ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	КонтактнаяИнформацияКонтрагента.ОбновитьТаблицу();
	
	Если ТекущийСтрокаКИ <> Неопределено Тогда
		ТекСтрока = КонтактнаяИнформацияКонтрагента.КонтактнаяИнформация.Найти(ТекущийСтрокаКИ,"Ссылка");
		Если ТекСтрока <> Неопределено Тогда
			ЭлементыФормы.КонтактнаяИнформацияКонтрагента.ТекущаяСтрока = ТекСтрока;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	УправлениеРИБ.ПередОткрытиемЭлементаСправочника(ЭтотОбъект, ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		ДатаРегистрации = ТекущаяДата();
		Фото = Неопределено;
		Если НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			ТипОграниченияВариантовОплат = Перечисления.ТипыОграниченийПоСписку.Нет;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Родитель.Контрагент) Тогда
			Контрагент = Родитель.Контрагент;
		КонецЕсли;
		Если ЗначениеЗаполнено(Родитель.Безнал) Тогда
			Безнал = Родитель.Безнал;
		КонецЕсли;
		Если ЗначениеЗаполнено(Родитель.ОсновнойВариантОплаты) Тогда
			ОсновнойВариантОплаты = Родитель.ОсновнойВариантОплаты;
		КонецЕсли;
		Если ЗначениеЗаполнено(Родитель.ГлубинаКредита) Тогда
			ГлубинаКредита = Родитель.ГлубинаКредита;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Фото.Пустая() Тогда
		ЭлементыФормы.Фото.Картинка = Фото.Хранилище.Получить();
	КонецЕсли; 
	
	КартаДоступа = Справочники.КартыДоступа.НайтиПоРеквизиту("Привязка", Ссылка);
	
	//НакопленияКлиента = 0;
	//ЭлементыФормы.ИнфНадписьОстатокНаСчете.Заголовок = ФорматСумм(НакопленияКлиента.СуммаБезнал, глРубли);
	//Если глВерсия=1 Тогда
	//	ЭлементыФормы.ПанельСкидки.Видимость = Ложь;
	//	ЭлементыФормы.НеУчаствуетВРассылках.Видимость = Ложь;
	//Иначе
	//	ЭлементыФормы.ИнфНадписьСуммаБонусов.Заголовок = ФорматСумм(НакопленияКлиента.СуммаБонусов, глРубли);
	//КонецЕсли; 
	
	Если глВерсия=1 ИЛИ НЕ Константы.ДопЯзыки.Получить() Тогда
		ЭлементыФормы.ПанельОсновная.Страницы.ДопНаименования.Видимость = Ложь
	Иначе
		Если НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			ИнтерфейсАдмина.ЗаполнитьДопНаименования(Ссылка,ТаблицаДопНаименования);
		Иначе
			ИнтерфейсАдмина.ЗаполнитьДопНаименования(ПараметрОбъектКопирования,ТаблицаДопНаименования);
		КонецЕсли;
	КонецЕсли;
   
	Если глВерсия=3 Тогда
		ИнтерфейсАдмина.ЗаполнитьСписокПометокПоТабЧасти(ЭтаФорма.Категории, ЭтаФорма.ПринадлежностьКатегориям, "Категория");
	Иначе
		ЭлементыФормы.ЧерныйСписок.Видимость = Ложь;
		ЭлементыФормы.ПанельОсновная.Страницы.Категории.Видимость = Ложь;
	КонецЕсли; 
	
	//ОбновлениеОтображения();
	ОбновитьВариантыОплаты(ДопустимыеВариантыОплаты);
	
	// Для отображения КИ контрагента
	мТекущийОбъектКИ = ЭтотОбъект.Ссылка;
	
	ОбновитьКонтактнуюИнформациюКонтрагента();
	
	Попытка
		ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы[ВосстановитьЗначение("ТекущаяСтраницаКлиенты")];
	Исключение
	КонецПопытки;
	
	// Заполнение подменю отчетов
	ИнтерфейсАдмина.ЗаполнитьПодменюВыбораОтчетов(ЭтотОбъект, ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодменюОтчеты);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение("ТекущаяСтраницаКлиенты", ЭлементыФормы.ПанельОсновная.ТекущаяСтраница.Имя);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	ДатаОбновления = ТекущаяДата();
	
	ЗаполнитьДопустимыеВариантыОплаты();
	//Если НЕ (Неплательщик ИЛИ Безнал) Тогда
	//	ВариантыОплаты.ЗаполнитьПометки(Ложь);
	//КонецЕсли;
	//ИнтерфейсАдмина.ЗаполнитьТабЧастьПоСпискуПометок(ВариантыОплаты, ДопустимыеВариантыОплаты, "ВариантОплаты");
	
	Если глВерсия=3 Тогда
		ИнтерфейсАдмина.ЗаполнитьТабЧастьПоСпискуПометок(ЭтаФорма.Категории, ЭтаФорма.ПринадлежностьКатегориям, "Категория");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ИнтерфейсАдмина.ЗаписатьДопНаименования(Ссылка,ТаблицаДопНаименования);
	
	// Для отображения КИ контрагента
	мТекущийОбъектКИ = ЭтотОбъект.Ссылка;
	ОбновитьКонтактнуюИнформациюКонтрагента();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЭлементыФормы.ИнфНадписьКодДоступа		.Заголовок = КартаДоступа.Код;
	
	ЭлементыФормы.ПанельОсновная.Страницы.ВариантыОплаты.Видимость = (Неплательщик ИЛИ БезНал);
	
	ЭлементыФормы.НадписьОстатокНаСчете		.Видимость = Безнал;
	ЭлементыФормы.ИнфНадписьОстатокНаСчете	.Видимость = Безнал;
	ЭлементыФормы.НадписьГлубинаКредита		.Видимость = Безнал;
	ЭлементыФормы.ГлубинаКредита			.Видимость = Безнал;
	
	ЭлементыФормы.ВариантыОплаты.Доступность = ТипОграниченияВариантовОплат <> Перечисления.ТипыОграниченийПоСписку.Нет;
	
	Элементыформы.ВариантыОплаты.Колонки.ОграничениеПериод.Видимость = ТипОграниченияВариантовОплат = Перечисления.ТипыОграниченийПоСписку.Включить;
	Элементыформы.ВариантыОплаты.Колонки.ОграничениеСумма.Видимость = ТипОграниченияВариантовОплат = Перечисления.ТипыОграниченийПоСписку.Включить;
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Не ВводДоступен() Тогда
		Возврат;
	КонецЕсли;  
	
	_Знач = ОбработкаВнешнихСобытий.ПолучитьДанные(Источник,Событие,Данные);
	Если НЕ ЗначениеЗаполнено(_Знач) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбКарта = "Идентификатор_"+_Знач;
	
	Если ИнтерфейсАдмина.ОбработкаВыбораКартыДоступа(ВыбКарта, КартаДоступа, Ссылка) Тогда
		КартаДоступа = ВыбКарта;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.ХранилищеДополнительнойИнформации") Тогда
		Если НЕ Фото = ЗначениеВыбора Тогда
			Фото = ЗначениеВыбора;
		КонецЕсли;
		ЭлементыФормы.Фото.Картинка = Фото.Хранилище.Получить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.КонтактнаяИнформация") Тогда
		
		ОбновитьКонтактнуюИнформациюКонтрагента();
		
		Если Объект.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
			Если Объект.ЗначениеПоУмолчанию ИЛИ Адрес="" Тогда
				Адрес = Объект.Представление;
			КонецЕсли; 
		ИначеЕсли Объект.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			Если Объект.ЗначениеПоУмолчанию ИЛИ Телефон="" Тогда
				Телефон = Объект.Представление;
			КонецЕсли; 
		ИначеЕсли Объект.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			Если Объект.ЗначениеПоУмолчанию ИЛИ Email="" Тогда
				Email = Объект.Представление;
			КонецЕсли; 
		ИначеЕсли Объект.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
			Если Объект.ЗначениеПоУмолчанию ИЛИ Web="" Тогда
				Web = Объект.Представление;
			КонецЕсли; 
		КонецЕсли;
		
		Если Модифицированность Тогда
			Записать();
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ФотоНажатие(Элемент)
	
	ХранилищеДополнительнойИнформации.ОткрытьФормуИзображения(ЭтаФорма, Фото);
	
КонецПроцедуры

Процедура КоманднаяПанельВариантыОплатыУстановитьФлажки(Кнопка)
	
	ВариантыОплаты.ЗаполнитьЗначения(Истина,"Пометка");
	
КонецПроцедуры

Процедура КоманднаяПанельСтатьиРасходаСнятьФлажки(Кнопка)
	
	ВариантыОплаты.ЗаполнитьЗначения(Ложь,"Пометка");
	
КонецПроцедуры

Процедура КоманднаяПанельКатегорииУстановитьФлажки(Кнопка)
	
	Категории.ЗаполнитьПометки(Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельКатегорииСнятьФлажки(Кнопка)
	
	Категории.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры

Процедура КартаДоступаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ИнтерфейсАдмина.ОбработкаВыбораКартыДоступа(ВыбранноеЗначение, КартаДоступа, Ссылка);
	
КонецПроцедуры

Процедура КартаДоступаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ИнтерфейсАдмина.ОбработкаОчисткиКартыДоступа(КартаДоступа);
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Наименование) Тогда
		Наименование = Контрагент;
	КонецЕсли;	
	
КонецПроцедуры

Процедура СкидкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтерфейсАдмина.ВыборСкидкиБонуса(Элемент, Ложь);
	
КонецПроцедуры

Процедура БонусыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтерфейсАдмина.ВыборСкидкиБонуса(Элемент, Истина);
	
КонецПроцедуры

Процедура ИнфНадписьСуммаБонусовНажатие(Элемент)
	Отчет = Отчеты.БонусыКлиентов.Создать();
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();   
	Отчет.ДатаС = НачалоКвартала(ТекущаяДата());
	Отчет.ДатаПо = ТекущаяДата(); 	
	Отчет.Период = "" + Отчет.ДатаС + " - " + Отчет.ДатаПо;
	
	Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	НовыйЭлементОтбора = Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.Использование= Истина;
	НовыйЭлементОтбора.ЛевоеЗначение= Новый ПолеКомпоновкиДанных("Клиент");
	НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	НовыйЭлементОтбора.ПравоеЗначение = Ссылка;
	
	
	
	Отчет.СформироватьОтчет(Форма.ЭлементыФормы.Результат);
	
КонецПроцедуры

Процедура ЯзыкНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИнтерфейсАдмина.ВыбратьИзСпискаЯзыков(ЭтаФорма, Элемент);
КонецПроцедуры

Процедура НеплательщикПриИзменении(Элемент)
	
	ОбновитьВариантыОплаты();
	
КонецПроцедуры

Процедура БезналПриИзменении(Элемент)
	
	ОбновитьВариантыОплаты();
	
КонецПроцедуры

Процедура ВариантыОплатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.Пометка.ОтображатьФлажок = Истина;
	ОформлениеСтроки.Ячейки.Пометка.ОтображатьТекст = Ложь;
	ОформлениеСтроки.Ячейки.Пометка.Флажок = ДанныеСтроки.Пометка;
	
	Если Элементыформы.ВариантыОплаты.Колонки.ОграничениеПериод.Видимость Тогда
		Если ДанныеСтроки.Пометка Тогда
			ОформлениеСтроки.Ячейки.ОграничениеПериод.Текст = СписокОграниченийПериода[ДанныеСтроки.ОграничениеПериод].Представление;
			
			Если ДанныеСтроки.ОграничениеПериод = 0 Тогда
				ОформлениеСтроки.Ячейки.ОграничениеСумма.Текст  = "";
				ОформлениеСтроки.Ячейки.ОграничениеСумма.ТолькоПросмотр = Истина;
			Иначе
				ОформлениеСтроки.Ячейки.ОграничениеСумма.ТолькоПросмотр = Ложь;
			КонецЕсли;
			
		Иначе
			ОформлениеСтроки.Ячейки.ОграничениеПериод.Текст = "";
			ОформлениеСтроки.Ячейки.ОграничениеСумма.Текст  = "";
			ОформлениеСтроки.Ячейки.ОграничениеСумма.ТолькоПросмотр = Истина;
			ОформлениеСтроки.Ячейки.ОграничениеПериод.ТолькоПросмотр = Истина;
			
		КонецЕсли;
	КонецЕсли; 
			
КонецПроцедуры

Процедура ВариантыОплатыПриИзмененииФлажка(Элемент, Колонка)
	
	Элемент.ТекущиеДанные.Пометка = НЕ Элемент.ТекущиеДанные.Пометка;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ

// Процедура назначается динамически
// Процедура вызывается при выборе пункта подменю ПодменюОтчеты командной панели
// формы. Процедура отрабатывает выбор печатной формы.
// Подключение данной процедуры-обработчика выполняется из кода конфигурации
//
Процедура ДействияФормыДействиеВыбратьОтчет(Кнопка) 
	
	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		СписокОтчетов = ПолучитьСписокОтчетов();
		СтрокаОтчетаВСписке = СписокОтчетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаОтчетаВСписке <> Неопределено Тогда
			СформироватьОтчет(СтрокаОтчетаВСписке.Значение, ЭтотОбъект);
		Иначе
			СсылкаНаОтчет = Справочники.ВнешниеОбработки.НайтиПоКоду(СтрЗаменить(Кнопка.Имя, "ВнешнийОтчет_", ""));
			
			Если СсылкаНаОтчет <> Неопределено Тогда
				СформироватьОтчет(СсылкаНаОтчет, ЭтотОбъект);
			КонецЕсли;
			
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ 
// КОНТАКТНОЙ ИНФОРМАЦИИ КОНТРАГЕНТА

Процедура КонтактнаяИнформацияКонтрагентаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	киКонтактнаяИнформацияСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента КонтактнаяИнформацияКонтрагента.
//
Процедура КонтактнаяИнформацияКонтрагентаПередНачаломИзменения(Элемент, Отказ)
	
	Если НЕ инЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	КонтактнаяИнформацияКонтрагента.РедактироватьЗапись(Элемент.ТекущиеДанные.Ссылка, мТекущийОбъектКИ, ЭтаФорма);
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента КонтактнаяИнформацияКонтрагента.
//
Процедура КонтактнаяИнформацияКонтрагентаПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если НЕ инЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Если Копирование Тогда
		КонтактнаяИнформацияКонтрагента.РедактироватьЗапись(Неопределено, мТекущийОбъектКИ, ЭтаФорма, Элемент.ТекущиеДанные.Ссылка);
	Иначе
		КонтактнаяИнформацияКонтрагента.РедактироватьЗапись(Неопределено, мТекущийОбъектКИ, ЭтаФорма);
	КонецЕсли; 
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента КонтактнаяИнформацияКонтрагента.
//
Процедура КонтактнаяИнформацияКонтрагентаПередУдалением(Элемент, Отказ)
	
	КонтактнаяИнформацияКонтрагента.УдалитьЗапись(Элемент.ТекущиеДанные.Ссылка);
	ОбновитьКонтактнуюИнформациюКонтрагента();
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельКонтактнойИнформации.УстановитьОсновным.
//
Процедура КоманднаяПанельКонтактнойИнформацииКонтрагентаУстановитьОсновным(Кнопка)
	
	Если ЭлементыФормы.КонтактнаяИнформацияКонтрагента.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	киУстановитьЗаписьОсновной(Ссылка);
	ОбновитьКонтактнуюИнформациюКонтрагента();

	
КонецПроцедуры

Процедура ПечатьКонверта(Кнопка)
	Если не КартаДоступа.Пустая() тогда
		КартаДоступа.ПолучитьОбъект().ПечатьКонверта();
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

СписокОграниченийПериода = ЭлементыФормы.ВариантыОплаты.Колонки.ОграничениеПериод.ЭлементУправления.СписокВыбора;
СписокОграниченийПериода.Добавить(0,"Без ограничений");
СписокОграниченийПериода.Добавить(1,"День");
СписокОграниченийПериода.Добавить(2,"Неделя");
СписокОграниченийПериода.Добавить(3,"Месяц");
