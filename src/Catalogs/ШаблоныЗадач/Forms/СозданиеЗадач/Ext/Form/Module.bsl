
&НаСервере
Процедура СоздатьЗадачиНаСервере(пШаблон)
	Для Каждого элИБ Из СписокИБ Цикл
		ИБ = элИБ.Значение;
		СоздатьЗадачиНаСервереПоИБ(пШаблон, , , ИБ);
	КонецЦикла;
	
КонецПроцедуры

Функция ОбъектПодходит(Объект, Фильтр)
	//:Фильтр = Справочники.ШаблоныЗадач.СоздатьЭлемент().ФильтрИБ;
	Для Каждого СтрокаФильтра Из Фильтр Цикл
		Если СтрокаФильтра.Использование Тогда
			ЗначениеАтрибута = Объект[СтрокаФильтра.Атрибут];
			фУсловиеВыполнено = Ложь;
			Если СтрокаФильтра.ВидСравнения = "Равно" Тогда
				фУсловиеВыполнено = ЗначениеАтрибута = СтрокаФильтра.Значение;
			ИначеЕсли СтрокаФильтра.ВидСравнения = "Содержит" Тогда
				фУсловиеВыполнено = СтрНайти(ЗначениеАтрибута, СтрокаФильтра.Значение);
			ИначеЕсли СтрокаФильтра.ВидСравнения = "Не содержит" Тогда
				фУсловиеВыполнено = СтрНайти(ЗначениеАтрибута, СтрокаФильтра.Значение) = 0;
			КонецЕсли;
			Если Не фУсловиеВыполнено Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

Процедура СоздатьЗадачиНаСервереПоИБ(пШаблон, Родитель = Неопределено, РабочееМесто = Неопределено, ИБ)
	//:пШаблон = Шаблон;
	Если Не ОбъектПодходит(ИБ, пШаблон.ФильтрИБ) Тогда
		Возврат;
	КонецЕсли;
	тРабочееМесто = РабочееМесто;
	Если Не ЗначениеЗаполнено(тРабочееМесто) Тогда
		тРабочееМесто = ?(ЗначениеЗаполнено(Родитель), Родитель.РабочееМесто, Неопределено);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(тРабочееМесто) Тогда
		Если Не ОбъектПодходит(тРабочееМесто, пШаблон.ФильтрРМ) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если пШаблон.фПоРабочимМестам И Не ЗначениеЗаполнено(РабочееМесто) Тогда
		РабочиеМеста = РабочиеМеста(ИБ);
		Для Каждого РабочееМесто Из РабочиеМеста Цикл
			Если Не ОбъектПодходит(РабочееМесто, пШаблон.ФильтрРМ) Тогда
				Продолжить;
			КонецЕсли;
			СоздатьЗадачиНаСервереПоИБ(пШаблон, Родитель, РабочееМесто, ИБ);
		КонецЦикла;
		РабочееМесто = Неопределено;
	Иначе
		обЗадача = Справочники.Задачи.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(обЗадача, пШаблон,,"Код,Владелец");
		Если Родитель <> Неопределено Тогда
			обЗадача.Родитель = Родитель;
		КонецЕсли;
		обЗадача.ИнформационнаяБаза = ИБ;                                     
		обЗадача.РабочееМесто = РабочееМесто;
		Если ЗначениеЗаполнено(Родитель) Тогда
			обЗадача.ПланируемаяДатаВыполнения = Родитель.ПланируемаяДатаВыполнения;
		Иначе
			обЗадача.ПланируемаяДатаВыполнения = ПланируемаяДатаВыполнения;
		КонецЕсли;
		
		Если пШаблон.ВыполнятьЗаранееЗа Тогда
			обЗадача.ПланируемаяДатаВыполнения = ДобавитьДень(ПланируемаяДатаВыполнения,-пШаблон.ВыполнятьЗаранееЗа);
		Иначе
			обЗадача.ПланируемаяДатаВыполнения = ПланируемаяДатаВыполнения;
		КонецЕсли;
		
		Если Родитель = Неопределено Тогда
			обЗадача.Наименование = ИБ.Наименование + " - " + обЗадача.Наименование;
		ИначеЕсли ЗначениеЗаполнено(РабочееМесто) Тогда
			обЗадача.Наименование = "" + Сеть.ИмяХостаРМ(РабочееМесто) + " - " + обЗадача.Наименование;
		КонецЕсли;
		обЗадача.КодШаблона = пШаблон.Код;
		обЗадача.Записать();
		Задача = обЗадача.Ссылка;
		тРабочееМесто = РабочееМесто;
		РабочееМесто = Неопределено;
		Если Не ЗначениеЗаполнено(тРабочееМесто) Тогда
			тРабочееМесто = ?(ЗначениеЗаполнено(Родитель), Родитель.РабочееМесто, Неопределено);
		КонецЕсли;		
		Выб = Справочники.ШаблоныЗадач.Выбрать(пШаблон);
		Пока Выб.Следующий() Цикл
			Если Выб.ПометкаУдаления Тогда
				Продолжить;
			КонецЕсли;
			
			СоздатьЗадачиНаСервереПоИБ(Выб.Ссылка, Задача, тРабочееМесто, ИБ);
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция РабочиеМеста(ИБ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РабочиеМеста.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РабочиеМеста КАК РабочиеМеста
	|ГДЕ
	|	НЕ РабочиеМеста.ПометкаУдаления
	|	И РабочиеМеста.ИнформационнаяБаза = &ИнформационнаяБаза
	|	И НЕ РабочиеМеста.ЭтоГруппа");
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ИБ);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаКлиенте
Процедура СоздатьЗадачи(Команда)
	СоздатьЗадачиНаСервере(Шаблон);
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Шаблон = Параметры.Шаблон;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Шаблон = Параметры.Шаблон;

КонецПроцедуры
