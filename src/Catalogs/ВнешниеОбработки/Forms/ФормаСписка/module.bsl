////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПриОткрытии".
//
Процедура ПриОткрытии()
	
	Если Не ЗначениеЗаполнено(ВидОбработки) Тогда
		ВидОбработки = Перечисления.ВидыОбработок.ПечатнаяФорма;
	КонецЕсли;
	
	СправочникСписок.Отбор.ВидОбработки.Установить(ВидОбработки);
	ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВидОбработки.Доступность = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Обработчик события "ПриИзменении" поля ВидОбработки.
//
Процедура ВидОбработкиПриИзменении(Элемент)
	
	СправочникСписок.Отбор.ВидОбработки.Значение = ВидОбработки;	
	
КонецПроцедуры

// Обработчик события "Очистка" поля "ВидОбработки".
//
Процедура ВидОбработкиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события "ПередНачаломДобавления" списка справочника.
//
Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если Не ЭтоГруппа Тогда 
		Отказ = Истина;
		
		НовыйЭлемент = Справочники.ВнешниеОбработки.СоздатьЭлемент();
		НовыйЭлемент.ВидОбработки = ВидОбработки;
		НовыйЭлемент.ПолучитьФорму("ФормаЭлемента").Открыть();
	КонецЕсли;
КонецПроцедуры

// Обработчик события "НачалоВыбора" поля ВидОбработки.
//
Процедура ВидОбработкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//СписокЗначений = Новый СписокЗначений;
	//СписокЗначений.Добавить(Перечисления.ВидыОбработок.ПечатнаяФорма);
	//
	//ЗначениеВыбора = ВыбратьИзМеню(СписокЗначений, Элемент);
	//
	//Если ЗначениеВыбора <> Неопределено Тогда
	//	Элемент.Значение = ЗначениеВыбора.Значение;
	//КонецЕсли;
КонецПроцедуры
