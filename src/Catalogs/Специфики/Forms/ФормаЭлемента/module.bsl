
Перем ФормаНаличие;

////////////////////////////////////////////////////////////////////////////////
// ПРОЧЕЕ

Процедура ПриИзмененииВариантНаличия()
	
	Если ВариантНаличияВПродаже = Перечисления.ВариантыНаличияВПродаже.Сложный Тогда
		ЭлементыФормы.ДействующиеРасписания.Видимость = истина;
		//ЭлементыФормы.ЕстьВпродаже.Видимость = ложь;
		
	Иначе		
		ЭлементыФормы.ДействующиеРасписания.Видимость = ложь;
		//ЭлементыФормы.ЕстьВпродаже.Видимость = истина;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	УправлениеРИБ.ПередОткрытиемЭлементаСправочника(ЭтотОбъект, ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если глВерсия=1 ИЛИ НЕ Константы.ДопЯзыки.Получить() Тогда
		ЭлементыФормы.ПанельОсновная.Страницы.ДопНаименования.Видимость = Ложь;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			ИнтерфейсАдмина.ЗаполнитьДопНаименования(Ссылка,ТаблицаДопНаименования);
		Иначе
			ИнтерфейсАдмина.ЗаполнитьДопНаименования(ПараметрОбъектКопирования,ТаблицаДопНаименования);
		КонецЕсли;
	КонецЕсли;

	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
		ЕстьВПродаже  = Истина;
	КонецЕсли;
	
	// наличие в продаже
	ФормаНаличие = ПолучитьОбщуюФорму("НаличиеВПродаже", ЭтаФорма);
	ФормаНаличие.Товар = ЭтотОбъект;
	
	СписокВыбора = ЭлементыФормы.ВариантНаличияВПродаже.СписокВыбора;
	СписокВыбора.Добавить(Перечисления.ВариантыНаличияВПродаже.Простой);
	СписокВыбора.Добавить(Перечисления.ВариантыНаличияВПродаже.Сложный);
	//Если ПараметрыСеанса.РаспределенныйРежим Тогда
	//	СписокВыбора.Добавить(Перечисления.ВариантыНаличияВПродаже.ПростойПоИБ);
	//	СписокВыбора.Добавить(Перечисления.ВариантыНаличияВПродаже.СложныйПоИБ);
	//КонецЕсли; 
	
	ПриИзмененииВариантНаличия();
	// наличие в продаже
	
	Попытка
		ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы[ВосстановитьЗначение("ТекущаяСтраницаСпецифики")];
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение("ТекущаяСтраницаСпецифики", ЭлементыФормы.ПанельОсновная.ТекущаяСтраница.Имя);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ГруппаПечати) Тогда
		Отказ = истина;
		Предупреждение("Не указана группа печати");
		//ГруппаСпецифик = Неопределено;
		//МинУдельныйВес = 0;
		//МаксУдельныйВес = 0;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ИнтерфейсАдмина.ЗаписатьДопНаименования(Ссылка,ТаблицаДопНаименования);
	ДействующиеРасписания.Отбор.Объект.Установить(Ссылка);	

КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Флаг = ЗначениеЗаполнено(Номенклатура);
	ЭлементыФормы.НадписьКоэфПересчета.Доступность	= Флаг;
	ЭлементыФормы.КоэфПересчета.Доступность			= Флаг;
	
	Если Флаг Тогда
		ЭлементыФормы.ИнфНадписьКоэффициент.Заголовок = Наименование+" = "+КоэфПересчета+" * "+Номенклатура.БазоваяЕдиницаИзмерения;
	Иначе
		ЭлементыФормы.ИнфНадписьКоэффициент.Заголовок = "";
	КонецЕсли;
	
	Если ВариантНаличияВПродаже = Перечисления.ВариантыНаличияВПродаже.Простой Тогда
		//ЭлементыФормы.ПанельНаличияВПродаже.ТекущаяСтраница = ЭлементыФормы.ПанельНаличияВПродаже.Страницы.ПростаяНастройка;
	Иначе
	КонецЕсли;
	
	ЭлементыФормы.ПанельОсновная.Страницы.ВложенныеСпецифики.Видимость = ЗначениеЗаполнено(ГруппаПечати);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПанельОсновнаяПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ОбновлениеОтображения();
КонецПроцедуры

Процедура ВариантНаличияВПродажеПриИзменении(Элемент)
	
	ПриИзмененииВариантНаличия();
	
КонецПроцедуры

Процедура ВариантНаличияВПродажеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура КнопкаИзменитьНаличиеВПродажеНажатие(Элемент)
	
	ФормаНаличие.ОткрытьМодально();
	ЭлементыФормы.РасшифровкаНаличия.Заголовок = ФормаНаличие.ПолучитьРасшифровкуНаличия();
	
КонецПроцедуры

Процедура НаличиеПоИБВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ФормаНаличие.ИнформационнаяБаза = ЭлементыФормы.НаличиеПоИБ.ТекущаяСтрока.ИБ;
	ФормаНаличие.ОткрытьМодально();
	ЭлементыФормы.НаличиеПоИБ.ТекущаяСтрока.Значение = СтрЗаменить( ФормаНаличие.ПолучитьРасшифровкуНаличия(), Символы.ПС, " ");
	
КонецПроцедуры

Процедура НаличиеПоИБПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Лев(ДанныеСтроки.Значение,3) = "Нет" Тогда
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,,,,Истина);
	Иначе
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,,,,Ложь);
	КонецЕсли; 
	
КонецПроцедуры

Процедура МинУдельныйВесПриИзменении(Элемент)
	
	Если ЭтотОбъект.МаксУдельныйВес < ЭтотОбъект.МинУдельныйВес Тогда
		ЭтотОбъект.МаксУдельныйВес = ЭтотОбъект.МинУдельныйВес
	КонецЕсли; 
	
КонецПроцедуры

Процедура МаксУдельныйВесПриИзменении(Элемент)
	
	Если ЭтотОбъект.МаксУдельныйВес < ЭтотОбъект.МинУдельныйВес Тогда
		ЭтотОбъект.МинУдельныйВес = ЭтотОбъект.МаксУдельныйВес
	КонецЕсли; 
	
КонецПроцедуры

ДействующиеРасписания.Отбор.Объект.Установить(Ссылка);