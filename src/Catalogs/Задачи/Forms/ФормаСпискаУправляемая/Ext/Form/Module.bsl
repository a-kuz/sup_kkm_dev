
&НаКлиенте
Процедура ОткрытьШаблоны(Команда)
	ОткрытьФорму("Справочник.ШаблоныЗадач.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьФлагВыполненоНаСервере(лЗадачи, флагРезультат = 1)
	//:лЗадачи = Новый Массив;
	Для Каждого Задача Из лЗадачи Цикл
		обЗадача = Задача.ПолучитьОбъект();
		обЗадача.флагРезультат = флагРезультат;
		обЗадача.Записать();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВыполнение(Команда)
	лЗадачи = Новый Массив;
	Для Каждого Т Из Элементы.Список.ВыделенныеСтроки Цикл
		лЗадачи.Добавить(Элементы.Список.ДанныеСтроки(Т).Ссылка);
	КонецЦикла;
	
	УстановитьФлагВыполненоНаСервере(лЗадачи);
	Элементы.Список.Обновить();
	УстановитьВидимостьКнопокУправленияСостояниемЗадач();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОтметкуВыполнения(Команда)
	лЗадачи = Новый Массив;
	Для Каждого Т Из Элементы.Список.ВыделенныеСтроки Цикл
		лЗадачи.Добавить(Элементы.Список.ДанныеСтроки(Т).Ссылка);
	КонецЦикла;
	
	УстановитьФлагВыполненоНаСервере(лЗадачи,0);
	Элементы.Список.Обновить();
	УстановитьВидимостьКнопокУправленияСостояниемЗадач();
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВыполнениеСошибкой(Команда)
	лЗадачи = Новый Массив;
	Для Каждого Т Из Элементы.Список.ВыделенныеСтроки Цикл
		лЗадачи.Добавить(Элементы.Список.ДанныеСтроки(Т).Ссылка);
	КонецЦикла;
	УстановитьФлагВыполненоНаСервере(лЗадачи,-1);
	Элементы.Список.Обновить();
	УстановитьВидимостьКнопокУправленияСостояниемЗадач();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ПриАктивизацииСтроки", 0.1, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизацииСтроки() Экспорт
	ТД = Элементы.Список.ТекущиеДанные;
	
	Если ТД = Неопределено Тогда
		ТекРезультат = "";	
		ТекОписаниеОшибки = "";
		ЗапланированнаяДата = '00010101';
		Элементы.ДекорацияЧасы.Видимость = 0;
	Иначе                     
		ДанныеЗадачи = ПолучитьДанныеЗадачи(Элементы.Список.ТекущаяСтрока);
		ТекРезультат = ДанныеЗадачи.Результат;
		ТекОписаниеОшибки = ДанныеЗадачи.ОписаниеОшибки;
		ЗапланированнаяДата = ДанныеЗадачи.ЗапланированнаяДата;
		Элементы.ДекорацияЧасы.Видимость = ЗначениеЗаполнено(ЗапланированнаяДата);
	КонецЕсли;
	
	УстановитьВидимостьКнопокУправленияСостояниемЗадач();	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеЗадачи(Задача)
	//:Задача = Справочники.Задачи.ПустаяСсылка();
	обЗадача = Задача.ПолучитьОбъект();
	ДанныеЗадачи = Новый Структура("Результат, ОписаниеОшибки, ЗапланированнаяДата");
	ЗаполнитьЗначенияСвойств(ДанныеЗадачи, обЗадача);
	ДанныеЗадачи.ЗапланированнаяДата = обЗадача.ЗапланированнаяДата();
	Возврат ДанныеЗадачи;
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьКнопокУправленияСостояниемЗадач()
	МожноВыполнить = Ложь;
	МожноОтменитьВыполнение = Ложь;
	МожноОтметитьОшибку = Ложь;
	МожноВыполнитьПроцедуры = Ложь;
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		Для Каждого Т Из Элементы.Список.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.Список.ДанныеСтроки(Т);
			Если ДанныеСтроки = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			флагРезультат = ДанныеСтроки.флагРезультат;
			Если флагРезультат < 1 Тогда
				МожноВыполнить = Истина;
			КонецЕсли;
			Если флагРезультат Тогда
				МожноОтменитьВыполнение = Истина;
			КонецЕсли;
			Если флагРезультат >= 0 Тогда
				МожноОтметитьОшибку = Истина;
			КонецЕсли;
			Если флагРезультат <= 0 Тогда
				МожноВыполнитьПроцедуры = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МожноВыполнить <> Элементы.ФормаОтметитьВыполнение.Доступность Тогда
		Элементы.ФормаОтметитьВыполнение.Доступность = МожноВыполнить;
		Элементы.СписокКонтекстноеМенюОтметитьВыполнение.Доступность = МожноВыполнить;
	КонецЕсли;
	
	Если МожноОтменитьВыполнение <> Элементы.ФормаОтменитьОтметкуВыполнения.Доступность Тогда
		Элементы.ФормаОтменитьОтметкуВыполнения.Доступность = МожноОтменитьВыполнение;
		Элементы.СписокКонтекстноеМенюОтменитьОтметкуВыполнения.Доступность = МожноОтменитьВыполнение;
	КонецЕсли;
	
	Если МожноОтметитьОшибку <> Элементы.ФормаОтметитьВыполнениеСошибкой.Доступность Тогда
		Элементы.ФормаОтметитьВыполнениеСошибкой.Доступность = МожноОтметитьОшибку;
		Элементы.СписокКонтекстноеМенюОтметитьВыполнениеСошибкой.Доступность = МожноОтметитьОшибку;
	КонецЕсли;
	
	Если МожноВыполнитьПроцедуры <> Элементы.ФормаВыполнитьПроцедуры1.Доступность Тогда
		Элементы.ФормаВыполнитьПроцедуры1.Доступность = МожноВыполнитьПроцедуры;
		Элементы.СписокКонтекстноеМенюВыполнитьПроцедуры.Доступность = МожноВыполнитьПроцедуры;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьПроцедурыНаСервере(лЗадачи)
	Для Каждого Задача Из лЗадачи Цикл
		//:Задача = Справочники.Задачи.ПустаяСсылка();
		Алгоритм = 	Задача.Процедура;
		Если Не ЗначениеЗаполнено(Алгоритм) Тогда
			Продолжить;
		КонецЕсли;
		Если Задача.флагРезультат = 1 Тогда
			Продолжить
		КонецЕсли;
		ПараметрыАлгоритма = ирКПА(Алгоритм);
		ПараметрыАлгоритма.Задача = Задача;
		ирИВА(Алгоритм,ПараметрыАлгоритма);
		флагРезультат = Задача.флагРезультат;
		Результат = Задача.Результат;
		ОписаниеОшибки = Задача.ОписаниеОшибки;
		ПараметрыАлгоритма.Свойство("Результат", Результат);
		ПараметрыАлгоритма.Свойство("флагРезультат", флагРезультат);
		ПараметрыАлгоритма.Свойство("ОписаниеОшибки", ОписаниеОшибки);
		обЗадача = Задача.ПолучитьОбъект();
		Если ОписаниеОшибки <> Неопределено Тогда
			обЗадача.ОписаниеОшибки = ОписаниеОшибки;
		КонецЕсли;
		Если флагРезультат <> Неопределено Тогда
			обЗадача.флагРезультат = флагРезультат;
		КонецЕсли;
		Если Результат <> Неопределено Тогда
			обЗадача.Результат = Результат;
		КонецЕсли;
		обЗадача.ДополнительныеСвойства.Вставить("Авто", Истина);
		обЗадача.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроцедуры(Команда)
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	ВсегоСтрок = ВыделенныеСтроки.Количество();
	Для Каждого Т Из ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(Т);
		#Если НЕ ТонкийКлиент Тогда
		Если ДанныеСтроки.ПроцедураВыполяетсяНаКлиенте Тогда
			Задача = ДанныеСтроки.Ссылка;
			Алгоритм = 	Задача.Процедура;
			Если Не ЗначениеЗаполнено(Алгоритм) Тогда
				Продолжить;
			КонецЕсли;
			Если Задача.флагРезультат = 1 Тогда
				Продолжить
			КонецЕсли;
			
			ПараметрыАлгоритма = ирКПА(Алгоритм);
			ПараметрыАлгоритма.Задача = Задача;
			ирИВА(Алгоритм,ПараметрыАлгоритма);
			флагРезультат = Задача.флагРезультат;
			Результат = Задача.Результат;
			ОписаниеОшибки = Задача.ОписаниеОшибки;
			ПараметрыАлгоритма.Свойство("Результат", Результат);
			ПараметрыАлгоритма.Свойство("флагРезультат", флагРезультат);
			ПараметрыАлгоритма.Свойство("ОписаниеОшибки", ОписаниеОшибки);
			обЗадача = Задача.ПолучитьОбъект();
			Если ОписаниеОшибки <> Неопределено Тогда
				обЗадача.ОписаниеОшибки = ОписаниеОшибки;
			КонецЕсли;
			Если флагРезультат <> Неопределено Тогда
				обЗадача.флагРезультат = флагРезультат;
			КонецЕсли;
			Если Результат <> Неопределено Тогда
				обЗадача.Результат = Результат;
			КонецЕсли;
			обЗадача.ДополнительныеСвойства.Вставить("Авто", Истина);
			обЗадача.Записать();
			Продолжить;	
		КонецЕсли;
		#КонецЕсли
		лЗадачи = Новый Массив;
		
		лЗадачи.Добавить(ДанныеСтроки.Ссылка);
		Состояние("Выполняется процедура по задаче", ВыделенныеСтроки.Найти(Т)/ВсегоСтрок*100, "" + ДанныеСтроки.Ссылка + Символы.ПС + ДанныеСтроки.Процедура, БиблиотекаКартинок.ДлительнаяОперация48);
		ВыполнитьПроцедурыНаСервере(лЗадачи);
	КонецЦикла;
	Элементы.Список.Обновить();
	УстановитьВидимостьКнопокУправленияСостояниемЗадач();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДатаСеанса());
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНаСервере()
	//Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДатаСеанса());
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура DameWareНаСервере(Задача)
КонецПроцедуры

&НаКлиенте
Процедура DameWare(Команда)
	ТД = Элементы.Список.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТД.РабочееМесто = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка") Тогда
		Сеть.ЗапуститьDameWare(ТД.СерверХост);
	Иначе
		Сеть.ЗапуститьDameWare(Сеть.ИмяХостаРМ(ТД.РабочееМесто, 1));
	КонецЕсли;
	DameWareНаСервере(ТД.Ссылка);
КонецПроцедуры



