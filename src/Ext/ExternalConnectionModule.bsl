Перем глСоединения Экспорт;
Перем глПараметрыРМ Экспорт;
Перем глРабочееМесто Экспорт;

#Если ВнешнееСоединение Тогда
	Функция ДатаЗапускаТТ() Экспорт
		
		ДатаЗапускаТТ = ПланыОбмена.Основной.ЭтотУзел().ИнформационнаяБаза.ДатаЗапускаТТ;
		Если ЗначениеЗаполнено(ДатаЗапускаТТ) Тогда
			Возврат ДатаЗапускаТТ;
		КонецЕсли;
		Connection = SQL.ПодключитьсяКloyality_ext();
		
		//обертываем в транзакцию и выставляем флаг обработки, чтобы на период обработки строки очереди, запись в очереди была "заблокирована"
		ТекстЗапроса = "
		|SELECT  CONST_VAL
		|FROM    Loyality_ext.dbo.CONST 
		|WHERE   CONST_NAME = 'Дата запуска СУП ККМ'";
		
		ТаблицаРезультат = SQL.ВыполнитьЗапросВыборки(Connection, ТекстЗапроса);
		
		Если ТаблицаРезультат = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если не ТаблицаРезультат.Количество() Тогда
			//Предупреждение("Не установлена дата запуска ТТ!");
			Возврат Неопределено;
		КонецЕсли;
		
		ДатаЗапускаТТ = ДатаИзСтроки(ТаблицаРезультат[0][0]);
		Если ЗначениеЗаполнено(ДатаЗапускаТТ) Тогда
			обИнформационнаяБаза = ПланыОбмена.Основной.ЭтотУзел().ИнформационнаяБаза.ПолучитьОбъект();
			обИнформационнаяБаза.ДатаЗапускаТТ = ДатаЗапускаТТ;
			обИнформационнаяБаза.Записать();
		КонецЕсли;
		Возврат ДатаЗапускаТТ;
	КонецФункции
	
	Функция ПрочитатьОбъектИзСтроки(Строка) Экспорт
		ЧтениеJson = Новый ЧтениеJSON;
		ЧтениеJson.УстановитьСтроку(Строка);
		Объект = СериализаторXDTO.ПрочитатьJSON(ЧтениеJson);
		ЧтениеJson.Закрыть();
		Возврат Объект;
	КонецФункции
	
	Функция ЗарегистрироватьРезультатТестирования(КодИБ, ПрофильВхода, стрРезультат) Экспорт
		ЗарегистрироватьСобытие("Получение результата тестирования РМ", УровеньЖурналаРегистрации.Информация, , , ПрофильВхода + Символы.ПС + стрРезультат);
		
		ИБ = Справочники.ИнформационныеБазы.НайтиПоКоду(КодИБ);
		Запрос = Новый Запрос("Выбрать Ссылка Из Справочник.РабочиеМеста Где ИнформационнаяБаза = &ИБ И ПрофильВхода = &ПрофильВхода И Не ПометкаУдаления");
		Запрос.УстановитьПараметр("ИБ", ИБ);
		Запрос.УстановитьПараметр("ПрофильВхода", ПрофильВхода);
		Рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() Тогда
			РМ = Рез[0][0];
		Иначе
			РМ = Неопределено;
		КонецЕсли;
		
		РезультатТестирования = ЗначениеИзСтрокиВнутр(стрРезультат);
		//:РезультатТестирования = Новый Соответствие;
		
		Для Каждого Т Из РезультатТестирования Цикл
			
			Запрос.Текст = "ВЫБРАТЬ
			|	Задачи.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Задачи КАК Задачи
			|ГДЕ
			|	Задачи.РабочееМесто = &РабочееМесто
			|	И Задачи.КодШаблона = &КодШаблона И флагРезультат <> 1";
			Запрос.УстановитьПараметр("РабочееМесто", РМ);
			Запрос.УстановитьПараметр("КодШаблона", Т.Ключ);
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				Продолжить;
			КонецЕсли;
			
			обЗадача = Рез.Выгрузить()[0][0].ПолучитьОбъект();
			Если Т.Значение Тогда
				обЗадача.флагРезультат = 1;
			Иначе
				обЗадача.флагРезультат = -1;
			КонецЕсли;
			обЗадача.Записать();
		КонецЦикла;
		
	КонецФункции
	
	Функция ВыполнитьОбменПоНастройкеXML(ДатаНачала=Неопределено, ДатаОкончания=Неопределено) Экспорт
		ЗарегистрироватьСобытие("ВыполнитьОбменПоНастройкеXML");
		Попытка
			ПутьКФайлуДанныхВыгрузки = Неопределено;	
			
			Выб = Справочники.НастройкиОбменовДаннымиXML.Выбрать();
			Пока Выб.Следующий() Цикл
				Если Выб.ПометкаУдаления Тогда
					Продолжить;
				КонецЕсли;
				
				Сообщить(выб.Ссылка);
				
				АвтообменДанными.ВыгрузитьДанныеXML(Выб.Ссылка,,ДатаНачала, ДатаОкончания);
				ПутьКФайлуДанныхВыгрузки = Выб.ПутьКФайлуДанныхВыгрузки;
			КонецЦикла;
			Результат = Новый Структура("Результат,  ПутьКФайлуДанныхВыгрузки", ?(ПутьКФайлуДанныхВыгрузки = Неопределено, -1, 1), ПутьКФайлуДанныхВыгрузки);
		Исключение
			Результат = Новый Структура("Результат,  ПутьКФайлуДанныхВыгрузки, ОписаниеОшибки", ?(ПутьКФайлуДанныхВыгрузки = Неопределено, -1, 1), ПутьКФайлуДанныхВыгрузки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		ЗарегистрироватьСобытие("ВыполнитьОбменПоНастройкеXML.Конец",,,,ЗначениеВСтрокуВнутр(Результат));
		Возврат Результат;
		
	КонецФункции
	
#КонецЕсли

глСоединения = Новый Соответствие;

