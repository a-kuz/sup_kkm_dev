
Процедура ПриЗаписи(Отказ)
	
	Если НЕ ДополнительныеСвойства.Свойство("Новый") Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстСообщенияВСтопе = "";
	ТекстСообщенияВПродаже = "";
	
	// запись данных в независимый регистр СтопЛист
	Для каждого СтрокаТовара Из Товары Цикл
		
		РегистрСтопЛист = РегистрыСведений.СтопЛист.СоздатьМенеджерЗаписи();
		РегистрСтопЛист.Период				= Дата;
		РегистрСтопЛист.Товар				= СтрокаТовара.Товар;
		РегистрСтопЛист.ИнформационнаяБаза	= ИнформационнаяБаза;
		РегистрСтопЛист.вСтопе				= СтрокаТовара.вСтопе;
		РегистрСтопЛист.Остаток				= СтрокаТовара.Остаток;
		РегистрСтопЛист.Автор				= Автор;
		РегистрСтопЛист.Заказ				= Заказ;
		РегистрСтопЛист.НовыйТовар			= СтрокаТовара.НовыйТовар;
		РегистрСтопЛист.Записать();
		
		Если СтрокаТовара.вСтопе Тогда
			Если СтрокаТовара.Остаток = 0 Тогда
				ТекстСообщенияВСтопе = ТекстСообщенияВСтопе + СтрокаТовара.Товар.Наименование + Символы.ПС;
			КонецЕсли; 
		Иначе
			ТекстСообщенияВПродаже = ТекстСообщенияВПродаже + СтрокаТовара.Товар.Наименование + Символы.ПС;
		КонецЕсли; 
	КонецЦикла; 
	
	#Если Клиент Тогда
		МассивСотрудников = ИнтерфейсРМ.СоставСмены();
		
	#КонецЕсли
	
	// запись события в регистр ОчередьСобытий для вывода оповещений
	// на всех рабочих местах, кроме текущего
	Запрос = Новый Запрос("ВЫБРАТЬ Справочник.РабочиеМеста.Ссылка 
						|ГДЕ НЕ ПометкаУдаления
						|	И МестоРеализации.ИнформационнаяБаза = &ТекущаяИБ
						|	И Ссылка <> &ТекущееРМ
						|	И Тип <> ЗНАЧЕНИЕ(Перечисление.ТипыРМ.АгентПлюс)
						|");
	#Если Клиент Тогда
		Запрос.УстановитьПараметр("ТекущаяИБ", ИнформационнаяБаза);
		Запрос.УстановитьПараметр("ТекущееРМ", глРабочееМесто);
		// для ГлавнаяФорма
		Оповестить("ОбновитьСтопЛист");
	#Иначе
		Запрос.УстановитьПараметр("ТекущееРМ", Неопределено);
	#КонецЕсли						
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбработкаСобытийЗапись = РегистрыСведений.ОбработкаСобытий.СоздатьМенеджерЗаписи();
		ОбработкаСобытийЗапись.Период			= '20010101';	// событие не отложенное, но пустую дату записывать нельзя
		ОбработкаСобытийЗапись.РабочееМесто	= Выборка.Ссылка;
		ОбработкаСобытийЗапись.ИдСобытия	= Строка(Ссылка.УникальныйИдентификатор());
		ОбработкаСобытийЗапись.ТипСобытия	= Перечисления.ТипыСобытий.СтопЛист;
		ОбработкаСобытийЗапись.Записать();
	КонецЦикла; 
	
КонецПроцедуры

