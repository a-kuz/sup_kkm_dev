
Процедура ОбработкаПроведения(Отказ, Режим)
	#Если ТолстыйКлиентОбычноеПриложение Тогда
	//Если ДатаЗапускаТТ() < Дата Тогда
	//	Возврат;
	//КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
	Если не Отказ Тогда//и не ПроцедурыОбменаДанными.ОпределитьЭтаИнформационнаяБазаФайловая() Тогда
		Если глПараметрыРМ = Неопределено или НЕ глПараметрыРМ.ККМЕсть Тогда
			Спр = РабочееМесто;
			ИмяФайла = ПолучитьИмяВременногоФайла("txt");
			ЗаписатьОбъектВФайл(ИмяФайла,ЭтотОбъект);
			Профиль = Спр.ПрофильВхода;
			Поз = СтрНайти(Профиль,"\",НаправлениеПоиска.СКонца);
			СтрПуть = Лев(Профиль,Поз-1);
			Наим = Сред(СтрПуть,3);
			Сеть.ПодключитьШару(Наим);
			СтрПуть = СтрПуть + "\";
			Каталог = РегистрыСведений.ДополнительныеСвойства.ЗначениеСвойства(ПараметрыСеанса.ТекущаяИБ, "ПутьДляЛогирования");//Константы.ПутьДляЛогирования.Получить();
			Если Каталог = Неопределено Тогда
				Каталог = Константы.ПутьДляЛогирования.Получить();
			КонецЕсли;
			СтрПуть = СтрПуть + СтрЗаменить(Каталог,":","$");
			СтрПуть = ?(Прав(СтрПуть,1) = "\",СтрПуть,СтрПуть + "\");
			СтрПуть = СтрПуть + Формат(ТекущаяДата(),"ДФ=yyyyMMdd") + "\";
			ИмяфайлаПолучателя = СтрПуть + "ЗакрытиеКассовойСмены_" + Наим + ".txt";
			Попытка
				КопироватьФайл(ИмяФайла,ИмяфайлаПолучателя);
			Исключение
				ЗаписьЖурналаРегистрации("Ошибка записи файла закрытия смены кассы",УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект,,"Ошибка доступа до " + Профиль);
			КонецПопытки;
			ИмяФайла = ПолучитьИмяВременногоФайла("txt");
			ЗаписатьОбъектВФайл(ИмяФайла,ЭтотОбъект.СменаТТ.ПолучитьОбъект());
			ИмяфайлаПолучателя = СтрПуть + "ЗакрытиеСмены_" + Наим + ".txt";
			Попытка
				КопироватьФайл(ИмяФайла,ИмяфайлаПолучателя);
			Исключение
				ЗаписьЖурналаРегистрации("Ошибка записи файла закрытия смены",УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект,,"Ошибка доступа до " + Профиль);
			КонецПопытки;
		Иначе
			Каталог = РегистрыСведений.ДополнительныеСвойства.ЗначениеСвойства(ПараметрыСеанса.ТекущаяИБ, "ПутьДляЛогирования");//Константы.ПутьДляЛогирования.Получить();
			Если Каталог = Неопределено Тогда
				Каталог = Константы.ПутьДляЛогирования.Получить();
			КонецЕсли;
			Профиль = РабочееМесто.ПрофильВхода;
			Поз = СтрНайти(Профиль,"\",НаправлениеПоиска.СКонца);
			Наим = Сред(Лев(Профиль,поз - 1),3);
			ИмяФайла = ?(Прав(Каталог,1) = "\",Каталог,Каталог + "\") + Формат(ТекущаяДата(),"ДФ=yyyyMMdd") + "\" + "ЗакрытиеКассовойСмены_" + Наим + ".txt";
			ЗаписатьОбъектВФайл(ИмяФайла,ЭтотОбъект);
			ИмяФайла = ?(Прав(Каталог,1) = "\",Каталог,Каталог + "\") + Формат(ТекущаяДата(),"ДФ=yyyyMMdd") + "\" + "ЗакрытиеСмены_" + Наим + ".txt";
			ЗаписатьОбъектВФайл(ИмяФайла,ЭтотОбъект.СменаТТ.ПолучитьОбъект());
		КонецЕсли;		
	КонецЕсли;
	#КонецЕсли
	#КонецЕсли
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Касса_ОткрытиеСмены") Тогда
		Док = Документы.Касса_ЗакрытиеСмены.НайтиПоРеквизиту("СменаКассы", ДанныеЗаполнения.Ссылка);
		Если ЗначениеЗаполнено(Док) Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		// Заполнение шапки
		РабочееМесто = ДанныеЗаполнения.РабочееМесто;
		СменаТТ = ДанныеЗаполнения.СменаТТ;
		СменаКассы = ДанныеЗаполнения.Ссылка;
		фРучноеЗакрытие = Истина;
		Автор = ПараметрыСеанса.ТекущийПользователь;
		Дата = ДанныеЗаполнения.Дата + 1;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
Процедура ОтправитьОповещениеНаПочту()
	Текст = "Выполнено ручное закрытие кассовой смены на ТТ [ПараметрыСеанса.ТекущаяИБ].
	|Документ: [ЭтотОбъект.Ссылка]";
	ИзХранилища = Справочники.ХранилищеДополнительнойИнформации.ШаблонПисьма_РучноеЗакрытиеКассовойСмены.Хранилище.Получить();	
	Если ТипЗнч(ИзХранилища)=Тип("Строка") Тогда
		Текст = ИзХранилища;
	КонецЕсли;
	
	Текст = Вычислить(Шаблон2Выражение(Текст));
	Тема  = "Ручное закрытие кассовой смены";
	Получатель = РегистрыСведений.ДополнительныеСвойства.ЗначениеСвойства(ПараметрыСеанса.ТекущаяИБ.Регион, "email_ОТК");
	ЭлектроннаяПочта.ОтправитьОповещениеНаПочту(Тема, Текст, Получатель);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Касса_ЗакрытиеСмены.Ссылка
	|ИЗ
	|	Документ.Касса_ЗакрытиеСмены КАК Касса_ЗакрытиеСмены
	|ГДЕ
	|	Касса_ЗакрытиеСмены.СменаКассы = &СменаКассы
	|	И Касса_ЗакрытиеСмены.Ссылка <> &Ссылка");

	Запрос.УстановитьПараметр("СменаКассы", СменаКассы);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Если Не Запрос.Выполнить().Пустой() Тогда
		Отказ=Истина;
		Сообщить("Повторное закрытие смены невозможно");
		Возврат;
	КонецЕсли;

	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если Не ПисьмоОтправлено И фРучноеЗакрытие Тогда
			Попытка
				ОтправитьОповещениеНаПочту();	
			Исключение
				ЗаписьЖурналаРегистрации("Ручное закрытие кассовой смены",УровеньЖурналаРегистрации.Ошибка,Метаданные.Документы.Касса_ОткрытиеСмены,СменаКассы,"Ошибка при отправке оповещения на почту
				|" + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;                          		
	КонецЕсли;
	
	Если фРучноеЗакрытие и ПараметрыСмены.Получить() = неопределено
		и ЗначениеЗаполнено(ЭтотОбъект.СменаКассы) и СтрНайти(ЭтотОбъект.СменаКассы.Касса.ИмяОбработки,"ФР_Атол326") <> 0 Тогда
		ПараметрыСмены = Новый ХранилищеЗначения(Смена(ЭтотОбъект));
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		глРабочееМесто = глРабочееМесто;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДенежныеОперацииОбороты.СуммаОборот КАК СуммаОборот
		|ИЗ
		|	РегистрНакопления.ДенежныеОперации.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			ККМ = &ККМ) КАК ДенежныеОперацииОбороты";
		Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(Дата));
		Запрос.УстановитьПараметр("КонецПериода",КонецДня(Дата));
		//Запрос.УстановитьПараметр("РабочееМесто",глРабочееМесто);
		Запрос.УстановитьПараметр("ККМ",СменаКассы.Касса);
		Выборка = Запрос.Выполнить().Выбрать();
		СуммаИнкасации = 0;
		Пока Выборка.Следующий() Цикл
			СуммаИнкасации = Выборка.СуммаОборот;
		КонецЦикла;
		
		Движения.ДенежныеОперации.Записывать = Истина;
		Движения.ДенежныеОперации.Очистить();
		Движение = Движения.ДенежныеОперации.Добавить();
		Движение.Период = Дата;
		Движение.РабочееМесто = РабочееМесто;
		Движение.ККМ = СменаКассы.Касса;
		Движение.Сумма = -1*СуммаИнкасации;
		
		// соберем сумму по чекам
		СуммаПоЧекам = 0;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЕСТЬNULL(СУММА(ВЫБОР
		               |				КОГДА ПротоколРасчетовПротокол.Ссылка.Заказ ССЫЛКА Документ.Заказ
		               |					ТОГДА ПротоколРасчетовПротокол.СуммаФакт
		               |				ИНАЧЕ -1 * ПротоколРасчетовПротокол.СуммаФакт
		               |			КОНЕЦ), 0) КАК Нал
		               |ИЗ
		               |	Документ.ПротоколРасчетов.Протокол КАК ПротоколРасчетовПротокол
		               |ГДЕ
		               |	ПротоколРасчетовПротокол.Ссылка.НомерСмены = &НомерСмены
		               |	И ПротоколРасчетовПротокол.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
		               |	И ПротоколРасчетовПротокол.Ссылка.ККМ = &ККМ
		               |	И ПротоколРасчетовПротокол.Ссылка.Проведен";
		Запрос.УстановитьПараметр("НомерСмены",СменаКассы.НомерСмены);
		Запрос.УстановитьПараметр("Дата",СменаКассы.Дата);
		Запрос.УстановитьПараметр("ККМ",СменаКассы.Касса);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СуммаПоЧекам = Выборка.Нал;	
		КонецЦикла;
		
		// соберем сумму по ККМ
		Параметры = ПараметрыСмены.Получить();
		СуммаККМ = 0;
		ДатаДокумента = Дата(1,1,1);
		Если Параметры <> Неопределено Тогда
			СуммаККМ = Параметры.СуммаПриходНал + Параметры.СуммаПриходБНал - Параметры.СуммаВозвратПриходаНал - Параметры.СуммаВозвратПриходаБНал;
			ДатаДокумента = Параметры.ДатаДокумента;
		КонецЕсли;
		
		
		// запишем в ext
		Коннект = sql.ПодключитьсяКloyality_ext();
		Если Коннект = Неопределено Тогда
			ЗаписьЖурналаРегистрации("Подключение к базе", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),"ошибка подключения к серверу при записи открытия смены");
		Иначе
			ОтказЗаписи = ложь;
			ТекстОшибки = "";
			
			ТекстЗапроса = "
			|Select ИдСтроки from [Loyality_ext].[dbo].[КассовыеСмены]  
			|				where Дата = '&ДатаОткр'
			|				and ТТ = &КодТТ
			|				and НомерККМ = &НомерККМ
			|				and НомерСмены = &НомерСмены
			|				and ДатаОткрытия = '&ДатаСмены'";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаОткр",Формат(СменаКассы.Дата,"ДФ=yyyyMMdd; ДП=40010101"));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&КодТТ",Формат(РабочееМесто.Фирма.КодТТ,"ЧН=0; ЧГ=0"));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&НомерККМ",формат(СменаКассы.КассаНомер,"ЧН=0; ЧГ=0"));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&НомерСмены",формат(СменаКассы.НомерСмены,"ЧН=0; ЧГ=0"));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаСмены",Формат(СменаКассы.Дата,"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
			
			ТаблицаРезультат = SQL.ВыполнитьЗапросВыборки(Коннект, ТекстЗапроса, ОтказЗаписи, ТекстОшибки);
			Если ОтказЗаписи Тогда 
				ЗаписьЖурналаРегистрации("Запись закрытия смены", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),ТекстОшибки + "" + ТекстЗапроса);
			КонецЕсли;
			
			Если ТаблицаРезультат.Количество() <> 0 Тогда // обновим записи в таблице и удалим из кассовых показателей
				ИдЗаписи = Формат(ТаблицаРезультат[0].ИдСтроки,"ЧН=0; ЧГ=0");
				текстЗапроса = "
				|update [Loyality_ext].[dbo].[КассовыеСмены]
				|set
				|			[фЗакрыта] = 1
				|			,[ДатаЗакрытия] = '&ДатаДок'
				|			,[фЗакрытаВручную] = &ФВРучную
				|			,[фОшибки] = &ФОшибки
				//|			,[Примечание] = '&Примечание'
				|			,[СуммаПоЧекам] = &СуммаЧеки
				|			,[СуммаПоККМ] = &СуммаККМ
				|			,[ДатаПоследнегоЧека] = '&ДатаПоследнегоЧека'
				|			,[ДатаИзменения] = GetDate()
				|Where	ИдСтроки = &ИдЗаписи";
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ИдЗаписи",ИдЗаписи);
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаДок",Формат(Дата,"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ФОшибки",?(Совпало,0,1));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ФВРучную",?(фРучноеЗакрытие,1,0));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&СуммаЧеки",формат(СуммаПоЧекам,"ЧРД=.; ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&СуммаККМ",формат(СуммаККМ,"ЧРД=.; ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаПоследнегоЧека",Формат(ДатаДокумента,"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
				
				ОтказЗаписи = Ложь;
				ТекстОшибки = "";
				SQL.ВыполнитьЗапрос(Коннект, ТекстЗапроса, ОтказЗаписи, ТекстОшибки);
				Если ОтказЗаписи Тогда 
					ЗаписьЖурналаРегистрации("Запись закрытия смены", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),ТекстОшибки + "" + ТекстЗапроса);
				КонецЕсли;
				
				ТекстЗапроса = "
				|Delete [Loyality_ext].[dbo].[КассовыеСмены_Показатели]
				|Where [идСмены] = &ИдЗаписи";
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ИдЗаписи",ИдЗаписи);
				
				ОтказЗаписи = Ложь;
				ТекстОшибки = "";
				SQL.ВыполнитьЗапрос(Коннект, ТекстЗапроса, ОтказЗаписи, ТекстОшибки);
				Если ОтказЗаписи Тогда 
					ЗаписьЖурналаРегистрации("Запись закрытия смены", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),ТекстОшибки + "" + ТекстЗапроса);
				КонецЕсли;
			иначе
				ТекстЗапроса = "
				|Insert into [Loyality_ext].[dbo].[КассовыеСмены]
				|			(Дата
				|			,ТТ
				|			,[НомерККМ]
				|			,[ЗаводскойНомерККМ]
				|			,[НомерСмены]
				|			,[ДатаОткрытия]
				|			,[фЗакрыта]
				|			,[ДатаЗакрытия]
				|			,[фЗакрытаВручную]
				|			,[фОшибки]
				//|			,[Примечание]
				|			,[СуммаПоЧекам]
				|			,[СуммаПоККМ]
				|			,[ДатаПоследнегоЧека]
				|			,[ДатаИзменения])
				|Values
				|			('&ДатаОткр'
				|			,&КодТТ
				|			,&НомерККМ
				|			,&ЗавНомерККМ
				|			,&НомерСмены
				|			,'&ДатаСмены'
				|			,1
				|			,'&ДатаДок'
				|			,&ФВРучную
				|			,&ФОшибки
				//|			,'&Примечание'
				|			,&СуммаЧеки
				|			,&СуммаККМ
				|			,'&ДатаПоследнегоЧека'
				|			,GetDate())";
				
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаОткр",Формат(СменаКассы.Дата,"ДФ=yyyyMMdd; ДП=40010101"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&КодТТ",Формат(РабочееМесто.Фирма.КодТТ,"ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&НомерККМ",формат(СменаКассы.КассаНомер,"ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ЗавНомерККМ",формат(СменаКассы.КассаЗаводскойНомер,"ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&НомерСмены",формат(СменаКассы.НомерСмены,"ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаСмены",Формат(СменаКассы.Дата,"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаДок",Формат(Дата,"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ФВРучную",?(фРучноеЗакрытие,1,0));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ФОшибки",?(Совпало,0,1));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&СуммаЧеки",формат(СуммаПоЧекам,"ЧРД=.; ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&СуммаККМ",формат(СуммаККМ,"ЧРД=.; ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаПоследнегоЧека",Формат(ДатаДокумента,"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
				
				ОтказЗаписи = Ложь;
				ТекстОшибки = "";
				SQL.ВыполнитьЗапрос(Коннект, ТекстЗапроса, ОтказЗаписи, ТекстОшибки);
				Если ОтказЗаписи Тогда 
					ЗаписьЖурналаРегистрации("Запись закрытия смены", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),ТекстОшибки + "" + ТекстЗапроса);
				КонецЕсли;
				
				ТекстЗапроса = "
				|Select ИдСтроки from [Loyality_ext].[dbo].[КассовыеСмены]  
				|				where Дата = '&ДатаОткр'
				|				and ТТ = &КодТТ
				|				and НомерККМ = &НомерККМ
				|				and НомерСмены = &НомерСмены
				|				and ДатаОткрытия = '&ДатаСмены'";
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаОткр",Формат(СменаКассы.Дата,"ДФ=yyyyMMdd; ДП=40010101"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&КодТТ",Формат(РабочееМесто.Фирма.КодТТ,"ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&НомерККМ",формат(СменаКассы.КассаНомер,"ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&НомерСмены",формат(СменаКассы.НомерСмены,"ЧН=0; ЧГ=0"));
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаСмены",Формат(СменаКассы.Дата,"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
				
				ТаблицаРезультат = SQL.ВыполнитьЗапросВыборки(Коннект, ТекстЗапроса, ОтказЗаписи, ТекстОшибки);
				Если ОтказЗаписи Тогда 
					ЗаписьЖурналаРегистрации("Запись закрытия смены", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),ТекстОшибки + "" + ТекстЗапроса);
				КонецЕсли;
				Если ТаблицаРезультат.Количество() <> 0 Тогда 
					ИдЗаписи = Формат(ТаблицаРезультат[0].ИдСтроки,"ЧН=0; ЧГ=0");
				Иначе 
					ЗаписьЖурналаРегистрации("Запись закрытия смены", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),"не смог найти записть смены в кассовых показателях после записи" + "" + ТекстЗапроса);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			ТекстЗапроса1 = "
			|insert into [Loyality_ext].[dbo].[КассовыеСмены_Показатели]
			|	([идСмены]
			|	,[имяПоказателя]
			|	,[ЗначениеПоказателя])
			|Values
			|	(&ИдЗаписи
			|	,&ИмяПок
			|	,&ЗначениеПок)";
			
			Если Параметры <> Неопределено Тогда
				Для каждого эл из Параметры Цикл
					ТекстЗапроса = СтрЗаменить(ТекстЗапроса1,"&ИдЗаписи",ИдЗаписи);
					ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ИмяПок","'" + Эл.Ключ + "'");
					ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ЗначениеПок","'" + Эл.Значение + "'");
					Отказ = Ложь;
					ТекстОшибки = "";
					SQL.ВыполнитьЗапрос(Коннект, ТекстЗапроса, ОтказЗаписи, ТекстОшибки);
					Если ОтказЗаписи Тогда 
						ЗаписьЖурналаРегистрации("Запись закрытия смены", УровеньЖурналаРегистрации.Ошибка,,?(ЭтоНовый(),СменаКассы , Ссылка),ТекстОшибки + "" + ТекстЗапроса);
						Возврат;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция Смена(Док)
	
	ВыходныеПараметры = Новый Структура;
	
	НомерСмены = 0;
	НомерЧека = 0;
	ПолучитьНомерСменыНомерЧека(Док,НомерСмены,НомерЧека);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(ДенежныеОперации.Сумма), 0) КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.ДенежныеОперации КАК ДенежныеОперации
	               |ГДЕ
	               |	ДенежныеОперации.РабочееМесто = &РабочееМесто
	               |	И ДенежныеОперации.Период = &Период
	               |	И ДенежныеОперации.Сумма > 0
	               |	И ДенежныеОперации.ККМ = &ККМ";
	Запрос.УстановитьПараметр("РабочееМесто",Док.РабочееМесто);
	Запрос.УстановитьПараметр("Период",Док.Дата);
	Запрос.УстановитьПараметр("ККМ",Док.СменаКассы.касса);
	Выборка = Запрос.Выполнить().Выбрать();
	СуммаВнесения = 0;
	Пока Выборка.Следующий() Цикл
		СуммаВнесения = Выборка.Сумма;
	КонецЦикла;
	
	СуммаНал = 0;
	СуммаБНал = 0;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(ВЫБОР
	               |				КОГДА ПротоколРасчетовПротокол.ВариантОплаты = ЗНАЧЕНИЕ(Справочник.ВариантыОплаты.Наличные)
	               |					ТОГДА ПротоколРасчетовПротокол.СуммаФакт
	               |				ИНАЧЕ 0
	               |			КОНЕЦ), 0) КАК Нал,
	               |	ЕСТЬNULL(СУММА(ВЫБОР
	               |				КОГДА ПротоколРасчетовПротокол.ВариантОплаты = ЗНАЧЕНИЕ(Справочник.ВариантыОплаты.Карта)
	               |					ТОГДА ПротоколРасчетовПротокол.СуммаФакт
	               |				ИНАЧЕ 0
	               |			КОНЕЦ), 0) КАК БНал
	               |ИЗ
	               |	Документ.ПротоколРасчетов.Протокол КАК ПротоколРасчетовПротокол
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказДопИнф КАК ЗаказДопИнф
	               |		ПО ПротоколРасчетовПротокол.Ссылка.Заказ.Ссылка = ЗаказДопИнф.Заказ
	               |			И (ЗаказДопИнф.Статус = &Закрыт)
	               |ГДЕ
	               |	ПротоколРасчетовПротокол.Ссылка.Заказ.НомерСмены = &НомерСмены
				   //|	И ПротоколРасчетовПротокол.Ссылка.Заказ.РабочееМесто = &РабочееМесто
	               |	И ПротоколРасчетовПротокол.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	               |	И ПротоколРасчетовПротокол.Ссылка.Заказ ССЫЛКА Документ.Заказ
	               |	И ПротоколРасчетовПротокол.Ссылка.ККМ = &ККМ";
	Запрос.УстановитьПараметр("НомерСмены",номерСмены);
	Запрос.УстановитьПараметр("РабочееМесто",Док.РабочееМесто);
	Запрос.УстановитьПараметр("ККМ",Док.СменаКассы.касса);
	Запрос.УстановитьПараметр("Дата",Док.Дата);
	Запрос.УстановитьПараметр("Закрыт",Перечисления.СтатусыЗаказа.Закрыт);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаНал = СуммаНал + Выборка.нал;
		СуммаБНал = СуммаБНал + Выборка.БНал;
	КонецЦикла;
	СуммаПриход = СуммаНал + СуммаБНал;
	СуммаПриходНал = СуммаНал;
	СуммаПриходБНал = СуммаБНал;
	СуммаНал = Формат(СуммаНал,"ЧДЦ=2; ЧН=0,00; ЧГ=0");
	СуммаБНал = Формат(СуммаБНал,"ЧДЦ=2; ЧН=0,00; ЧГ=0");
	
	// Возврат
	СуммаНал = 0;
	СуммаБНал = 0;
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ССЫЛКА Документ.Заказ","ССЫЛКА Документ.Возврат");
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ЗаказДопИнф.Заказ","ВозвратДопИнф.Возврат");
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ЗаказДопИнф","ВозвратДопИнф");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаНал = СуммаНал + Выборка.нал;
		СуммаБНал = СуммаБНал + Выборка.БНал;
	КонецЦикла;
	СуммаВозвратПрихода = СуммаНал + СуммаБНал;
	СуммаВозвратПриходаНал = СуммаНал;
	СуммаВозвратПриходаБНал = СуммаБНал;
	СуммаНал = Формат(СуммаНал,"ЧДЦ=2; ЧН=0,00; ЧГ=0");
	СуммаБНал = Формат(СуммаБНал,"ЧДЦ=2; ЧН=0,00; ЧГ=0");
	
	// Выручка
	СуммаВыручка = 0;
	СуммаВыручка = СуммаПриход - СуммаВозвратПрихода;
	СуммаВыручки = СуммаВыручка;
	СуммаВыручка = Формат(СуммаВыручка,"ЧДЦ=2; ЧН=0,00; ЧГ=0");
	
	КоличествоНепереданныхФД = 0;//DRV.Count;
	ДатаПервогоНепереданногоФД = Дата(1,1,1);
	
	
	ДатаСмены = Док.Дата;
	
	ТипПослЧека = 0;//DRV.LastCheckType;
	НомерДокумента = 0;//DRV.НомерДокумента;
	
	//ВыходныеПараметры.Очистить();
	ВыходныеПараметры.Вставить("НомерСмены",НомерСмены);
	ВыходныеПараметры.Вставить("НомерЧека",НомерЧека);
	//ВыходныеПараметры.Добавить(Параметры);
	
	//Параметры = новый Структура;
	ВыходныеПараметры.Вставить("КоличествоНепереданныхФД"   , КоличествоНепереданныхФД); 
	ВыходныеПараметры.Вставить("НомерПервогоНепереданногоФД", Неопределено); 
	ВыходныеПараметры.Вставить("ДатаПервогоНепереданногоФД ", ДатаПервогоНепереданногоФД); 
	ВыходныеПараметры.Вставить("ДатаСменыККТ",ДатаСмены);
	ВыходныеПараметры.Вставить("НомерСменыККТ",НомерСмены);
	ВыходныеПараметры.Вставить("КоличествоЧеков",номерЧека);
	ВыходныеПараметры.Вставить("КоличествоФД",НомерДокумента);
	//Параметры.Вставить("ПревышеноВремяОжиданияОтветаОФД");
	//Параметры.Вставить("НеобходимаСтрочнаяЗаменаФН");
	//Параметры.Вставить("ПамятьФНПереполнена");
	//Параметры.Вставить("РесурсФНИсчерпан");
	
	ВыходныеПараметры.Вставить("НомерДокумента",НомерДокумента);
//1 – чек прихода;
//2 – чек возврата прихода;
//4 – чек расхода;
//5 – чек возврата расхода;
//7 - чек коррекции прихода;
//8 – чек коррекции возврата прихода;
//9 – чек корреции расхода;
//10 – чек коррекции возврата расхода
	ВыходныеПараметры.Вставить("ТипЧека",ТипПослЧека);
	ВыходныеПараметры.Вставить("ДатаДокумента",ДатаСмены);
	ВыходныеПараметры.Вставить("ФискальныйПризнак",Ложь);//DRV.ФискальныйПризнак);
	
	// запрос сумм по регистрам
	// суммы регистраций
	ВыходныеПараметры.Вставить("СуммаПриход",СуммаПриход);
	ВыходныеПараметры.Вставить("СуммаВозвратПрихода",СуммаВозвратПрихода);
	
	ВыходныеПараметры.Вставить("СуммаПриходНал",СуммаПриходНал);
	ВыходныеПараметры.Вставить("СуммаВозвратПриходаНал",СуммаВозвратПриходаНал);
	ВыходныеПараметры.Вставить("СуммаПриходБНал",СуммаПриходБНал);
	
	ВыходныеПараметры.Вставить("СуммаВозвратПриходаБНал",СуммаВозвратПриходаБНал);
	
	ВыходныеПараметры.Вставить("СуммаВыручка",СуммаВыручки);
	
	СменныйИтогПриход = 0;
	ВыходныеПараметры.Вставить("СменныйИтогПриход",СменныйИтогПриход);
	
	СменныйИтогВозвратПрихода = 0;
	ВыходныеПараметры.Вставить("СменныйИтогВозвратПрихода",СменныйИтогВозвратПрихода);
	
	
	//ВыходныеПараметры.Добавить(СтрукПослФД);
	Возврат ВыходныеПараметры;
	
КонецФункции
Процедура ПолучитьНомерСменыНомерЧека(Док,НомерСмены,НомерЧека)
	СменаККМ = Док.СменаКассы;
	НомерСмены = Число(УбратьНеЦифры(СменаККМ.Номерсмены));
	
	НомерЧека = 0;
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НомерЧекаНФР.НомерЧека КАК НомерЧека
	               |ИЗ
	               |	РегистрСведений.НомерЧекаНФР КАК НомерЧекаНФР
	               |ГДЕ
	               |	НомерЧекаНФР.Дата = &Дата
	               |	И НомерЧекаНФР.РабочееМесто = &РабочееМесто
	               |	И НомерЧекаНФР.НомерСменыККМ = &НомерСменыККМ";
	Запрос.УстановитьПараметр("Дата",началоДня(Док.Дата));
	Запрос.УстановитьПараметр("РабочееМесто",Док.РабочееМесто);
	Запрос.УстановитьПараметр("НомерСменыККМ",Число(НомерСмены));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерЧека = Выборка.НомерЧека;
	КонецЦикла;
	
КонецПроцедуры
Функция УбратьНеЦифры(Знач ВхСтрока)
	Если СокрЛП(ВхСтрока) = "" Тогда
		Возврат 0;
	КонецЕсли;
	ВхСтрока = СокрЛП(ВхСтрока);
	ВыхЧисло = "";
	Для к = 1 по СтрДлина(ВхСтрока) Цикл
		Символ = Сред(ВхСтрока,к,1);
		Если найти("0123456789",Символ) <> 0 Тогда
			ВыхЧисло = ВыхЧисло + (Символ);
		КонецЕсли;
	КонецЦикла;
	Возврат ВыхЧисло;
КонецФункции

#КонецЕсли