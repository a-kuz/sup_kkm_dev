// Переменные для оформления строк
Перем мЖелтыйЦвет;

Процедура ТоварыНоменклатураПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.Товары.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.ЕдиницаИзмерения = ТекущаяСтрока.Номенклатура.БазоваяЕдиницаИзмерения;
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ТекущаяСтрока.Номенклатура);
	Отбор.Вставить("ТипЦен", Справочники.ТипыЦен.Розничная);
	ТекущаяСтрока.Цена = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(Дата, Отбор).Цена;
	
	ТекущаяСтрока.Количество = 1;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена;
КонецПроцедуры

Процедура ТоварыЦенаПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.Товары.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока.Количество;
КонецПроцедуры

Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.Товары.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока.Количество;
	
КонецПроцедуры

Процедура ТоварыПриАктивизацииСтроки(Элемент)
	Строка = ЭлементыФормы.Товары.ТекущиеДанные;
	
	Если Строка <> Неопределено Тогда
		ЭлементыФормы.Специфики.ОтборСтрок.ИдентификаторТовара.Значение 		= Строка.Идентификатор;
		ЭлементыФормы.Специфики.ОтборСтрок.ИдентификаторТовара.Использование 	= Истина;
	КонецЕсли;
КонецПроцедуры

Процедура СпецификиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// выделим специфики по текущем товару
	ТекДанныеТовары = ЭлементыФормы.Товары.ТекущиеДанные;
	Если НЕ ТекДанныеТовары = Неопределено И ТекДанныеТовары.Идентификатор = ДанныеСтроки.ИдентификаторТовара Тогда
		ОформлениеСтроки.ЦветФона = мЖелтыйЦвет;				
	КонецЕсли;		
КонецПроцедуры

Процедура ОбновлениеОтображения()
	СтраницаПанели = ЭлементыФормы.Панель.Страницы;
	СтраницаПанели.Товары.Заголовок = "Товары (" + Товары.Количество() + " поз.)";
	СтраницаПанели.Специфики.Заголовок = "Специфики (" + Специфики.Количество() + " поз.)";
	СтраницаПанели.ДеревоТоваров.Заголовок = "Товары (" + ДеревоТоваров.Строки.Количество() + " поз.)";
КонецПроцедуры

Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = 2 Тогда
		ЭлементыФормы.Специфики.ОбновитьСтроки();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	
	Пометка = ВосстановитьЗначение("ДеревоПометка");
	Если Не Пометка = Неопределено Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Дерево.Пометка = Пометка;
	КонецЕсли;
	
	ЗаполнитьДеревоТоваров();
	УстановитьВидимостьКолонок();
	УправлениеДоступностью();
		
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение("ДеревоПометка", ЭлементыФормы.ДействияФормы.Кнопки.Дерево.Пометка);
	
КонецПроцедуры

Процедура ЗаполнитьДеревоТоваров()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.Количество,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.СуммаБезСкидки,
	|	Товары.СуммаБонусов,
	|	Товары.Контрагент,
	|	Товары.ВариантОплаты,
	|	Товары.Идентификатор,
	|	Товары.ККМ,
	|	Товары.КассоваяСмена
	|ПОМЕСТИТЬ Таб
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Номенклатура КАК Номенклатура,
	|	Таб.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Таб.Количество КАК Количество,
	|	Таб.Цена КАК Цена,
	|	Таб.Сумма КАК Сумма,
	|	Таб.СуммаБезСкидки КАК СуммаБезСкидки,
	|	Таб.СуммаБонусов КАК СуммаБонусов,
	|	Таб.Контрагент КАК Контрагент,
	|	Таб.ВариантОплаты КАК ВариантОплаты,
	|	Таб.Идентификатор КАК Идентификатор,
	|	Таб.ККМ,
	|	Таб.КассоваяСмена
	|ИЗ
	|	Таб КАК Таб
	|ИТОГИ
	|	СУММА(Количество),
	|	МАКСИМУМ(Цена),
	|	СУММА(Сумма),
	|	СУММА(СуммаБезСкидки),
	|	СУММА(СуммаБонусов)
	|ПО
	|	Идентификатор";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	Выгрузка = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомерСтроки = 1;
	Для Каждого ИтоговаяСтрока Из Выгрузка.Строки Цикл
		СтрокаТЧ = ДеревоТоваров.Строки.Добавить();
		СтрокаТЧ.НомерСтроки = НомерСтроки;
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ИтоговаяСтрока);
		Если ИтоговаяСтрока.Строки.Количество() > 0 Тогда
			СтрокаТЧ.Номенклатура 		= ИтоговаяСтрока.Строки[0].Номенклатура;
			СтрокаТЧ.ЕдиницаИзмерения 	= ИтоговаяСтрока.Строки[0].ЕдиницаИзмерения;
			СтрокаТЧ.Контрагент			= ИтоговаяСтрока.Строки[0].Контрагент;
		КонецЕсли;
		Если ИтоговаяСтрока.Строки.Количество() > 1 Тогда
			Для Каждого Стр Из ИтоговаяСтрока.Строки Цикл
				НоваяСтрока = СтрокаТЧ.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);			
			КонецЦикла;
		КонецЕсли;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

// Управляет доступностью формы
//
Процедура УправлениеДоступностью()
	
	Если глВерсия < 2 Тогда
		ЭлементыФормы.Панель.Страницы.Специфики.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.СуммаБонусов.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.СуммаБонусов.Доступность = Ложь;
	КонецЕсли;
	
	Эл = ЭлементыФормы.ДеревоТоваров;
	Для Каждого Колонка Из Эл.Колонки Цикл
		Если Колонка.ЭлементУправления = Неопределено Тогда
			Продолжить;
		КонецЕсли;								
		Колонка.ЭлементУправления.ТолькоПросмотр 		= Истина;
		Колонка.ЭлементУправления.РедактированиеТекста 	= Ложь;			
	КонецЦикла;
	
	Если ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ДеревоТоваров Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Дерево.Пометка = Истина;
	КонецЕсли;
	УстановитьВидимостьЗакладок();		
	
КонецПроцедуры //УправлениеДоступностью()

Процедура УстановитьВидимостьКолонок()
	
	Если ТипРасхода = Перечисления.ТипыРасхода.Списание Тогда
		
		ТоварыКолонки = ЭлементыФормы.Товары.Колонки;
		ТоварыКолонки.Цена.Видимость 			= Ложь;
		ТоварыКолонки.Сумма.Видимость 			= Ложь;
		ТоварыКолонки.СуммаБезСкидки.Видимость 	= Ложь;
		ТоварыКолонки.СуммаБонусов.Видимость 	= Ложь;
		ТоварыКолонки.Контрагент.Видимость 		= Ложь;
		ТоварыКолонки.ВариантОплаты.Видимость 	= Ложь;
		
		ТоварыКолонки = ЭлементыФормы.ДеревоТоваров.Колонки;
		ТоварыКолонки.Цена.Видимость 			= Ложь;
		ТоварыКолонки.Сумма.Видимость 			= Ложь;
		ТоварыКолонки.СуммаБезСкидки.Видимость 	= Ложь;
		ТоварыКолонки.СуммаБонусов.Видимость 	= Ложь;
		ТоварыКолонки.Контрагент.Видимость 		= Ложь;
		ТоварыКолонки.ВариантОплаты.Видимость 	= Ложь;
		
		ЭлементыФормы.ПанельОсновные.Страницы.Дополнительно.Видимость = Ложь;
		ЭлементыФормы.ПанельОсновные.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		
	Иначе
		
		ТоварыКолонки = ЭлементыФормы.Товары.Колонки;
		ТоварыКолонки.Цена.Видимость 			= Истина;
		ТоварыКолонки.Сумма.Видимость 			= Истина;
		ТоварыКолонки.СуммаБезСкидки.Видимость 	= Истина;
		ТоварыКолонки.СуммаБонусов.Видимость 	= Истина;
		ТоварыКолонки.Контрагент.Видимость 		= Истина;
		ТоварыКолонки.ВариантОплаты.Видимость 	= Истина;
		
		ТоварыКолонки = ЭлементыФормы.ДеревоТоваров.Колонки;
		ТоварыКолонки.Цена.Видимость 			= Истина;
		ТоварыКолонки.Сумма.Видимость 			= Истина;
		ТоварыКолонки.СуммаБезСкидки.Видимость 	= Истина;
		ТоварыКолонки.СуммаБонусов.Видимость 	= Истина;
		ТоварыКолонки.Контрагент.Видимость 		= Истина;
		ТоварыКолонки.ВариантОплаты.Видимость 	= Истина;
		
		ЭлементыФормы.ПанельОсновные.Страницы.Дополнительно.Видимость = Истина;
		ЭлементыФормы.ПанельОсновные.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыДерево(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	УстановитьВидимостьЗакладок();
	Если Кнопка.Пометка Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница 					= ЭлементыФормы.Панель.Страницы.ДеревоТоваров;
	Иначе
		ЭлементыФормы.Панель.ТекущаяСтраница 					= ЭлементыФормы.Панель.Страницы.Товары;		
	КонецЕсли;
	
КонецПроцедуры

// Процедура управляет видимостью закладок панели
Процедура УстановитьВидимостьЗакладок()
	
	Кнопка = ЭлементыФормы.ДействияФормы.Кнопки.Дерево;
	Если Кнопка.Пометка Тогда
		ЭлементыФормы.Панель.Страницы.ДеревоТоваров.Видимость 	= Истина;
		ЭлементыФормы.Панель.Страницы.Товары.Видимость 			= Ложь;
	Иначе
		ЭлементыФормы.Панель.Страницы.ДеревоТоваров.Видимость 	= Ложь;
		ЭлементыФормы.Панель.Страницы.Товары.Видимость 			= Истина;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ТипРасходаПриИзменении(Элемент)
	УстановитьВидимостьКолонок();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Модифицированность Тогда
		РучноеИзменение = Истина;
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события "ПриНачалеРедактирования"
//
Процедура СпецификиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрТовары = ЭлементыФормы.Товары.ТекущиеДанные;
	Если СтрТовары = Неопределено Тогда
		Отказ = Истина;
		Предупреждение("Для ввода специфик необходимо указать товар.");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрТовары.Номенклатура) Тогда
		Отказ = Истина;
		Предупреждение("Для ввода специфик необходимо указать товар.");
		Возврат;
	КонецЕсли;
	
	СтрокаТЧ = ЭлементыФормы.Специфики.ТекущиеДанные;
	Если НоваяСтрока Тогда
		СтрокаТЧ.ИдентификаторТовара = ЭлементыФормы.Товары.ТекущиеДанные.Идентификатор;
	КонецЕсли;
	
	Если Копирование Тогда
		СтрокаТЧ.ИдентификаторТовара = 0;
	КонецЕсли;	
	
	
КонецПроцедуры


мЖелтыйЦвет = Новый Цвет(255,255,153);
