
// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	
КонецПроцедуры

// Процедура - обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		
		// Заполнить реквизиты значениями по умолчанию.
		
		УстановитьНомерДокумента(ЭтотОбъект);

		Автор	= ПараметрыСеанса.ТекущийПользователь;
		
	КонецЕсли;
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	УправлениеВидимостью();
	
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписи формы.
//
Процедура ПослеЗаписи()
	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события ПриИзменении поля ввода Дата.
//
Процедура ДатаПриИзменении(Элемент)
	
	ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода ВидПриказа
//
Процедура ВидПриказаПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Сотрудник
//
Процедура СотрудникПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Если ЗначениеЗаполнено(Сотрудник.ГрафикРаботыСотрудника) Тогда
			ГрафикРаботы = Сотрудник.ГрафикРаботыСотрудника;
		КонецЕсли;
		Если ЗначениеЗаполнено(Сотрудник.Подразделение) Тогда
			Подразделение = Сотрудник.Подразделение;
		КонецЕсли;
		Если ЗначениеЗаполнено(Сотрудник.Должность) Тогда
			Должность = Сотрудник.Должность;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Фирма.
//
Процедура ФирмаПриИзменении(Элемент)
	
	УстановитьНомерДокумента(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура управляет видимостью элементов формы
//
Процедура УправлениеВидимостью()

	ЭтоПриемРаРаботу			= ВидПриказа = Перечисления.УР_ВидыОперацийПриказОКадровомИзменении.ПриемНаРаботу;
	ЭтоКадровоеПеремещение		= ВидПриказа = Перечисления.УР_ВидыОперацийПриказОКадровомИзменении.КадровоеПеремещение;
	ЭтоИзменениеУсловийТруда	= ВидПриказа = Перечисления.УР_ВидыОперацийПриказОКадровомИзменении.ИзменениеУсловийТруда;
	ЭтоУвольнение				= ВидПриказа = Перечисления.УР_ВидыОперацийПриказОКадровомИзменении.Увольнение;

	ЭлементыФормы.ДолжностьСтарая.Видимость							= ЭтоКадровоеПеремещение;
	ЭлементыФормы.НадписьДолжностьСтарая.Видимость					= ЭтоКадровоеПеремещение;
	
	ЭлементыФормы.НадписьГрафикРаботы.Видимость						= ЭтоПриемРаРаботу ИЛИ ЭтоКадровоеПеремещение ИЛИ ЭтоИзменениеУсловийТруда;
	ЭлементыФормы.ГрафикРаботы.Видимость							= ЭтоПриемРаРаботу ИЛИ ЭтоКадровоеПеремещение ИЛИ ЭтоИзменениеУсловийТруда;
	
	ЭлементыФормы.НадписьКоличествоСтавок.Видимость					= ЭтоПриемРаРаботу ИЛИ ЭтоКадровоеПеремещение ИЛИ ЭтоИзменениеУсловийТруда;
	ЭлементыФормы.КоличествоСтавок.Видимость						= ЭтоПриемРаРаботу ИЛИ ЭтоКадровоеПеремещение ИЛИ ЭтоИзменениеУсловийТруда;
	
	ЭлементыФормы.НадписьПодразделение.Доступность	= НЕ ЭтоУвольнение;
	ЭлементыФормы.Подразделение.Доступность			= НЕ ЭтоУвольнение;
	
КонецПроцедуры

