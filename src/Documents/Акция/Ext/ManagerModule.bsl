// Возвращает действующие на момент времени акции
//
// Параметры:
//	Дата  - Дата - 	дата и время, на которое требуется получить акции.
//					Если параметр не указан, берется текущая дата
//
// Возвращаемое значение:
//	Массив   - массив ссылок на документы "Акция"
//
Функция ДействующиеАкции(Дата = Неопределено) Экспорт
	
	Дата = ?(Дата = Неопределено, ТекущаяДата(), Дата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Акция.Ссылка Акция
	|ИЗ
	|	Документ.Акция КАК Акция
	|ГДЕ
	|	Акция.ДатаС <= &Дата
	|	И (Акция.ДатаПо >= &Дата
	|			ИЛИ Акция.ДатаПо = ДАТАВРЕМЯ(1, 1, 1))
	|	И Акция.Проведен";
	Запрос.УстановитьПараметр("Дата",Дата);
	ТЗ = Запрос.Выполнить().Выгрузить();
	М = Новый Массив;
	Для каждого Т Из ТЗ Цикл
		Расписание = ЗначениеИзСтрокиВнутр(Т.Акция.СериализованноеРасписание);
		Если Не Расписание.ТребуетсяВыполнение(Дата) Тогда
			
			М.Добавить(Т);		
			
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого Т Из М Цикл
		ТЗ.Удалить(Т);
	КонецЦикла; 
	Возврат ТЗ.ВыгрузитьКолонку("Акция");
КонецФункции

//0ли Клиент тогда
Процедура ОбновитьЦветаАкций(ЦветаАкционныхТоваров) Экспорт
	ДействующиеАкции = Документы.Акция.ДействующиеАкции();
	Для Каждого Акция Из ДействующиеАкции Цикл
		Если Акция.ТипАкции = Справочники.ТипыАкций.НаборТоваров Тогда
			Для каждого Т Из Акция.ЦелевыеТовары Цикл
				
				ЦветаАкционныхТоваров.Вставить(Т.Товар, Акция.ЦветЦелевыхТоваров.Получить());
				
			КонецЦикла; 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
//00!!)0!))ggggf0&$!?ли