// Виды дней
Перем ВидДняРабочий;
Перем ВидДняПраздник;
Перем ВидДняПредпраздничный;

Перем ИсходнаяДата;

Функция ПроверитьПравильностьВыбораДаты()
	
	ВыбраннаяДата = ИсходнаяДата;
	ВыбраннаяДатаПереноса = КалендарнаяДата;
	
	Если ВыбраннаяДата = ВыбраннаяДатаПереноса Тогда
		Предупреждение("Выбраны одинаковые даты!");
		Возврат Ложь;
	КонецЕсли;
	
	ГодВыбраннойДаты = Год(ВыбраннаяДата);
	
	Если (ГодВыбраннойДаты <> Год(ВыбраннаяДатаПереноса)) Тогда
		Предупреждение("Выбираемая дата должна быть из "+Строка(ГодВыбраннойДаты)+" года");
		Возврат Ложь;
	КонецЕсли;
	
	ДеньНеделиВыбраннойДаты = ДеньНедели(ВыбраннаяДата);
	ДеньНеделиВыбраннойДатыПереноса = ДеньНедели(ВыбраннаяДатаПереноса);
	ВыбраннаяДатаЭтоВыходной = (ДеньНеделиВыбраннойДаты = 6) Или (ДеньНеделиВыбраннойДаты = 7);
	ВыбраннаяДатаПереносаЭтоВыходной = (ДеньНеделиВыбраннойДатыПереноса = 6) ИЛИ (ДеньНеделиВыбраннойДатыПереноса = 7); 
	
	СтрокаВыбраннойДаты = ТаблицаРегистра.Найти(ВыбраннаяДата, "ДатаКалендаря");
	Если СтрокаВыбраннойДаты <> Неопределено Тогда
		ВыбраннаяДатаЭтоПраздник = 	СтрокаВыбраннойДаты.ВидДня = ВидДняПраздник;
	Иначе
		ВыбраннаяДатаЭтоПраздник = Ложь;
	КонецЕсли;
	
	СтрокаВыбраннойДатыПереноса = ТаблицаРегистра.Найти(ВыбраннаяДатаПереноса, "ДатаКалендаря");
	Если СтрокаВыбраннойДатыПереноса <> Неопределено Тогда
		ВыбраннаяДатаПереносаЭтоПраздник = СтрокаВыбраннойДатыПереноса.ВидДня = ВидДняПраздник;
	Иначе
		ВыбраннаяДатаПереносаЭтоПраздник = Ложь;
	КонецЕсли;
	
	НачальнаяЧастьСтрокиПредупреждения = формат(ВыбраннаяДата, "ДФ = ""д ММММ, дддд""")+" на "+
			формат(ВыбраннаяДатаПереноса, "ДФ = ""д ММММ, дддд""")+".";
			
	Если (ВыбраннаяДатаЭтоВыходной И ВыбраннаяДатаПереносаЭтоВыходной) 

		ИЛИ (НЕ ВыбраннаяДатаЭтоВыходной И НЕ ВыбраннаяДатаПереносаЭтоВыходной
			И НЕ ВыбраннаяДатаПереносаЭтоПраздник) Тогда
		
		Предупреждение("Вы выполняете перенос "+НачальнаяЧастьСтрокиПредупреждения + " При переносе "+
			?(ВыбраннаяДатаЭтоВыходной, "праздничного дня вы можете выбрать только рабочий день.",
			"рабочего дня вы можете выбрать только праздничный день."));
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
КонецФункции

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если ПроверитьПравильностьВыбораДаты() Тогда
		Закрыть(КалендарнаяДата);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовокФормы(ТекстПояснения) Экспорт
	
	ЭлементыФормы.Пояснение.Заголовок = ТекстПояснения;
	
КонецПроцедуры

Процедура КалендарнаяДатаВыбор(Элемент, ВыбраннаяДата)
	
	Если ПроверитьПравильностьВыбораДаты() Тогда
		Закрыть(КалендарнаяДата);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ИсходнаяДата = КалендарнаяДата;
	
	ВидДняРабочий = Перечисления.УР_ВидыДнейПроизводственногоКалендаря.Рабочий;
	ВидДняПраздник = Перечисления.УР_ВидыДнейПроизводственногоКалендаря.Праздник;
	ВидДняПредпраздничный = Перечисления.УР_ВидыДнейПроизводственногоКалендаря.Предпраздничный;

КонецПроцедуры

