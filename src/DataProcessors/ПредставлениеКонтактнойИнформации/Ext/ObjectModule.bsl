
#Если Клиент Тогда

// Процедура по заданным значениям реквизитов перезаполняет
// данными табличную часть
//
// Параметры
//  НЕТ
// Возвращаемые значения
//  НЕТ
Процедура ОбновитьТаблицу() Экспорт

	КонтактнаяИнформация.Очистить();
	Если НЕ ЗначениеЗаполнено(ОбъектКонтактнойИнформации) Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос();

	Запрос.УстановитьПараметр("Объект", ОбъектКонтактнойИнформации);

	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтактнаяИнформация.Ссылка,
	               |	КонтактнаяИнформация.Объект,
	               |	КонтактнаяИнформация.ЗначениеПоУмолчанию,
	               |	КонтактнаяИнформация.Тип,
	               |	КонтактнаяИнформация.Представление,
	               |	КонтактнаяИнформация.Комментарий
	               |ИЗ
	               |	Справочник.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &Объект";

	ТаблицаЗапроса = Запрос.Выполнить();
	ТаблицаРезультатов = ТаблицаЗапроса.Выгрузить();
	ТаблицаРезультатов.Колонки.Добавить("Приоритет");
	Для каждого ТекущаяСтрокаТЗ Из ТаблицаРезультатов Цикл
		Если ПустаяСтрока(ТекущаяСтрокаТЗ.Представление) ИЛИ ПустаяСтрока(ТекущаяСтрокаТЗ.Комментарий) Тогда
			Скобка1 = "";
			Скобка2 = "";
		Иначе
			Скобка1 = " (";
			Скобка2 = ")";
		КонецЕсли;	
		Если ПустаяСтрока(Строка(ТекущаяСтрокаТЗ.Тип)) Тогда
			ТекущаяСтрокаТЗ.Приоритет = 6;
		Иначе
			ТекущаяСтрокаТЗ.Приоритет = Перечисления.ТипыКонтактнойИнформации.Индекс(ТекущаяСтрокаТЗ.Тип);
		КонецЕсли;
		ТекущаяСтрокаТЗ.Представление = СокрЛП(ТекущаяСтрокаТЗ.Представление)+Скобка1+СтрЗаменить(СокрЛП(ТекущаяСтрокаТЗ.Комментарий), Символы.ПС, " ")+Скобка2;
	КонецЦикла;
	ТаблицаРезультатов.Сортировать("Приоритет ВОЗР");
	
	КонтактнаяИнформация.Загрузить(ТаблицаРезультатов);
	
КонецПроцедуры

// Процедура обрабатывает действие начала редактирования или ввода новой
// записи контактной информации
//
// Параметры
//  ВыбОбъект - объект уже существующей записи в регистре контактной информации
//  ВыбТип - тип уже существующей или новой записи в регистре контактной информации
//  ВыбВид - вид уже существующей или новой записи в регистре контактной информации
//  ТекущийОбъект - Объект новой записи в регистре контактной информации
//  ФормаВладелец - форма из которой произошел вызов процедуры
// Возвращаемые значения
//  НЕТ
Процедура РедактироватьЗапись(Ссылка, ТекущийОбъект, ФормаВладелец, ОбъектКопирование=Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		// Выбрали запись, которой еще нет

		МенеджерЗаписи = Справочники.КонтактнаяИнформация.СоздатьЭлемент();
		МенеджерЗаписи.Объект = ТекущийОбъект;
		
		Если ЗначениеЗаполнено(ОбъектКопирование) Тогда
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ОбъектКопирование,,"Владелец,Родитель,Код,ПометкаУдаления");
		КонецЕсли; 
		
		МенеджерЗаписи.ЗначениеПоУмолчанию = Ложь;
		
	Иначе
		
		МенеджерЗаписи = Ссылка;
		
	КонецЕсли; 

	Если Ссылка = Неопределено Тогда
		ФормаЗаписи = МенеджерЗаписи.ПолучитьФорму(,ФормаВладелец,);
	Иначе
		ФормаЗаписи = МенеджерЗаписи.ПолучитьФорму(ПолучитьИмяФормыПоТипу(Ссылка.Тип),ФормаВладелец,);
	КонецЕсли; 
	ФормаЗаписи.ВладелецФормы = ФормаВладелец;
	ФормаЗаписи.ЗакрыватьПриВыборе = Ложь;
	ФормаЗаписи.Открыть();

КонецПроцедуры

// Процедура обрабатывает действие удаления
// записи контактной информации
//
// Параметры
//  ВыбОбъект - объект уже существующей записи в регистре контактной информации
//  ВыбТип - тип уже существующей или новой записи в регистре контактной информации
//  ВыбВид - вид уже существующей или новой записи в регистре контактной информации
// Возвращаемые значения
//  НЕТ
Процедура УдалитьЗапись(Ссылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		// Выбрали запись, которой еще нет в регистре
		Возврат;
	КонецЕсли; 
	
	ОтветНаВопрос = Вопрос("Удалить запись?", РежимДиалогаВопрос.ДаНет);
	Если ОтветНаВопрос  = КодВозвратаДиалога.Да Тогда
		Ссылка.ПолучитьОбъект().Удалить();
	КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьИмяФормыПоТипу(Тип)

	Если Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат "ФормаЗаписиАдреса";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		Возврат "ФормаЗаписиАдресаЭП";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
		Возврат "ФормаЗаписиВебСтраницы";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		Возврат "ФормаЗаписиТелефона";
	Иначе
		Возврат "ФормаЗаписи";
	КонецЕсли;

КонецФункции

#КонецЕсли
