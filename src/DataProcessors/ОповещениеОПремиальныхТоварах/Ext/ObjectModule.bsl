
#Если Клиент Тогда

Перем КолвоКнопок Экспорт;
Перем ВсегоСтраниц Экспорт;
Перем ТекСтраница Экспорт;
Перем ФормаВыбора Экспорт;
Перем КопияТаблицыВыбора;

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
КонецПроцедуры


// Первоначальное заполнение таблицы выбора
//
Процедура ЗаполнитьТаблицуВыбора() Экспорт
	
	ТаблицаВыбора.Колонки.Добавить("Значение");
	ТаблицаВыбора.Колонки.Добавить("НаименованиеДляКнопки");
	ТаблицаВыбора.Колонки.Добавить("ГоризонтальноеПоложение");
	ТаблицаВыбора.Колонки.Добавить("Выбран",Новый ОписаниеТипов("Булево"));
	ТаблицаВыбора.Колонки.Добавить("ОтказКлиента", Новый ОписаниеТипов("Булево"));

	Если МножественныйПодбор Тогда
		ТаблицаВыбора.Колонки.Добавить("Пиктограмма",,"",2);
	КонецЕсли;
	
	ТипМассива = ТипЗнч(МассивВыбора);
	Для каждого ТекЗнач Из МассивВыбора Цикл
		ТекСтрока = ТаблицаВыбора.Добавить();
		ТекСтрока.Значение					= ?(ТипМассива = Тип("СписокЗначений"), ТекЗнач.Значение, ТекЗнач);
		ТекСтрока.НаименованиеДляКнопки		= ТекЗнач;//?(ТипЗнч(ТекЗнач)=Тип("СправочникСсылка.Пейджеры"),""+ТекЗнач+"/"+ТекЗнач.НаборПейджеров,ТекЗнач);
		ТекСтрока.ГоризонтальноеПоложение	= ГоризонтальноеПоложение.Лево;
		ТекСтрока.Выбран = 1;
	КонецЦикла;
	
	ТипЗначенийВыбора = ТипЗнч( ТаблицаВыбора[ТаблицаВыбора.Количество()-1].Значение );
	
	НазначитьЗаголовки("ПОДАРКИ", "Добавить следующие товары по акции?");
		
	ЗаполнитьТаблицуСОднойКолонкой();
	ОпределитьКолвоСтраниц();
	
	КопияТаблицыВыбора = ТаблицаВыбора.Скопировать();
	
КонецПроцедуры

Процедура НазначитьЗаголовки( ЗаголовокФормыИмя = "Выбор значения", ЗаголовокВыбораИмя = "Доступные значения")
	
	ЗаголовокФормы	= ?(ЗначениеЗаполнено(ЗаголовокФормы), ЗаголовокФормы, ЗаголовокФормыИмя);
	ЗаголовокВыбора = ?(ЗначениеЗаполнено(ЗаголовокВыбора), ЗаголовокВыбора, ЗаголовокВыбораИмя);
	
КонецПроцедуры	

Процедура ЗаполнитьТаблицуСОднойКолонкой()
	
	ТаблицаВыбора.Колонки.Добавить("Наименование");
	
	Для каждого ТекСтрока Из ТаблицаВыбора Цикл
		ТекЗнач = ТекСтрока.Значение;
		Если ЗначениеЗаполнено(ТекЗнач) Тогда
			ТекСтрока.Наименование = Строка(ТекЗнач);
		Иначе
			ТекСтрока.Наименование = "--- Пропустить ---";
			ТекСтрока.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		КонецЕсли; 

	КонецЦикла;
	
КонецПроцедуры

Процедура ОпределитьКолвоСтраниц()
	
	ВсегоСтраниц = 1;
	
КонецПроцедуры
 
// Выводит текущую страницу кнопок
//
Процедура ВывестиТекущуюСтраницу() Экспорт
	
	ИндексЗначенияПервойКнопки = (ТекСтраница-1) * КолвоКнопок;
	
	Для НомерКнопки=1 По КолвоКнопок Цикл
		
		Кнопка = ФормаВыбора.ЭлементыФормы["Кнопка"+НомерКнопки];
		КнопкаОтказ = ФормаВыбора.ЭлементыФормы["КнопкаОтказ"+НомерКнопки];
		
		ТекИндекс = ИндексЗначенияПервойКнопки + НомерКнопки-1;
		Если ТекИндекс <= ТаблицаВыбора.Количество()-1 Тогда
			ТекСтрока = ТаблицаВыбора[ТекИндекс];
			Кнопка.Видимость = Истина;
			КнопкаОтказ.Видимость = Истина;
			Кнопка.Заголовок = ТекСтрока.НаименованиеДляКнопки;
			Если МножественныйПодбор Тогда
				Если ТекСтрока.Выбран Тогда 
					Кнопка.Картинка = БиблиотекаКартинок.Галка;
				ИначеЕсли ТекСтраница.ОтказКлиента Тогда
					Кнопка.Картинка = БиблиотекаКартинок.Удалить;
				Иначе
					Кнопка.Картинка = Новый Картинка;
				КонецЕсли;
			КонецЕсли;
			Кнопка.ГоризонтальноеПоложение = ТекСтрока.ГоризонтальноеПоложение;
		Иначе
			Кнопка.Видимость = Ложь;
			КнопкаОтказ.Видимость = Ложь;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

// Обработка выбора значения в форме
//
Процедура ОбработкаВыбораЗначения(ЗначениеВыбора) Экспорт
	
		ТаблицаВыбора.Найти(ЗначениеВыбора).Выбран = Не ТаблицаВыбора.Найти(ЗначениеВыбора).Выбран;
		Если ТаблицаВыбора.Найти(ЗначениеВыбора).Выбран Тогда
			ТаблицаВыбора.Найти(ЗначениеВыбора).ОтказКлиента = Ложь;
		КонецЕсли;
	
КонецПроцедуры

// Функция выполняет запрос при автоподборе текста  и при окончании ввода текста в поле ввода.
//
// Параметры
//  Текст - Строка, текст введенный в поле ввода видв контактной информации, по которому необходимо строить поиск
//  СтруктураПараметров - Структура параметров запроса, ключ - имя параметра, значение - значение параметра.
//  ТипСправочника - Тип, тип справочника автоподбора текста
//  КоличествоЭлементов - Число, количество элементов в результирующей таблице запроса
//
// Возвращаемое значение
//  РезультатЗапроса
//
Процедура ПолучитьРезультатЗапросаАвтоподбора(Знач Текст) Экспорт
	
	//Запрос = Новый Запрос;
	//
	//Текст = СтрЗаменить(Текст, "~", "~~");
	//Текст = СтрЗаменить(Текст, "%", "~%");
	//Текст = СтрЗаменить(Текст, "_", "~_");
	//Текст = СтрЗаменить(Текст, "[", "~[");
	//Текст = СтрЗаменить(Текст, "-", "~-");
	//Запрос.УстановитьПараметр("ТекстАвтоПодбора", Текст + "%");
	//Запрос.УстановитьПараметр("ТаблицаВыбора"	, КопияТаблицыВыбора);
	//
	//Запрос.Текст = "
	//	|ВЫБРАТЬ *
	//	|ПОМЕСТИТЬ Таб
	//	|ИЗ
	//	|	&ТаблицаВыбора КАК ТаблицаВыбора
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ *
	//	|ИЗ
	//	|	Таб
	//	|ГДЕ
	//	|	НаименованиеДляКнопки ПОДОБНО &ТекстАвтоПодбора СПЕЦСИМВОЛ ""~""
	//	|";
	//	
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//ТаблицаВыбора.Очистить();
	//Пока Выборка.Следующий() Цикл
	//	ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), Выборка);
	//КонецЦикла;
	
	Текст = НРег(Текст);
	
	ТаблицаВыбора.Очистить();
	Для каждого СтрокаКопии Из КопияТаблицыВыбора Цикл
		Если Найти(НРег(СтрокаКопии.НаименованиеДляКнопки), Текст)  Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаКопии);
		КонецЕсли; 
	КонецЦикла;
	
	ОпределитьКолвоСтраниц();
	ВывестиТекущуюСтраницу();
	
КонецПроцедуры

// Очисить фильтр поиска
//
Процедура ОчиститьФильтр() Экспорт

	ПодстрокаПоиска = "";
	
	ТаблицаВыбора.Очистить();
	Для каждого СтрокаКопии Из КопияТаблицыВыбора Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаКопии);
	КонецЦикла;
	
	ОпределитьКолвоСтраниц();
	ВывестиТекущуюСтраницу();
	
КонецПроцедуры
 
#КонецЕсли
ТекСтраница = 1;