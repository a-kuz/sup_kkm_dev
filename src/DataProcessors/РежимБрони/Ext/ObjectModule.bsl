
#Если Клиент Тогда

Перем ОбработкаЗаказ Экспорт;  // Ссылка на обработку "Заказ"

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
	ИнициализацияРеквизитов();
	
КонецПроцедуры

Процедура ИнициализацияРеквизитов()
	
	ОбработкаЗаказ = ИнтерфейсРМ.ПолучитьОбъектОбработки("Заказ","РежимБрони");
	ОбработкаЗаказ.РежимПредЗаказ = Истина;
	// Получаем ТипЦен по месту реализации из посадочного места либо из рабочего места;
	УстановитьТипЦен();
	
	ТаблицаЗаказа = ОбработкаЗаказ.ТаблицаЗаказа;

КонецПроцедуры

// Установить ТипЦен при подборе Меню
//
Процедура УстановитьТипЦен() Экспорт

	ОбработкаЗаказ.ТипЦен = Защита.ПолучитьТипЦен(?(ЗначениеЗаполнено(ПосадочноеМесто) И ЗначениеЗаполнено(ПосадочноеМесто.МестоРеализации), ПосадочноеМесто.МестоРеализации, глРабочееМесто.МестоРеализации));	
	
КонецПроцедуры	

// Сохранение брони
//
Функция ЗаписатьБронь() Экспорт
	
	Если ПосадочноеМесто.Пустая() Тогда
		Текст1="Ошибка!";
		Текст2="Укажите посадочное место!";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат Ложь;
		
	ИначеЕсли Время2 <= Время1 Тогда
		Текст1="Ошибка!";
		Текст2="Некорректный интервал бронирования!";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат Ложь;
		
	ИначеЕсли НЕ( ЗначениеЗаполнено(КлиентСтр) ИЛИ ЗначениеЗаполнено(Клиент) ) Тогда
		Текст1="Ошибка!";
		Текст2="Укажите клиента...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат Ложь;
		
	КонецЕсли;
	
	
	Если ТекущаяБронь.Пустая() Тогда
		Бронь = Документы.Бронь.СоздатьДокумент();
	Иначе
		Бронь = ТекущаяБронь.ПолучитьОбъект();
		Бронь.ПосадочныеМеста.Очистить();
		Бронь.Товары.Очистить();
		Бронь.Специфики.Очистить();
	КонецЕсли;
	
	Бронь.Дата			= Время1;
	Бронь.Автор			= глПользователь;
	Бронь.ВремяНачала	= Время1;
	Бронь.ВремяКонца	= Время2;
	Бронь.ВремяЗапрета  = Время1-глПараметрыРМ.БроньВремяЗапрета*60;
	Бронь.Клиент		= Клиент;
	Бронь.Комментарий	= Комментарий;
	Бронь.КлиентСтр		= ?(ЗначениеЗаполнено(Клиент), Клиент.Наименование, КлиентСтр);
	
	// посадочное место
	СтрокаДок = Бронь.ПосадочныеМеста.Добавить();
	СтрокаДок.ПосадочноеМесто		= ПосадочноеМесто;
	СтрокаДок.КоличествоПосетителей = КоличествоПосетителей;
	
	// предварительный заказ
	Для каждого СтрокаТовара Из ТаблицаЗаказа.Строки Цикл
		СтрокаДок = Бронь.Товары.Добавить();
		СтрокаДок.Товар		= СтрокаТовара.Товар;
		СтрокаДок.Количество= СтрокаТовара.Количество;
		СтрокаДок.Цена		= СтрокаТовара.Цена;
		СтрокаДок.Сумма		= СтрокаТовара.Сумма;
		
		Для каждого СтрокаСпецифики Из СтрокаТовара.Строки Цикл
			СтрокаДокСпец = Бронь.Специфики.Добавить();
			СтрокаДокСпец.НомерСтрокиТовара	= СтрокаДок.НомерСтроки;
			СтрокаДокСпец.Специфика			= СтрокаСпецифики.Товар;
		КонецЦикла; 
		
	КонецЦикла;
	
	Бронь.БроньПроверена = Истина;
	
	Если НЕ ИнтерфейсРМ.ПопыткаДействияСОбъектом( Бронь, "Объект.Записать(РежимЗаписиДокумента.Проведение)" ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИнтерфейсРМ.ЗаписьСобытия(Справочники.События.БроньЗапись, Бронь.Ссылка, Бронь.Номер, НаимПосадочногоМеста(ПосадочноеМесто) );
	
	ТекущаяБронь = Бронь.Ссылка;
	
	Возврат Истина;
КонецФункции

// Прочитать параметры существующей брони
//
Функция ПрочитатьБронь() Экспорт
	
	Если ТекущаяБронь.ПосадочныеМеста.Количество() = 1 Тогда
		ПосадочноеМесто			= ТекущаяБронь.ПосадочныеМеста[0].ПосадочноеМесто;
		КоличествоПосетителей	= ТекущаяБронь.ПосадочныеМеста[0].КоличествоПосетителей;
		
	ИначеЕсли ТекущаяБронь.ПосадочныеМеста.Количество() > 1 Тогда
		Текст1="Нет доступа!";
		Текст2="Эта бронь на несколько мест, изменить её можно только в интерфейсе Администратора...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат Ложь;
		
	КонецЕсли; 
	
	Время1		= ТекущаяБронь.ВремяНачала;
	Время2		= ТекущаяБронь.ВремяКонца;
	Клиент		= ТекущаяБронь.Клиент;
	КлиентСтр	= ТекущаяБронь.КлиентСтр;
	Комментарий	= ТекущаяБронь.Комментарий;
	
	Для каждого СтрокаДок Из ТекущаяБронь.Товары Цикл
		СтрокаТовара = ТаблицаЗаказа.Строки.Добавить();
		СтрокаТовара.Товар		= СтрокаДок.Товар;
		СтрокаТовара.Количество	= СтрокаДок.Количество;
		СтрокаТовара.Цена		= СтрокаДок.Цена;
		СтрокаТовара.Сумма		= СтрокаДок.Сумма;
		
		СтрокаТовара.Наименование		= СтрокаТовара.Товар.Наименование;
		СтрокаТовара.ЦенаРеализации		= СтрокаТовара.Цена;
		СтрокаТовара.СуммаРеализации	= СтрокаТовара.Сумма;
		СтрокаТовара.Категория			= СтрокаТовара.Товар.Категория;
		СтрокаТовара.Статус				= Перечисления.СтатусыПозицийЗаказа.Дозаказ;
	КонецЦикла;
	
	// специфики в отдельной ТЧ, привязка по номеру строки товара
	Для каждого СтрокаДок Из ТекущаяБронь.Специфики Цикл
		СтрокаТовара = ТаблицаЗаказа.Строки[СтрокаДок.НомерСтрокиТовара-1];
		СтрокаСпецифик = СтрокаТовара.Строки.Добавить();
		СтрокаСпецифик.Товар		= СтрокаДок.Специфика;
		СтрокаСпецифик.Наименование	= " - "+СтрокаДок.Специфика.Наименование;
		СтрокаСпецифик.Статус		= СтрокаТовара.Статус;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

Процедура ДействияПередЗакрытиемФормы(ТекущаяФорма, Отказ, ГлавнаяФорма) Экспорт
	Если глФлагБлокировка И (ТекущаяФорма.Модифицированность ИЛИ
		                     ТекущаяФорма.ЭлементыФормы.КнопкаМесто.Заголовок <> "выберите место...") Тогда
		
		Отказ = Истина;
		глФлагБлокировка = Ложь;
		
		БылПользователь = глПользователь;
		глПользователь = Справочники.Сотрудники.ПустаяСсылка();	// чтобы не сработала повторно автоблокировка
		глПользователь = ИнтерфейсРМ.ИдентификацияПользователя();
		
		Пока НЕ( глПользователь=БылПользователь ИЛИ 
				ИнтерфейсРМ.ПроверкаПользователяСмены() ) Цикл
				
			глПользователь = ИнтерфейсРМ.ИдентификацияПользователя();
			
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

ИнициализацияРеквизитов();

#КонецЕсли
