
#Если Клиент Тогда

Перем КолвоКнопок Экспорт;
Перем ВсегоСтраниц Экспорт;
Перем ТекСтраница Экспорт;
Перем ФормаВыбора Экспорт;
Перем КопияТаблицыВыбора;

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
КонецПроцедуры


// Первоначальное заполнение таблицы выбора
//
Процедура ЗаполнитьТаблицуВыбора() Экспорт
	
	ТаблицаВыбора.Колонки.Добавить("Значение");
	ТаблицаВыбора.Колонки.Добавить("НаименованиеДляКнопки");
	ТаблицаВыбора.Колонки.Добавить("ГоризонтальноеПоложение");
	Если МножественныйПодбор Тогда
		ТаблицаВыбора.Колонки.Добавить("Пиктограмма",,"",2);
	КонецЕсли;
	
	ТипМассива = ТипЗнч(МассивВыбора);
	Для каждого ТекЗнач Из МассивВыбора Цикл
		ТекСтрока = ТаблицаВыбора.Добавить();
		ТекСтрока.Значение					= ?(ТипМассива = Тип("СписокЗначений"), ТекЗнач.Значение, ТекЗнач);
		ТекСтрока.НаименованиеДляКнопки		= ТекЗнач;//?(ТипЗнч(ТекЗнач)=Тип("СправочникСсылка.Пейджеры"),""+ТекЗнач+"/"+ТекЗнач.НаборПейджеров,ТекЗнач);
		ТекСтрока.ГоризонтальноеПоложение	= ГоризонтальноеПоложение.Лево;
	КонецЦикла;
	
	ТипЗначенийВыбора = ТипЗнч( ТаблицаВыбора[ТаблицаВыбора.Количество()-1].Значение );
	
	Если ТипЗначенийВыбора = Тип("СправочникСсылка.ПосадочныеМеста") Тогда
		
		НазначитьЗаголовки("Выбор посадочного места", "Посадочные места");
		
		ТаблицаВыбора.Колонки.Добавить("Наименование");
		
		Для каждого СтрокаТЗ Из ТаблицаВыбора Цикл
			ТекЗнач = СтрокаТЗ.Значение;
			Если ТипЗнч(ТекЗнач) = Тип("СправочникСсылка.ПосадочныеМеста") Тогда
				СтрокаТЗ.Наименование = НаимПосадочногоМеста(ТекЗнач);
			Иначе
				СтрокаТЗ.Наименование = Строка(ТекЗнач);
			КонецЕсли;
			
			СтрокаТЗ.НаименованиеДляКнопки = СтрокаТЗ.Наименование;
		КонецЦикла;
		
	ИначеЕсли ТипЗначенийВыбора = Тип("СправочникСсылка.Товары") Тогда
		
		НазначитьЗаголовки("Выбор из меню", "Доступные позиции");
		
		ТаблицаВыбора.Колонки.Добавить("Наименование",,,30);
		ТаблицаВыбора.Колонки.Добавить("Единица",,"Ед.",5);
		ТаблицаВыбора.Колонки.Добавить("Цена", ПолучитьОписаниеТиповЧисла(10,2) , , 10);
		
		Для каждого СтрокаТЗ Из ТаблицаВыбора Цикл

			ТекЗнач		= СтрокаТЗ.Значение;
			ЭтоГруппа	= ТекЗнач.ЭтоГруппа;
			
			// если вызов из рекомендаций в наименовании для кнопки перечисслены от чего рекомендовано данное блюдо
			НаименованиеДляКнопкиСоответствует = Строка(ТекЗнач.Наименование)=Строка(СтрокаТЗ.НаименованиеДляКнопки);
			НаименованиеКороткое	= ?(ЭтоГруппа, "Выбор из: " + ТекЗнач.Наименование, ТекЗнач.Наименование);
			
			
			СтрокаТЗ.Наименование	= ?(НаименованиеДляКнопкиСоответствует, НаименованиеКороткое, НаименованиеКороткое + Символы.ПС + СтрокаТЗ.НаименованиеДляКнопки);
			СтрокаТЗ.Единица		= ТекЗнач.ЕдиницаИзмерения.Наименование;
			СтруктураЦены           = ЦенаТовара(ТекЗнач);
			СтрокаТЗ.Цена			= ПересчетВалют(СтруктураЦены.Цена,СтруктураЦены.Валюта);
			
			СтрокаТЗ.НаименованиеДляКнопки = НаименованиеКороткое + ?(НаименованиеДляКнопкиСоответствует, Символы.ПС, "") + 
											?(ЭтоГруппа, "", "["+СтрокаТЗ.Единица+"] " + СтрокаТЗ.Цена + "=") + 
											?(НаименованиеДляКнопкиСоответствует, "", Символы.ПС + СтрокаТЗ.НаименованиеДляКнопки);
		КонецЦикла;
		
	ИначеЕсли глВерсия>1 И ТипЗначенийВыбора = Тип("СправочникСсылка.Специфики") Тогда
		
		НазначитьЗаголовки("Выбор специфики", "Специфики приготовления");
		ЗаполнитьТаблицуСОднойКолонкой();
		
	ИначеЕсли ТипЗначенийВыбора = Тип("СправочникСсылка.ПричиныУдалений") Тогда
		
		Если МассивВыбора[0].Тип = Перечисления.ТипыПричинУдалений.Удаление Тогда
			НазначитьЗаголовки("Выбор причины удаления", "Причины удаления");
		Иначе
			НазначитьЗаголовки("Выбор причины возврата", "Причины возврата");
		КонецЕсли; 
		ЗаполнитьТаблицуСОднойКолонкой();
		
	ИначеЕсли ТипЗначенийВыбора = Тип("СправочникСсылка.ВариантыОплаты") Тогда
		
		НазначитьЗаголовки("Выбор варианта оплаты", "Варианты оплаты");
		ЗаполнитьТаблицуСОднойКолонкой();
		
	ИначеЕсли ТипЗначенийВыбора = Тип("СправочникСсылка.Скидки") Тогда
		
		НазначитьЗаголовки("Выбор скидки", "Доступные скидки");
		
		ТаблицаВыбора.Колонки.Добавить("Наименование",,,30);
		ТаблицаВыбора.Колонки.Добавить("Представление",,"Значение",10);
		Для каждого СтрокаТЗ Из ТаблицаВыбора Цикл
			ТекЗнач = СтрокаТЗ.Значение;
			СтрокаТЗ.Наименование	= ТекЗнач.Наименование;
			СтрокаТЗ.Представление	= ПредставлениеСкидки(ТекЗнач);
			
			СтрокаТЗ.НаименованиеДляКнопки = СтрокаТЗ.Наименование + ?(СтрокаТЗ.Представление="", "", " ("+ СтрокаТЗ.Представление + ")" );
		КонецЦикла;
		
	ИначеЕсли ТипЗначенийВыбора = Тип("ДокументСсылка.Заказ") Тогда
		
		НазначитьЗаголовки("Выбор заказа", "Доступные заказы");
		
		ТаблицаВыбора.Колонки.Добавить("Заказ",,,6);
		ТаблицаВыбора.Колонки.Добавить("Место",,,6);
		ТаблицаВыбора.Колонки.Добавить("Автор",,,10);
		ТаблицаВыбора.Колонки.Добавить("Сумма",,,10);
		Для каждого СтрокаТЗ Из ТаблицаВыбора Цикл
			ТекЗнач = СтрокаТЗ.Значение;
			СтрокаТЗ.Заказ	= ТекЗнач.Номер;
			СтрокаТЗ.Место	= НаимПосадочногоМеста(ТекЗнач.ПосадочноеМесто);
			СтрокаТЗ.Автор	= ТекЗнач.Автор;
			СтрокаТЗ.Сумма	= ТекЗнач.ИтоговаяСумма;
			
			СтрокаТЗ.НаименованиеДляКнопки = "№ " + СтрокаТЗ.Заказ + ", сумма: " + ФорматСумм(СтрокаТЗ.Сумма) + Символы.ПС + СтрокаТЗ.Место;
		КонецЦикла;
		
	ИначеЕсли ТипЗначенийВыбора = Тип("СправочникСсылка.БригадыСотрудников") Тогда
		
		НазначитьЗаголовки("Выбор бригады", "Бригады сотрудников");
		ЗаполнитьТаблицуСОднойКолонкой();
    
	ИначеЕсли глВерсия=3 И ТипЗначенийВыбора = Тип("СправочникСсылка.ПартнерыСкидок") Тогда
		
		НазначитьЗаголовки("Выбор партнера", "Партнеры");
		ЗаполнитьТаблицуСОднойКолонкой();
    
	ИначеЕсли ТипЗначенийВыбора = Тип("СправочникСсылка.КонтактнаяИнформация") Тогда
		
		НазначитьЗаголовки("Выбор клиента", "Подходящие варианты");
		
		ТаблицаВыбора.Колонки.Добавить("Наименование",,,30);
		Для каждого СтрокаТЗ Из ТаблицаВыбора Цикл
			ТекЗнач = СтрокаТЗ.Значение;
			СтрокаТЗ.Наименование	= ТекЗнач.Объект.Наименование;
			СтрокаТЗ.НаименованиеДляКнопки = СтрокаТЗ.Наименование;
		КонецЦикла;
		
	Иначе	
		
		НазначитьЗаголовки();
		ЗаполнитьТаблицуСОднойКолонкой();
		
	КонецЕсли;
	
	ОпределитьКолвоСтраниц();
	
	КопияТаблицыВыбора = ТаблицаВыбора.Скопировать();
	
КонецПроцедуры

Процедура НазначитьЗаголовки( ЗаголовокФормыИмя = "Выбор значения", ЗаголовокВыбораИмя = "Доступные значения")
	
	ЗаголовокФормы	= ?(ЗначениеЗаполнено(ЗаголовокФормы), ЗаголовокФормы, ЗаголовокФормыИмя);
	ЗаголовокВыбора = ?(ЗначениеЗаполнено(ЗаголовокВыбора), ЗаголовокВыбора, ЗаголовокВыбораИмя);
	
КонецПроцедуры	

Процедура ЗаполнитьТаблицуСОднойКолонкой()
	
	ТаблицаВыбора.Колонки.Добавить("Наименование");
	
	Для каждого ТекСтрока Из ТаблицаВыбора Цикл
		ТекЗнач = ТекСтрока.Значение;
		Если ЗначениеЗаполнено(ТекЗнач) Тогда
			ТекСтрока.Наименование = Строка(ТекЗнач);
		Иначе
			ТекСтрока.Наименование = "--- Пропустить ---";
			ТекСтрока.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		КонецЕсли; 

	КонецЦикла;
	
КонецПроцедуры

Процедура ОпределитьКолвоСтраниц()
	
	Если КолвоКнопок = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ВсегоСтраниц = ТаблицаВыбора.Количество() / КолвоКнопок;
	Если Цел(ВсегоСтраниц) <> ВсегоСтраниц Тогда
		ВсегоСтраниц = Цел(ВсегоСтраниц) + 1;
	КонецЕсли;
	ТекСтраница = 1;
	
	Попытка
		
	
	ФормаВыбора.ЭлементыФормы.ПанельСтрелки.Видимость = ВсегоСтраниц > 1;
	Исключение
	КонецПопытки;
КонецПроцедуры
 
// Выводит текущую страницу кнопок
//
Процедура ВывестиТекущуюСтраницу() Экспорт
	
	ИндексЗначенияПервойКнопки = (ТекСтраница-1) * КолвоКнопок;
	
	Для НомерКнопки=1 По КолвоКнопок Цикл
		
		Кнопка = ФормаВыбора.ЭлементыФормы["Кнопка"+НомерКнопки];
		
		ТекИндекс = ИндексЗначенияПервойКнопки + НомерКнопки-1;
		Если ТекИндекс <= ТаблицаВыбора.Количество()-1 Тогда
			ТекСтрока = ТаблицаВыбора[ТекИндекс];
			Кнопка.Видимость = Истина;
			Кнопка.Заголовок = ТекСтрока.НаименованиеДляКнопки;
			Если МножественныйПодбор Тогда
				Кнопка.Картинка = ?(МассивПомеченных.Найти(ТекСтрока.Значение)=Неопределено, Новый Картинка, БиблиотекаКартинок.Галка);
			КонецЕсли;
			Кнопка.ГоризонтальноеПоложение = ТекСтрока.ГоризонтальноеПоложение;
		Иначе
			Кнопка.Видимость = Ложь;
		КонецЕсли; 
		
	КонецЦикла;
	
	// выводим счетчик страниц
	Попытка
		ФормаВыбора.ЭлементыФормы.ТекстКолвоСтраниц.Заголовок = ?(ВсегоСтраниц>1, Строка(ТекСтраница)+"/"+Строка(ВсегоСтраниц), "");	
	Исключение
	КонецПопытки;
	
	// показываем только доступные направления листания
	//ФормаВыбора.ЭлементыФормы.КнопкаСтрелкаВверх.Видимость = ТекСтраница > 1;
	//ФормаВыбора.ЭлементыФормы.КнопкаСтрелкаВниз .Видимость = ТекСтраница < ВсегоСтраниц;
	
КонецПроцедуры

// Обработка выбора значения в форме
//
Процедура ОбработкаВыбораЗначения(ЗначениеВыбора) Экспорт
	
	Если МножественныйПодбор Тогда
		
		Индекс = МассивПомеченных.Найти(ЗначениеВыбора);
		Если Индекс = Неопределено Тогда
			МассивПомеченных.Добавить(ЗначениеВыбора);
		Иначе
			МассивПомеченных.Удалить(Индекс);
		КонецЕсли;
		
	Иначе
		ФормаВыбора.Закрыть( ЗначениеВыбора );
	КонецЕсли;
	
КонецПроцедуры

// Функция выполняет запрос при автоподборе текста  и при окончании ввода текста в поле ввода.
//
// Параметры
//  Текст - Строка, текст введенный в поле ввода видв контактной информации, по которому необходимо строить поиск
//  СтруктураПараметров - Структура параметров запроса, ключ - имя параметра, значение - значение параметра.
//  ТипСправочника - Тип, тип справочника автоподбора текста
//  КоличествоЭлементов - Число, количество элементов в результирующей таблице запроса
//
// Возвращаемое значение
//  РезультатЗапроса
//
Процедура ПолучитьРезультатЗапросаАвтоподбора(Знач Текст) Экспорт
	
	//Запрос = Новый Запрос;
	//
	//Текст = СтрЗаменить(Текст, "~", "~~");
	//Текст = СтрЗаменить(Текст, "%", "~%");
	//Текст = СтрЗаменить(Текст, "_", "~_");
	//Текст = СтрЗаменить(Текст, "[", "~[");
	//Текст = СтрЗаменить(Текст, "-", "~-");
	//Запрос.УстановитьПараметр("ТекстАвтоПодбора", Текст + "%");
	//Запрос.УстановитьПараметр("ТаблицаВыбора"	, КопияТаблицыВыбора);
	//
	//Запрос.Текст = "
	//	|ВЫБРАТЬ *
	//	|ПОМЕСТИТЬ Таб
	//	|ИЗ
	//	|	&ТаблицаВыбора КАК ТаблицаВыбора
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ *
	//	|ИЗ
	//	|	Таб
	//	|ГДЕ
	//	|	НаименованиеДляКнопки ПОДОБНО &ТекстАвтоПодбора СПЕЦСИМВОЛ ""~""
	//	|";
	//	
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//ТаблицаВыбора.Очистить();
	//Пока Выборка.Следующий() Цикл
	//	ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), Выборка);
	//КонецЦикла;
	
	Текст = НРег(Текст);
	
	ТаблицаВыбора.Очистить();
	Для каждого СтрокаКопии Из КопияТаблицыВыбора Цикл
		Если Найти(НРег(СтрокаКопии.НаименованиеДляКнопки), Текст)  Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаКопии);
		КонецЕсли; 
	КонецЦикла;
	
	ОпределитьКолвоСтраниц();
	ВывестиТекущуюСтраницу();
	
КонецПроцедуры

// Очисить фильтр поиска
//
Процедура ОчиститьФильтр() Экспорт

	ПодстрокаПоиска = "";
	
	ТаблицаВыбора.Очистить();
	Для каждого СтрокаКопии Из КопияТаблицыВыбора Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаКопии);
	КонецЦикла;
	
	ОпределитьКолвоСтраниц();
	ВывестиТекущуюСтраницу();
	
КонецПроцедуры
 
#КонецЕсли
