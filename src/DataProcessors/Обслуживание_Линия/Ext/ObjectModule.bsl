
Перем ПараметрыТО Экспорт;				// Параметры торгового оборудования.
Перем Результат Экспорт;				// Результат выполнения действия.
Перем DRV Экспорт;						// Соединение
Перем ТекущаяКамера Экспорт;			// Текущая камера с параметрами
Перем ПоказыватьОтветСервера Экспорт;   // Показывать ответы сервера (для тестов)
Перем ИмяOSDОбъекта;        			// OSD - отображаемое на экране
Перем ГСЧ;
Перем ТитрыКаталогФайлов;
Перем КодОшибки, ОписаниеОшибки;

Перем Соединение;

#Если Клиент Тогда
	
// Производит инициализацию торгового оборудования.
//
Процедура Инициализация() Экспорт
	
	ПрочитатьПараметр("IPадрес"						, "localhost");
	ПрочитатьПараметр("IPпорт"						, 9786);
	ПрочитатьПараметр("IPпортПросмотра"				, 9780);
	ПрочитатьПараметр("IPпортАрхива"				, 9779);
	ПрочитатьПараметр("Логин"						, "admin");
	ПрочитатьПараметр("Пароль"						, "");
	ПрочитатьПараметр("СписокКамер"					, Неопределено);
	ПрочитатьПараметр("ПутьКObserver"				, "");
	ПрочитатьПараметр("ПросмотрВУпрощенномРежиме"	, Истина);
	ПрочитатьПараметр("НаблюдательныйПостX1"		, 0);
	ПрочитатьПараметр("НаблюдательныйПостX2"		, 0);
	ПрочитатьПараметр("НаблюдательныйПостY1"		, 0);
	ПрочитатьПараметр("НаблюдательныйПостY2"		, 0);
	ПрочитатьПараметр("ЗаписыватьТитры"				, Ложь);
    ПрочитатьПараметр("ТитрыПапкаВыгрузки"			, "");
	
	// Получить каталог обмена с сервером
	Если ЗначениеЗаполнено(ТитрыПапкаВыгрузки) Тогда
		КаталогНаДиске = Новый Файл(ТитрыПапкаВыгрузки);
		Если КаталогНаДиске.Существует() Тогда
			ТитрыКаталогФайлов = ТитрыПапкаВыгрузки+"\";
		Иначе
			ТитрыКаталогФайлов = КаталогВременныхФайлов();
		КонецЕсли;
	Иначе
		ТитрыКаталогФайлов = КаталогВременныхФайлов();
	КонецЕсли;	
	
	// Получить параметры камеры (№ и параметры шрифта титров)
	ТекущаяКамера = ПолучитьСтруктуруКамеры();
	
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	ИмяOSDОбъекта			= "osd_name";
	ПоказыватьОтветСервера	= Ложь;

	ПолучитьСоединениеССервером();
	
КонецПроцедуры

// Получить параметры камеры (№ и параметры титров)
//
Функция ПолучитьСтруктуруКамеры(НомерКамеры = Неопределено) Экспорт
	
	СтруктураКамеры = Новый Структура;
	
	// Если № камеры нет, получаем из параметров рабочего места.
	Если НомерКамеры = Неопределено Тогда
		
		НомерКамеры = ?(глРабочееМесто = Неопределено,0,ЗначениеИзСтрокиВнутр(глРабочееМесто.ПараметрыРМ).РегистрацияСобытийОсновнаяКамера);
		
	КонецЕсли;	
	
	Если СписокКамер.Количество()<>0 Тогда
		НайденнаяКамера = СписокКамер.Найти(НомерКамеры, "НомерКамеры");
	КонецЕсли;	
	
		
	// Получаем параметры камеры.
	Если НайденнаяКамера = Неопределено Тогда
		СтруктураКамеры.Вставить("НомерКамеры"		, 0);
		СтруктураКамеры.Вставить("РазмерШрифта"		, 3);
		СтруктураКамеры.Вставить("Цвет"				, "#000000");
		СтруктураКамеры.Вставить("КоличествоСтрок"	, 6);
		СтруктураКамеры.Вставить("ОтступСверху"		, 1);
		СтруктураКамеры.Вставить("ОтступСлева"		, 1);
	Иначе
		СтруктураКамеры.Вставить("НомерКамеры"		, НомерКамеры);
		СтруктураКамеры.Вставить("РазмерШрифта"		, НайденнаяКамера.РазмерШрифта);
		СтруктураКамеры.Вставить("Цвет"				, НайденнаяКамера.КодЦвета);
		СтруктураКамеры.Вставить("КоличествоСтрок"	, НайденнаяКамера.КоличествоСтрок);
		СтруктураКамеры.Вставить("ОтступСверху"		, НайденнаяКамера.ОтступСверху);
		СтруктураКамеры.Вставить("ОтступСлева"		, НайденнаяКамера.ОтступСлева);
	КонецЕсли;
	
	Возврат  СтруктураКамеры;
	
КонецФункции

// Получаем соединениеи с сервером
//
Функция ПолучитьСоединениеССервером(Порт = Неопределено, Переподключить = Ложь) Экспорт 
	
	//Если DRV = Неопределено ИЛИ Переподключить Тогда // переподключить для вступление в силу измененных параметров (пример: изменен порт)
	Если НЕ глТорговоеОборудование.Свойство("line_Mon",DRV) ИЛИ Переподключить Тогда
		
		Порт = ?(Порт = Неопределено, Строка(Формат(IPпорт,"ЧГ=")), Строка(Формат(Порт,"ЧГ=")));
		
		Попытка
			DRV = Новый HTTPСоединение(IPадрес, Порт, Логин, Пароль);

			УдалитьOSDОбъекта();
			
			ФайлРезультата        = ПолучитьИмяВременногоФайла();
			ФайлОтправкиНастройки = ТитрыКаталогФайлов + "post.xml";
			// Создать файл с настройками
			ТекстНастройка = Новый ТекстовыйДокумент;
			ТекстНастройка.УстановитьТекст("<osd-zone-data><name>"+ИмяOSDОбъекта+"</name><left>"+ТекущаяКамера.ОтступСлева+"</left><top>"+ТекущаяКамера.ОтступСверху+"</top><font-size>"+ТекущаяКамера.РазмерШрифта+"</font-size><font-color>"+ТекущаяКамера.Цвет+"</font-color><line-count>"+ТекущаяКамера.КоличествоСтрок+"</line-count></osd-zone-data>");
			ТекстНастройка.Записать(ФайлОтправкиНастройки);
			// Отправить файл с настройками
			ЗаголовокHTTP = Новый Соответствие();
			ЗаголовокHTTP.Вставить("Content-Type", "application/xml");
			DRV.ОтправитьДляОбработки(ФайлОтправкиНастройки, "/cameras/" + ТекущаяКамера.НомерКамеры + "/osd", ФайлРезультата, ЗаголовокHTTP);
			ПоказатьОтветСервера(ФайлРезультата);
			
			глТорговоеОборудование.Вставить("line_Mon", DRV);
			
		Исключение
			Если ПоказыватьОтветСервера Тогда
				Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
			КонецЕсли;
			Возврат Ложь;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Проверка обязательных к заполнению реквизитов
//
Функция ПроверкаЗаполненияРеквизитов() Экспорт
	
	Если ПустаяСтрока(IPадрес) Тогда
		Сообщить("Не указан адрес сервера!", СтатусСообщения.Важное);
		Возврат Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Логин) Тогда
		Сообщить("Не указано имя пользователя!", СтатусСообщения.Важное);
		Возврат Ложь;
	КонецЕсли;
	
	Если IPпорт = 0 Тогда
		Сообщить("Не указан порт!", СтатусСообщения.Важное);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Выполняет чтение параметра ТО.
//
// Параметры:
//  ИмяПараметра        - имя параметра,
//  ЗначениеПоУмолчанию - значение по умолчанию для данного параметра.
//
// Возвращаемое значение:
//  Значение параметра или значение по умолчанию
//
Процедура ПрочитатьПараметр(ИмяПараметра,ЗначениеПоУмолчанию)
	
	Если НЕ ПараметрыТО.Свойство(ИмяПараметра) Тогда
		ПараметрыТО.Вставить(ИмяПараметра,ЗначениеПоУмолчанию);
	КонецЕсли; 
	
	ЭтотОбъект[ИмяПараметра] = ПараметрыТО[ИмяПараметра];
	
КонецПроцедуры

// Выполняет действие с ТО.
//
// Параметры:
//  Действие - имя действия,
//  ПараметрыДействия - произвольный набор параметров
//
Процедура ВыполнитьДействие(Действие, ПараметрыДействия=Неопределено) Экспорт
	
	Если Действие = "Подключить" Тогда
		// подключить HTTPСоединение 
		Подключить();
	ИначеЕсли Действие = "Отключить" Тогда
		// Сбросить параметры (очистить "OSD - отображаемое на экране")
		Отключить();
	ИначеЕсли Действие = "ПослатьСобытие" Тогда
		// Отправить титры в камеру
		ПослатьСобытие(ПараметрыДействия.Событие);
	ИначеЕсли Действие = "ПросмотрСобытий" Тогда
		// открыть монитор
		ПросмотрСобытий(ПараметрыДействия.Событие);	
	Иначе
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Неизвестная команда!";
		Результат.Подробно	= "Команда """+Действие+""" не определена для "+ТО.Наименование;
	КонецЕсли;
	
КонецПроцедуры

// подключить HTTPСоединение
//
Функция Подключить(Переподключить = Ложь) Экспорт
	
	Если ЗаписыватьТитры И НЕ ПолучитьСоединениеССервером(, Переподключить) Тогда
		Если ПоказыватьОтветСервера Тогда
			Сообщить("Не установлено соединение с сервером");
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
КонецФункции

// Сбросить параметры (очистить "OSD - отображаемое на экране")
//
Процедура Отключить() Экспорт
	
	Если ЗаписыватьТитры Тогда
		УдалитьOSDОбъекта();
	КонецЕсли;
	
КонецПроцедуры

// Отправить событие на экран
//
Процедура ПослатьСобытие(Событие)   Экспорт
	
	СтрокаСобытия = "";

	НайденноеСобытие = Событие.Найти("Комментарий", "ИмяПарам");
	Если  НайденноеСобытие = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	СтрокаСобытия = "" + ТекущаяДата() + " - " + НайденноеСобытие.ЗначПарам;
	
	// Создать временные файлы для отправки на сервер
	ФайлОтправкиКонтент   = ТитрыКаталогФайлов + "сontent" + Формат(ТекущаяДата(), "ДФ=_yyyy_MM_dd_H_mm_ss_") + ГСЧ.СлучайноеЧисло(1,999) + ".l_txt";
		
	// Создать файл с текстом для камеры
	ТекстОтправки = Новый ТекстовыйДокумент;
	ТекстОтправки.УстановитьТекст(СтрокаСобытия);
	ТекстОтправки.Записать(ФайлОтправкиКонтент);
	ОтправкаНаСервер(ФайлОтправкиКонтент);
		
КонецПроцедуры	

// Передать в сервер выборку 
//
Процедура ПередатьВсеСобытияСерверу() Экспорт
	
	НайденныеФайлы = НайтиФайлы(ТитрыКаталогФайлов, "*.l_txt");
	
	// Находим все файлы титров и передаем по одному (для красоты)
	Для каждого ФайлЗагрузки Из НайденныеФайлы Цикл
		
		ОтправкаНаСервер(ФайлЗагрузки.ПолноеИмя);
		
	КонецЦикла;
	
КонецПроцедуры	

// Непосредственная отправка титров в видеонаблюдение
//
Процедура ОтправкаНаСервер(ФайлОтправкиКонтент)
	
    ФайлРезультата        = ПолучитьИмяВременногоФайла();
	 
	//OSD объект должен быть создан. Если он не создан, то при ошибке создаем его и отправляем текст по новому.
	Попытка
		ЗаголовокHTTP = Новый Соответствие();
		ЗаголовокHTTP.Вставить("Content-Type", "text/plain");
		DRV.ОтправитьДляОбработки(ФайлОтправкиКонтент, "/cameras/" + ТекущаяКамера.НомерКамеры + "/osd/" + ИмяOSDОбъекта, ФайлРезультата, ЗаголовокHTTP);
		ПоказатьОтветСервера(ФайлРезультата);
		
		УдалитьФайлы(ФайлОтправкиКонтент);
		
	Исключение
		
		ФайлОтправкиНастройки = ТитрыКаталогФайлов + "post.xml";		
		Попытка
			ЗаголовокHTTP = Новый Соответствие();
			ЗаголовокHTTP.Вставить("Content-Type", "application/xml");
			DRV.ОтправитьДляОбработки(ФайлОтправкиНастройки, "/cameras/" + ТекущаяКамера.НомерКамеры + "/osd", ФайлРезультата, ЗаголовокHTTP);
			ПоказатьОтветСервера(ФайлРезультата);
			
			ЗаголовокHTTP = Новый Соответствие();
			ЗаголовокHTTP.Вставить("Content-Type", "text/plain");
			DRV.ОтправитьДляОбработки(ФайлОтправкиКонтент, "/cameras/" + ТекущаяКамера.НомерКамеры + "/osd/" + ИмяOSDОбъекта, ФайлРезультата, ЗаголовокHTTP);
			ПоказатьОтветСервера(ФайлРезультата);	
			
			УдалитьФайлы(ФайлОтправкиКонтент);
			
		Исключение
			Если ПоказыватьОтветСервера Тогда
				Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);			
			КонецЕсли;
		КонецПопытки;
	КонецПопытки;
	
	
КонецПроцедуры	

// Открыть монитор для просмотра событий
//
Процедура ПросмотрСобытий(ПараметрыПросмотра)
	
	ОнЛайн 					= ПараметрыПросмотра.ДатаАрхива = Неопределено;
	ИспользоватьКоординаты	= НаблюдательныйПостX1<>0 ИЛИ НаблюдательныйПостX2<>0 ИЛИ НаблюдательныйПостY1<>0 ИЛИ НаблюдательныйПостY2<>0; 
	
	Если ПустаяСтрока(ПутьКObserver) Тогда
		Возврат;
	КонецЕсли;
	
	// Проверки
	Файл = Новый Файл(ПутьКObserver);
	
	Если Не Файл.Существует() Тогда
		Сообщить("Не верно указан путь к исполняемому файлу!", СтатусСообщения.Важное); 
		Возврат;
	КонецЕсли;
	
	СтрокаПараметры = "";
	
	Если ЗначениеЗаполнено(IPадрес) Тогда
		СтрокаПараметры = " -s " + СокрЛП(IPадрес);
	КонецЕсли;
	
	Если ОнЛайн И IPпортПросмотра <> 0 Тогда
		СтрокаПараметры = СтрокаПараметры + " -p " + Строка(Формат(IPпортПросмотра,"ЧГ="));
	ИначеЕсли НЕ ОнЛайн И IPпортАрхива <> 0 Тогда
		СтрокаПараметры = СтрокаПараметры + " -p " + Строка(Формат(IPпортАрхива,"ЧГ="));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Логин) Тогда
		СтрокаПараметры = СтрокаПараметры + " -l " + СокрЛП(Логин);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Пароль) Тогда
		СтрокаПараметры = СтрокаПараметры + " --pwd " + СокрЛП(Пароль);
	КонецЕсли;
	
	Если ПараметрыПросмотра.Камера <> Неопределено Тогда
		СтрокаПараметры = СтрокаПараметры + " -c " + ПараметрыПросмотра.Камера;
	КонецЕсли;
	
	Если ПараметрыПросмотра.ДатаАрхива <> Неопределено Тогда // Архив
		СтрокаПараметры = СтрокаПараметры + " -t " + Формат(ПараметрыПросмотра.ДатаАрхива, "ДФ=yyyy-MM-dd") + " " + Формат(ПараметрыПросмотра.ДатаАрхива, "ДЛФ=T");
	КонецЕсли;
	
	Если ИспользоватьКоординаты Тогда
		СтрокаПараметры = СтрокаПараметры + " --window-pos " + Строка(Формат(НаблюдательныйПостX1,"ЧГ=")) + " " + Строка(Формат(НаблюдательныйПостY1,"ЧГ=")) + " " + Строка(Формат(НаблюдательныйПостX2,"ЧГ=")) + " " + Строка(Формат(НаблюдательныйПостY2,"ЧГ="));
	КонецЕсли;
	
	Если ПросмотрВУпрощенномРежиме Тогда
		СтрокаПараметры = СтрокаПараметры + " --simple"
	КонецЕсли;
	
	Если НЕ ОнЛайн Тогда
		СтрокаПараметры = СтрокаПараметры + " -a"
	КонецЕсли;
	
	Кавычки = Символ(34);
	
	Попытка
		ЗапуститьПриложение(ПутьКObserver + СтрокаПараметры);
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
	КонецПопытки;
	
	
КонецПроцедуры	

// Очистка текста в камере
Процедура ОчиститьТекстКамеры() Экспорт
	
	// Если нет HTTPСоединение, продключаем
	// Создаем пустой файл текста для камеры
	ФайлПустой  = ПолучитьИмяВременногоФайла();
	ТекстПустой = Новый ТекстовыйДокумент;
	ТекстПустой.Записать(ФайлПустой);
	
	// Попытка очистить текст в камере
	Попытка
		DRV.Записать(ФайлПустой, "/cameras/" + ТекущаяКамера.НомерКамеры + "/osd/" + ИмяOSDОбъекта +"/clear");
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

Процедура УдалитьOSDОбъекта() Экспорт
	
	// Попытка удаления OSD объекта
	Попытка 
		DRV.Удалить( "/cameras/" + ТекущаяКамера.НомерКамеры + "/osd/" + ИмяOSDОбъекта);
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

// Получает список камер по "Линии"
Процедура ПолучитьСписокКамер() Экспорт
	
	// Получение файла со списком камер.
	ИмяФайлаКамеры = КаталогВременныхФайлов() + "Cameras.xml";
	DRV.Получить("/cameras", ИмяФайлаКамеры);
	
	
	СписокCameras = Новый СписокЗначений;
	
	ТаблицаCameras = Новый ТаблицаЗначений;
	ТаблицаCameras.Колонки.Добавить("uri");
	ТаблицаCameras.Колонки.Добавить("name");
	
	л_XMLФайл = Новый ЧтениеXML;
	л_XMLФайл.ОткрытьФайл(ИмяФайлаКамеры);
	
	ИндексСписка = 0;
	
	Пока л_XMLФайл.Прочитать() Цикл
		
		// Обработка документа XML
		Если л_XMLФайл.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			л_ИмяУзла = л_XMLФайл.Имя;
			Если л_ИмяУзла = "uri" Тогда
				л_XMLФайл.Прочитать();
				НоваяСтрока = ТаблицаCameras.Добавить();
				НоваяСтрока.uri = л_XMLФайл.Значение;
			ИначеЕсли л_ИмяУзла = "name" Тогда
				л_XMLФайл.Прочитать();
				НоваяСтрока.name = л_XMLФайл.Значение;
			КонецЕсли;
		КонецЕсли;		
	
	КонецЦикла;
	
	// Заполняем сиписок колонок таблицы
	Если СписокКамер.Колонки.Количество() = 0 Тогда
		
		СписокКамер.Колонки.Добавить("НаименованиеКамеры");
		СписокКамер.Колонки.Добавить("НомерКамеры");
		СписокКамер.Колонки.Добавить("РазмерШрифта");
		СписокКамер.Колонки.Добавить("Цвет");
		СписокКамер.Колонки.Добавить("КодЦвета");
		СписокКамер.Колонки.Добавить("КоличествоСтрок");
		СписокКамер.Колонки.Добавить("ОтступСверху");
		СписокКамер.Колонки.Добавить("ОтступСлева");
			
	КонецЕсли;	
	
	// Если камер нет, сообщаем
	Если ТаблицаCameras.Количество() = 0 Тогда
		Сообщить("Нет доступных камер!");
		Возврат;
	КонецЕсли;	
	
	// Заполняем список камер
	Для каждого Строка Из ТаблицаCameras Цикл
		
		ТекНомерКамеры = Число(Сред(Строка.uri,10));
		
		// Проверяем есть ли камера уже в списке
		НайденнаяКамера = СписокКамер.Найти(ТекНомерКамеры, "НомерКамеры");
		
		// Если камеры еще нет, заполняем параметрами по умолчанию
		Если НайденнаяКамера = Неопределено Тогда
			НоваяСтрока = СписокКамер.Добавить();
			НоваяСтрока.НаименованиеКамеры		= Строка.name;
			НоваяСтрока.НомерКамеры				= ТекНомерКамеры;
			НоваяСтрока.РазмерШрифта			= 3;
			НоваяСтрока.Цвет					="0, 0, 0";
			НоваяСтрока.КодЦвета				= "#000000";			
			НоваяСтрока.КоличествоСтрок			= 6;
			НоваяСтрока.ОтступСверху			= 1;
			НоваяСтрока.ОтступСлева				= 1;
		// Если есть, перезаписать наименование (вдруг изменилась на сервере)	
		Иначе
			НайденнаяКамера.НаименованиеКамеры	= Строка.name;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Показать сообщения в работен с сервером
//
Процедура ПоказатьОтветСервера(ФайлРезультата) Экспорт
	
	Если ПоказыватьОтветСервера Тогда
		
		ФайлОтвета = Новый Файл(ФайлРезультата);
		Если ФайлОтвета.Существует() Тогда
			
			ТекстОтвета = Новый ТекстовыйДокумент();
			ТекстОтвета.Прочитать(ФайлРезультата);
			Если ТекстОтвета.КоличествоСтрок() > 0 Тогда
				ОтветСервера = ТекстОтвета.ПолучитьТекст();
				Сообщить(ОтветСервера);
			Иначе
				Сообщить("Отправка файла на сервер: Получен пустой ответ сервера.");
			КонецЕсли;
			
		Иначе
			Сообщить("Отправка файла на сервер: Ответ сервера не получен.");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////

 
#КонецЕсли

Результат = Новый Структура("Ошибка,Описание,Подробно", Ложь,"","");
