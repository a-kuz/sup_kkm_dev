
// Перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ОписаниеПрофиля) ТОгда
		Предупреждение("Данная обработка открывается только из справочника торгового оборудования!",5);
		Отказ = Истина;
		Возврат;  		
	КонецЕсли; 
	
	ОбновлениеОтображения();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Флаг = ЗаписыватьТитры;
	ЭлементыФормы.ТитрыПапкаВыгрузки.Доступность				= Флаг;
	//ЭлементыФормы.ПередаватьТитрыОнЛайн.Доступность				= Флаг;
    ЭлементыФормы.НомерКамерыТеста.Доступность					= Флаг;
    ЭлементыФормы.КнопкаТестТитров.Доступность					= Флаг;
	ЭлементыФормы.НадписьПоказыватьОтветыСервера.Доступность	= Флаг;
	ЭлементыФормы.Панель1.Страницы.СписокКамер.Видимость		= Флаг;
	
КонецПроцедуры

// ОК
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЗаполнитьЗначенияСвойств(ПараметрыТО,ЭтотОбъект);
	Закрыть("ОК");
	
КонецПроцедуры

// Тест титров
//
Процедура КнопкаТестТитровНажатие(Элемент)
	
	// Проверка обязательных реквизитов
	Если НЕ ПроверкаЗаполненияРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	// Подключаемся к серверу
	Если НЕ Подключить(Истина) Тогда
		Возврат;
	КонецЕсли;

	// Получаем структуру камеры для теста
	ТекущаяКамера = ПолучитьСтруктуруКамеры(НомерКамерыТеста);
	
	// Готовим таблицу для тестовой строки
	ТалицаСобытий = Новый ТаблицаЗначений;
	ТалицаСобытий.Колонки.Добавить("ИмяПарам",Новый ОписаниеТипов("Строка"));
	ТалицаСобытий.Колонки.Добавить("ЗначПарам",Новый ОписаниеТипов("Строка"));
	
	// Вставляем в таблицу тестовую строку
	СтрокаСобытие = ТалицаСобытий.Добавить();
	СтрокаСобытие.ИмяПарам="Комментарий";				
	СтрокаСобытие.ЗначПарам="<Тест титров> Иванов. Авторизация выполнена";
	
	// Посылаем тестовое сообщение в камеру
	ПослатьСобытие(ТалицаСобытий);
	
	// Уведомтяем об отправке
	Предупреждение("На картинке с камеры наблюдения должен появиться текст:
					|
					|<Тест титров> Иванов. Авторизация выполнена");
					
	//	Зачищаем тестовый текст с камеры			
	Отключить();				
					
КонецПроцедуры

// Получить список камер с сервера
//
Процедура КоманднаяПанельДействияСписокКамерПолучитьСписок(Кнопка)
	
	// Подключаемся к серверу
	Если НЕ ПолучитьСоединениеССервером(, Истина) Тогда
		Предупреждение("Не удалось получить соединение с сервером!",5);
		Возврат;
	КонецЕсли;	
	
	ПолучитьСписокКамер();
				
	Отключить();
	
КонецПроцедуры

// Нужно перевести выбранный текст в формат для передачи в камеры
//
Процедура СписокКамерЦветПриИзменении(Элемент)
	
	Об_ЦветТекста     = ПреобразоватьЦвет(Элемент.Значение);

	ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока.КодЦвета = "#"+DecToHex(Об_ЦветТекста.Красный)+DecToHex(Об_ЦветТекста.Зеленый)+DecToHex(Об_ЦветТекста.Синий);
	
КонецПроцедуры

// Преобразовать цвет
//
Функция ПреобразоватьЦвет(ОБ_Цвет)
	
	Если НЕ ОБ_Цвет.Вид=ВидЦвета.Абсолютный Тогда
		
		// Попробуем преобразовать
		Стр_ИмяВремФайла=ПолучитьИмяВременногоФайла(".mxl");
		
		ОБ_Таб = Новый ТабличныйДокумент;
		ОБ_Таб.Область().ЦветФона = ОБ_Цвет;
		ОБ_Таб.Записать(Стр_ИмяВремФайла,ТипФайлаТабличногоДокумента.HTML);
		
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(Стр_ИмяВремФайла);
		УдалитьФайлы(Стр_ИмяВремФайла);
		
		Стр_ТекстНТМЛ = Текст.ПолучитьТекст();
		Стр_КлючПоиска = "background: #";
		Ч_ПозНач = Найти(Стр_ТекстНТМЛ,Стр_КлючПоиска);
		
		Если Ч_ПозНач > 0 Тогда
			Стр_ЦветHEX = ВРЕГ(Сред(Стр_ТекстНТМЛ,Ч_ПозНач+СтрДлина(Стр_КлючПоиска),7));
			Возврат Новый Цвет(HexToDec(Сред(Стр_ЦветHEX,1,2)),HexToDec(Сред(Стр_ЦветHEX,3,2)),HexToDec(Сред(Стр_ЦветHEX,5,2)));
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОБ_Цвет;
	
КонецФункции

// Функция вычислет степень числа
// _База    - Число                - Число, возводимое в степень
// _Степ   - Число                - Степень числа
Функция Степень(_База, _Степ)
	
	Результат = 1;
	Для К = 1 По _Степ Цикл
		Результат = Результат *_База;                              
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции // Возвращает Число, возведенное в степень

// Функция переводит десятичное число в шестнадцатеричное
// Параметры:  _Число                - Число                - Десятичное число
// Возвращаемое значение:  Строка - Шестнадцатеричное число
//
Функция DecToHex(Знач _Число)
	
	База = 16;
	Результат = "";
	
	Пока _Число <> 0 Цикл
		Поз =_Число % База;
		Результат = Сред("0123456789ABCDEF", Поз + 1, 1) + Результат;
		_Число = Цел(_Число / База);
	КонецЦикла;
	
	Если Результат = "" Тогда
		Результат="0";
	КонецЕсли;
	
	Если СтрДлина(Результат)=1 Тогда
		Результат="0"+Результат;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // DecToHex()

// Функция переводит шестнадцатеричное число в десятичное
// Параметры: _Hex     - Строка              - Шестнадцатеричное число
// Возвращаемое значение: Число   - Десятичное число
//
Функция HexToDec(Знач _Hex)
	
	База = 16;
	_Hex = СокрЛП(_Hex);
	СтаршаяСтепень = СтрДлина(_Hex) - 1;
	Результат = 0;
	счСимволов = 1;
	
	Пока СтаршаяСтепень >= 0 Цикл
		_HexСимвол = Сред(_Hex, счСимволов, 1);
		Представление = Найти("0123456789ABCDEF", _HexСимвол) - 1;
		Результат = Результат + Представление * Степень(База, СтаршаяСтепень);
		СтаршаяСтепень = СтаршаяСтепень - 1;
		СчСимволов = СчСимволов + 1;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции // HexToDec()

// Показывать сообщения при работе с сервером (для тестов)
//
Процедура НадписьПоказыватьОтветыСервераПриИзменении(Элемент)
	
	ПоказыватьОтветСервера = ПоказыватьОтветыСервера;
	
КонецПроцедуры

// Папка выгрузки файлов с титрами
//
Процедура ТитрыПапкаВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСФайлами.ВыбратьКаталог( Элемент.Значение );

КонецПроцедуры

Процедура ЗаписыватьТитрыПриИзменении(Элемент)

	ОбновлениеОтображения();
	
КонецПроцедуры

Процедура ПутьКObserverНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Заголовок = "Выберите испольняемый файл ""Наблюдательный пост"" ...";
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
	ДиалогОткрытияФайла.Фильтр = "Observer.exe|Observer.exe|";
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ПутьКObserver = ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры

Результат = Новый Структура("Ошибка,Описание,Подробно", Ложь,"","");