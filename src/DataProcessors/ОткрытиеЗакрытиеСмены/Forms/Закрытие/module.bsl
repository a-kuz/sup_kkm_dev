
Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
		
	ТекСмена = ИнтерфейсРМ.ТекущаяСменаЗапрос();
	
	Если НЕ ЗначениеЗаполнено(ТекСмена) Тогда
		Текст1="Нет доступа!";
		Текст2="Смена не открыта...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	ДокОткрытияСмены = ТекСмена.ПолучитьОбъект();
	
	//Если ЕстьНедозакрытыеЗаказы() Тогда
	//	Текст1="Нет доступа!";
	//	Текст2="Остались закрытые заказы с незарегистрированной оплатой...";
	//	ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
	//	
	//	Обработка = ИнтерфейсРМ.ПолучитьОбъектОбработки("ЖурналЗаказов");
	//	Обработка.РежимЗакрытых = Истина;
	//	Обработка.РежимНедоЗакрытых = Истина;
	//	Обработка.ПолучитьФорму().Открыть();
	//	
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли; 
	
	Если НЕ ЗаблокироватьОткрытиеСмены() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если глПараметрыРМ.НеОткрыватьДиалогЗакрытиеСмены Тогда
		ЗакрытьСмену();
			
		ДокОткрытияСмены.Разблокировать();
		
		Отказ = Истина;
		Возврат
	КонецЕсли;
	
	ЭлементыФормы.тЗаголовок		.Заголовок = "Закрытие смены № "+ДокОткрытияСмены.Номер;
	ЭлементыФормы.тДатаОткрытия		.Заголовок = "Время открытия: "+ДокОткрытияСмены.Дата;
	ЭлементыФормы.тМестоРеализации	.Заголовок = глПараметрыРМ.МестоРеализации.Наименование;
	
	Если НЕ ИнтерфейсРМ.ПроверкаПраваДоступа(ПланыВидовХарактеристик.ПраваДоступа.ОтчетыККМ) Тогда
		ЭлементыФормы.КнопкаХотчет.Видимость = Ложь;
		ЭлементыФормы.КнопкаZотчет.Видимость = Ложь;
	КонецЕсли; 
	
	//Если глПараметрыРМ.УчетРВПриЗакрытииСменыПоказатьГрафик Тогда
	//	ПодключитьОбработчикОжидания("ПоказатьГрафикУчетаВремени", 0.2, Истина);
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ДокОткрытияСмены.Разблокировать();
	
КонецПроцедуры
 
Процедура ПриОткрытии()
	
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
КонецПроцедуры

Процедура ПоказатьГрафикУчетаВремени()


КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаВыплатаНажатие(Элемент)
	
	ОформитьВнесениеВыплату("Выплата");
	
КонецПроцедуры

Процедура КнопкаХотчетНажатие(Элемент)
	ТаблицаДействий = глПараметрыРМ.ДействияПриЗакрытииСмены;
	ЕстьХОтчет =  ТаблицаДействий.Найти("ОтчетККМ_X","Действие");
	Если ЕстьХОтчет <> Неопределено Тогда
		Текст1 = "Снятие Х-отчета";
		Текст2 ="Снятие Х-отчета есть в списке автоматических действий при закрытии смены.
		        |Продолжить?";
		Ответ=ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"ОК",,"Esc=Отмена");
		Если Ответ = "Отмена"  Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ИнтерфейсРМ.ОтчетККМ("X");
	
КонецПроцедуры

Процедура КнопкаZотчетНажатие(Элемент)
	ТаблицаДействий = глПараметрыРМ.ДействияПриЗакрытииСмены;
	ЕстьХОтчет =  ТаблицаДействий.Найти("ОтчетККМ_Z","Действие");
	Если ЕстьХОтчет <> Неопределено Тогда
		Текст1 = "Снятие Z-отчета";
		Текст2 ="Снятие Z-отчета есть в списке автоматических действий при закрытии смены.
		        |Продолжить?";
		Ответ=ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"ОК",,"Esc=Отмена");
		Если Ответ = "Отмена"  Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если НЕ ПроверкаОткрытыхЗаказов() Тогда
		Возврат;
	КонецЕсли;
	
	ИнтерфейсРМ.ОтчетККМ("Z");
	
КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	
	МассивОшибок = Новый Массив;
	ЗакрытьСмену(МассивОшибок);
		
	Если ЭтаФорма.Открыта() Тогда
		Закрыть();
	КонецЕсли; 
	Если МассивОшибок.Количество() Тогда
		ЖурналЗаказов = ИнтерфейсРМ.ПолучитьОбъектОбработки("ЖурналЗаказов").ПолучитьФорму("Форма" + глПараметрыРМ.ИнтерфейсТип);
		ЖурналЗаказов.Открыть();
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

Функция ЕстьНедозакрытыеЗаказы()
	
	Запрос = Новый Запрос("
	// оплаченные заказы
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПротоколРасчетов.Ссылка
	|ИЗ
	|	Документ.ПротоколРасчетов КАК ПротоколРасчетов
	|ГДЕ
	|	ПротоколРасчетов.Дата >= &ДатаНачала
	|	И ПротоколРасчетов.ККМ = ЗНАЧЕНИЕ(Справочник.ТорговоеОборудование.ПустаяСсылка)
	|	И НЕ ПротоколРасчетов.Неучетный
	|	И НЕ ПротоколРасчетов.ПометкаУдаления
	|	И НЕ ПротоколРасчетов.Заказ.ПометкаУдаления
	|	И ПротоколРасчетов.МестоРеализации = &МестоРеализации
	|");
	
	Запрос.УстановитьПараметр("ДатаНачала", ДокОткрытияСмены.Дата);
	Запрос.УстановитьПараметр("МестоРеализации", глПараметрыРМ.МестоРеализации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции


Процедура ОчиститьАктивностьПейджеров()

	Если глВерсия = 1 Тогда
		Возврат;
	КонецЕсли; 
	
	Для Каждого СтрокаТС Из ДокОткрытияСмены.СоставСмены Цикл
		Пейджер = СтрокаТС.Сотрудник.Пейджер;
		
		Если Пейджер.Пустая() ИЛИ Пейджер.КодМодели <> "СофтБаланс" Тогда
			Продолжить;
		КонецЕсли; 
		
		Параметры = Новый Структура;
		Результат = Пейджер.ПолучитьОбъект().ВыполнитьДействие("ОчиститьАктивность", Параметры);
        Прервать;
	КонецЦикла; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);
