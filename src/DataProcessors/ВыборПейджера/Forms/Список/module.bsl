
Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна

// Вызывается по кнопке ВЫБОР или при выборе строки списка
//
Процедура ВыборПейджера()
	
	ВыбПейджер = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ВыбПейджер) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ВыбПейджер.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Пейджер     = ВыбПейджер;
	ВыборСделан = Истина;
	
	Закрыть();
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуПейджеров()

	ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
	
	Если ЗначениеЗаполнено(глРабочееМесто.Станция.НаборПейджеров) Тогда
		СправочникСписок.Отбор.НаборПейджеров.Установить(глРабочееМесто.Станция.НаборПейджеров);
	Иначе	
		СправочникСписок.Отбор.Станция.Установить(глРабочееМесто.Станция);
	КонецЕсли; 
	
	СправочникСписок.Отбор.ПометкаУдаления.Установить(Ложь);
	СправочникСписок.Отбор.НеИспользуется.Установить(Ложь);
	СправочникСписок.Отбор.ЭтоГруппа.Установить(Ложь);
	
	// Исключим выданные пейджеры
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВыданныеПейджеры.Пейджер
	|ИЗ
	|	РегистрСведений.ВыданныеПейджеры КАК ВыданныеПейджеры");
	
	МассивВыданных = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пейджер");
	
	ОтборСсылка = СправочникСписок.Отбор.Ссылка;
	
	Если МассивВыданных.Количество() > 0 Тогда
		СписокВыданных = Новый СписокЗначений;
		СписокВыданных.ЗагрузитьЗначения(МассивВыданных);
		
		ОтборСсылка.ВидСравнения = ВидСравнения.НеВСписке;
		ОтборСсылка.Значение = СписокВыданных;
		ОтборСсылка.Использование = Истина;
	Иначе
		ОтборСсылка.Использование = Ложь;
	КонецЕсли; 
	
КонецПроцедуры
 

// Функция выполняет запрос при автоподборе текста  и при окончании ввода текста в поле ввода.
//
// Параметры
//  Текст - Строка, текст введенный в поле ввода видв контактной информации, по которому необходимо строить поиск
//  СтруктураПараметров - Структура параметров запроса, ключ - имя параметра, значение - значение параметра.
//  ТипСправочника - Тип, тип справочника автоподбора текста
//  КоличествоЭлементов - Число, количество элементов в результирующей таблице запроса
//
// Возвращаемое значение
//  РезультатЗапроса
//
Процедура ПолучитьРезультатЗапросаАвтоподбора(Знач Текст) Экспорт
	
	ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
	СправочникСписок.Отбор.ЭтоГруппа.Установить(Ложь);
	
	СправочникСписок.Отбор.Наименование.Использование = Истина;
	СправочникСписок.Отбор.Наименование.ВидСравнения = ВидСравнения.Равно;//ВидСравнения.Содержит;
	СправочникСписок.Отбор.Наименование.Значение = Текст;
	
КонецПроцедуры

Процедура НажатиеКнопки(СтрКнопки) Экспорт
	
	ЭлементыФормы.ПодстрокаПоиска.Значение = СокрЛП(ЭлементыФормы.ПодстрокаПоиска.Значение) + СтрКнопки;
	
	ПолучитьРезультатЗапросаАвтоподбора(ЭлементыФормы.ПодстрокаПоиска.Значение);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуПейджеров();
	
	РежимВыбора = Истина;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
	РаботаСокнами.CloseScreenKey();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	глОтсечкаПростоя();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборПейджера();
	
КонецПроцедуры

Процедура КнопкаВыбратьНажатие(Элемент)
	
	ВыборПейджера();
	
КонецПроцедуры

// выбор пустого пейджера
//
Процедура КнопкаУдалитьНажатие(Элемент)
	
	Пейджер = Справочники.Пейджеры.ПустаяСсылка();
	ВыборСделан = Истина;
	Закрыть();
	
КонецПроцедуры

Процедура КнопкаЛистВверхНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.СправочникСписок;
	WshShell.SendKeys("{PGUP}");
	
КонецПроцедуры

Процедура КнопкаСтрелкаВверхНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.СправочникСписок;
	WshShell.SendKeys("{UP}");
	
КонецПроцедуры

Процедура КнопкаСтрелкаВнизНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.СправочникСписок;
	WshShell.SendKeys("{DOWN}");
	
КонецПроцедуры

Процедура КнопкаЛистВнизНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.СправочникСписок;
	WshShell.SendKeys("{PGDN}");
	
КонецПроцедуры

Процедура КнопкаЭкраннаяКлаваНажатие(Элемент)
	
	Перем X, Y;
	
	ИнтерфейсРМ.ЭкраннаяКлавиатура();
	
	ТекущийЭлемент = ЭлементыФормы.ПодстрокаПоиска;
	
	// переместим окно вверх, чтобы клава не перекрывала
	//hWnd = РаботаСокнами.FindMDIChildV8( Заголовок );
	
	//РаботаСокнами.GetWndPosV8( глСтекОкон[0].hWnd, X, Y );
	//РаботаСокнами.УстановитьПоложениеОкнаV8( глСтекОкон[0].hWnd, X, 0 );
	
КонецПроцедуры

Процедура КнопкаВводЧислаНажатие(Элемент)
	
	НомерПейджера = ИнтерфейсРМ.ВводЧисла("Номер пейджера", "Число", 15, 0 );
	
	Если НомерПейджера <> Неопределено Тогда
		ЭлементыФормы.ПодстрокаПоиска.Значение = СокрЛП(СтрЗаменить(НомерПейджера, Символы.НПП, ""));
		
		ПолучитьРезультатЗапросаАвтоподбора(ЭлементыФормы.ПодстрокаПоиска.Значение);
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ПодстрокаПоискаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПолучитьРезультатЗапросаАвтоподбора(Текст);
	
КонецПроцедуры

Процедура ПодстрокаПоискаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значение = Текст;
	
	ПолучитьРезультатЗапросаАвтоподбора(Текст);
	
КонецПроцедуры

Процедура КнопкаОчиститьФильтрНажатие(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	СправочникСписок.Отбор.Наименование.Использование = Ложь;
	
	ПодстрокаПоиска = "";
	ТекущийЭлемент = ЭлементыФормы.ПодстрокаПоиска;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока) Тогда
		ЭлементыФормы.СправочникСписок.ТекущаяСтрока = ТекущаяСтрока;
	КонецЕсли; 
	
КонецПроцедуры

Процедура Кнопка0Нажатие(Элемент)
	
	НажатиеКнопки("0");
	
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	НажатиеКнопки("1");
	
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	
	НажатиеКнопки("2");
	
КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	
	НажатиеКнопки("3");
	
КонецПроцедуры

Процедура Кнопка4Нажатие(Элемент)
	
	НажатиеКнопки("4");
	
КонецПроцедуры

Процедура Кнопка5Нажатие(Элемент)
	
	НажатиеКнопки("5");
	
КонецПроцедуры

Процедура Кнопка6Нажатие(Элемент)
	
	НажатиеКнопки("6");
	
КонецПроцедуры

Процедура Кнопка7Нажатие(Элемент)
	
	НажатиеКнопки("7");
	
КонецПроцедуры

Процедура Кнопка8Нажатие(Элемент)
	
	НажатиеКнопки("8");
	
КонецПроцедуры

Процедура Кнопка9Нажатие(Элемент)
	
	НажатиеКнопки("9");
	
КонецПроцедуры

Процедура Кнопка00Нажатие(Элемент)
	
	НажатиеКнопки("00");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);
