
Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна

Перем ККМ,СписокДопККМ;
Перем ИспользоватьГруппыОплаты, ТаблицаГруппыОплаты;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МОДУЛЯ

Процедура ЗаполнитьДанныеПоЗаказу()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ",Заказ);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказТовары.Товар КАК Товар,
	|	ЗаказТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаказТовары.ГруппаОплаты КАК ГруппаОплаты,
	|	ЗаказТовары.ТипЦен КАК ТипЦен,
	|	ЗаказТовары.Количество КАК КоличествоВсего,
	|	ЗаказТовары.СуммаРеализации КАК СуммаВсего,
	|	ЕСТЬNULL(ВозвратТовары.Количество, 0) КАК КоличествоВозврат,
	|	ЕСТЬNULL(ВозвратТовары.Сумма, 0) КАК СуммаВозврат,
	|	ЗаказТовары.Фирма КАК Фирма
	|ИЗ
	|	Документ.Заказ.Товары КАК ЗаказТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВозвратТовары.Товар КАК Товар,
	|			ВозвратТовары.НомерСтрокиЗаказа КАК НомерСтрокиЗаказа,
	|			СУММА(ВозвратТовары.Количество) КАК Количество,
	|			СУММА(ВозвратТовары.Сумма) КАК Сумма
	|		ИЗ
	|			Документ.Возврат.Товары КАК ВозвратТовары
	|		ГДЕ
	|			ВозвратТовары.Ссылка.Заказ = &Заказ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВозвратТовары.Товар,
	|			ВозвратТовары.НомерСтрокиЗаказа) КАК ВозвратТовары
	|		ПО ЗаказТовары.Товар = ВозвратТовары.Товар
	|			И ЗаказТовары.НомерСтроки = ВозвратТовары.НомерСтрокиЗаказа
	|ГДЕ
	|	ЗаказТовары.Ссылка = &Заказ
	|	И ЗаказТовары.Количество <> 0
	|	И ЗаказТовары.Фирма.МестоРеализации = ЗНАЧЕНИЕ(справочник.местареализации.ресторан)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказТовары.НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаЗаказа = ТаблицаЗаказа.Строки.Добавить();
		СтрокаЗаказа.Товар				= Выборка.Товар;
		СтрокаЗаказа.НомерСтроки		= Выборка.НомерСтроки;
		СтрокаЗаказа.Наименование		= Выборка.Товар.Наименование;
		СтрокаЗаказа.ГруппаОплаты		= Выборка.ГруппаОплаты;
		СтрокаЗаказа.ТипЦен				= Выборка.ТипЦен;
		СтрокаЗаказа.Цена				= Выборка.СуммаВсего / Выборка.КоличествоВсего;
		СтрокаЗаказа.КоличествоВсего	= Выборка.КоличествоВсего;
		СтрокаЗаказа.СуммаВсего			= Выборка.СуммаВсего;
		СтрокаЗаказа.КоличествоВозврат	= Выборка.КоличествоВозврат;
		СтрокаЗаказа.СуммаВозврат		= Выборка.СуммаВозврат;
		СтрокаЗаказа.КоличествоОстаток	= Выборка.КоличествоВсего - Выборка.КоличествоВозврат;
		СтрокаЗаказа.СуммаОстаток		= Выборка.СуммаВсего - Выборка.СуммаВозврат;
		СтрокаЗаказа.Фирма		= Выборка.Фирма;
		
	КонецЦикла;
	
	Если глВерсия>1 Тогда
		
		// специфики в отдельной ТЧ, привязка по номеру строки товара
		ТаблицаСпецифик = Заказ.Специфики.Выгрузить();
		ТаблицаСпецифик.Колонки.Добавить("СтрокаТаблицыЗаказа");
		Для каждого СтрокаДок Из ТаблицаСпецифик Цикл
			Если СтрокаДок.НомерСтрокиСпецифики = 0 Тогда
				СтрокаТовара = ТаблицаЗаказа.Строки.Найти(СтрокаДок.НомерСтрокиТовара, "НомерСтроки");
			Иначе
				СтрокаТовара = ТаблицаСпецифик[СтрокаДок.НомерСтрокиСпецифики-1].СтрокаТаблицыЗаказа;
			КонецЕсли; 
			Если СтрокаТовара <> Неопределено Тогда
				СтрокаСпецифик = СтрокаТовара.Строки.Добавить();
				СтрокаСпецифик.Товар		= СтрокаДок.Специфика;
				СтрокаСпецифик.Наименование	= СтрДополнитьСправа("",(СтрокаСпецифик.Уровень()-1)*3) + " - "+СтрокаДок.Специфика.Наименование;
				СтрокаДок.СтрокаТаблицыЗаказа = СтрокаСпецифик;
			КонецЕсли; 
		КонецЦикла;
		
		// разворачиваем специфики, если нужно
		ТабПолеТЗ = ЭлементыФормы.ТаблицаЗаказа;
		Для каждого СтрокаТовара Из ТаблицаЗаказа.Строки Цикл
			ТабПолеТЗ.Развернуть(СтрокаТовара, Истина);
		КонецЦикла;
		
	КонецЕсли; 
	
	// оплата
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПротоколРасчетов.ГруппаОплаты,
	|	ПротоколРасчетов.ВариантОплаты,
	|	ПротоколРасчетов.Сумма КАК СуммаВсего,
	|	ЕСТЬNULL(Возврат.Сумма, 0) КАК СуммаВозврат
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПротоколРасчетовПротокол.Ссылка.ГруппаОплаты КАК ГруппаОплаты,
	|		ПротоколРасчетовПротокол.ВариантОплаты КАК ВариантОплаты,
	|		СУММА(ПротоколРасчетовПротокол.СуммаФакт) КАК Сумма
	|	ИЗ
	|		Документ.ПротоколРасчетов.Протокол КАК ПротоколРасчетовПротокол
	|	ГДЕ
	|		ПротоколРасчетовПротокол.Ссылка.Заказ = &Заказ
	|		И ПротоколРасчетовПротокол.ВариантОплаты <> ЗНАЧЕНИЕ(Справочник.ВариантыОплаты.ПустаяСсылка)
	|		И НЕ ПротоколРасчетовПротокол.Ссылка.Неучетный
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПротоколРасчетовПротокол.Ссылка.ГруппаОплаты,
	|		ПротоколРасчетовПротокол.ВариантОплаты) КАК ПротоколРасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Возврат.ГруппаОплаты КАК группаОплаты,
	|			Возврат.ВариантОплаты КАК ВариантОплаты,
	|			СУММА(Возврат.Сумма) КАК Сумма
	|		ИЗ
	|			Документ.Возврат КАК Возврат
	|		ГДЕ
	|			Возврат.Заказ = &Заказ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Возврат.ГруппаОплаты,
	|			Возврат.ВариантОплаты) КАК Возврат
	|		ПО ПротоколРасчетов.ВариантОплаты = Возврат.ВариантОплаты
	|			И ПротоколРасчетов.ГруппаОплаты = Возврат.группаОплаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПротоколРасчетов.ВариантОплаты.Тип";
	
	//ПротоколРасчетов = РегистрыСведений.ЗаказДопИнф.Получить(Новый Структура("Заказ",Заказ)).ПротоколРасчетов;
	//Запрос.УстановитьПараметр("ПротоколРасчетов",ПротоколРасчетов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаОплата = ТаблицаОплаты.Добавить();
		СтрокаОплата.ГруппаОплаты		= Выборка.ГруппаОплаты;
		СтрокаОплата.ВариантОплаты		= Выборка.ВариантОплаты;
		СтрокаОплата.СуммаВсего			= Выборка.СуммаВсего;
		СтрокаОплата.СуммаВозврат		= Выборка.СуммаВозврат;
		СтрокаОплата.СуммаОстаток		= Выборка.СуммаВсего - Выборка.СуммаВозврат;
	КонецЦикла;
	
	// если возврат по заказу с нулевой суммой, чтобы сработала запись возврата
	Если ТаблицаОплаты.Количество() = 0 Тогда
		ТаблицаОплаты.Добавить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьКоличество(СтрокаЗаказа)
	
	Если СтрокаЗаказа = Неопределено Тогда
		Возврат;
	ИначеЕсли СтрокаЗаказа.Уровень() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Кратность = СтрокаЗаказа.Товар.КратностьКоличества;
	Если Цел(Кратность) <> Кратность Тогда
		Длина		= 10;
		Точность	= 3;
	Иначе
		Длина		= 6;
		Точность	= 0;
	КонецЕсли;
	
	Колво = ИнтерфейсРМ.ВводЧисла("Количество", "Число", Длина, Точность, СтрокаЗаказа.КоличествоОстаток, Кратность);
	
	Если Колво=СтрокаЗаказа.Количество ИЛИ Колво=Неопределено Тогда
		Возврат;
	ИначеЕсли Колво>СтрокаЗаказа.КоличествоОстаток Тогда
		Текст1="Некорректное значение!";
		Текст2="Нельзя вернуть больше, чем было продано...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
	КонецЕсли;
	
	СтрокаЗаказа.Количество = Колво;
	СтрокаЗаказа.Сумма		= СтрокаЗаказа.СуммаОстаток / СтрокаЗаказа.КоличествоОстаток * СтрокаЗаказа.Количество;
	
	ОпределитьГруппыОплаты();
	РаспределитьСуммуПоВариантамОплаты(СтрокаЗаказа.ГруппаОплаты);
	
КонецПроцедуры

Процедура ВернутьВсе()
	
	Для каждого СтрокаЗаказа Из ТаблицаЗаказа.Строки Цикл
		СтрокаЗаказа.Количество = СтрокаЗаказа.КоличествоОстаток;
		СтрокаЗаказа.Сумма		= СтрокаЗаказа.СуммаОстаток;
	КонецЦикла;
	
	ОпределитьГруппыОплаты();
	РаспределитьСуммуПоВариантамОплаты();
	
КонецПроцедуры
 
Процедура ОформитьВозврат()
	
	Если ТаблицаЗаказа.Строки.Итог("Количество")=0 Тогда
		Текст1="Нет доступа!";
		Текст2="Укажите возвращаемые позиции...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
	КонецЕсли;
	
	Если ТаблицаОплаты.Итог("Сумма") <> ТаблицаЗаказа.Строки.Итог("Сумма") Тогда
		Текст1="Нет доступа!";
		Текст2="Ошибка распределения суммы по вариантам оплаты!";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
	КонецЕсли;
	
	Текст1 = "Возврат";
	Текст2 = "Сумма:";
	Для каждого СтрокаОплата Из ТаблицаОплаты Цикл
		Если СтрокаОплата.Сумма > 0 Тогда
			Текст2 = Текст2 + " " + ФорматСумм(СтрокаОплата.Сумма)+" "+СтрокаОплата.ВариантОплаты.Наименование;
		КонецЕсли;
	КонецЦикла;
	
	Ответ = ИнтерфейсРМ.ВопросПредупреждение("Подтверждение",Текст1,Текст2,"ОК","","Esc=Отмена", ГоризонтальноеПоложение.Лево);
	Если Ответ="Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	//--------------------------------------------------------
	СуммаВозвратаВсего = ТаблицаОплаты.Итог("Сумма");
	ДокОткрытияСмены = ИнтерфейсРМ.ТекущаяСмена();
	
	ИнтерфейсРМ.ВыводНаДП("ВывестиТекст",
						"ВОЗВРАТ", ,
						"Сумма:", СуммаВозвратаВсего);
						
	глОжидание.Начало("Печать чека...",
						"Идет запись данных и печать чека на ККМ.
						|Пожалуйста, подождите...");
						
	РаспределеннаяСумма = 0;
	Для каждого СтрокаОплата Из ТаблицаОплаты Цикл
		
		Если СуммаВозвратаВсего>0 И СтрокаОплата.Сумма=0 Тогда
			Продолжить;
		КонецЕсли;
		
		//--------------------------------------------------------
		Если СтрокаОплата.ВариантОплаты.Тип = Перечисления.ТипыОплаты.Карта Тогда
			СсылочныйНомер	= "";
			ДанныеКарты		= "";
			Если НЕ Защита.ЗапросПлатежнойСистемы("Возврат", СтрокаОплата.Сумма, ДокОткрытияСмены.Номер, 0, СсылочныйНомер, ДанныеКарты, СтрокаОплата.ВариантОплаты) Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		//--------------------------------------------------------
		
		СуммаВозврата = 0;
		МассивСтрокВозврата = ПолучитьСписокПозицийДляВозврата(СтрокаОплата.ГруппаОплаты, СуммаВозврата);
		
		ДоляВариантаОплаты = ?(СуммаВозврата=0, 1, СтрокаОплата.Сумма / СуммаВозврата);
		РаспределеннаяСумма = РаспределеннаяСумма + СтрокаОплата.Сумма;
		ЭтоПоследнийВариантОплаты = (РаспределеннаяСумма = СуммаВозвратаВсего);
		
		Если НЕ ИспользоватьГруппыОплаты Тогда
			ТекККМ = ККМ;
		Иначе
			ТекККМ	= ККМГруппыОплаты(СтрокаОплата.ГруппаОплаты);
		КонецЕсли;
		
		
		//Для каждого ГруппыОплаты Из ТаблицаГруппыОплаты Цикл
			// попробуем записать Документ и распечатать чек
			НачатьТранзакцию();
		
			Док = Документы.Возврат.СоздатьДокумент();
			Док.Дата			= ТекущаяДата();
			Док.Автор			= глПользователь;
			Док.Смена			= ДокОткрытияСмены;
			Док.Заказ			= Заказ;
			Док.МестоРеализации	= Заказ.МестоРеализации;
			Док.ПосадочноеМесто	= Заказ.ПосадочноеМесто;
			Док.Клиент			= Заказ.Клиент;
			Док.ВариантОплаты	= СтрокаОплата.ВариантОплаты;
			//Док.ККМ				= ГруппыОплаты.ККМ;
			Док.ККМ				=  ТекККМ;
			Док.Причина			= ПричинаВозврата;
			//Док.ГруппаОплаты	= ГруппыОплаты.Группа;
			Док.ГруппаОплаты	= СтрокаОплата.ГруппаОплаты;

			//Для каждого СтрокаЗаказа Из ТаблицаЗаказа.Строки Цикл
			Для н=1 По МассивСтрокВозврата.Количество() Цикл
			
				СтрокаЗаказа = МассивСтрокВозврата[н-1];
			
				//Если СтрокаЗаказа.Количество=0 ИЛИ ИспользоватьГруппыОплаты И ГруппыОплаты.Группа <> СтрокаЗаказа.ГруппаОплаты Тогда
				//	Продолжить;
				//КонецЕсли; 
				
				СтрокаДок = Док.Товары.Добавить();
				СтрокаДок.Товар				= СтрокаЗаказа.Товар;
				СтрокаДок.НомерСтрокиЗаказа	= СтрокаЗаказа.НомерСтроки;
				СтрокаДок.ГруппаОплаты		= СтрокаЗаказа.ГруппаОплаты;
				СтрокаДок.ТипЦен			= СтрокаЗаказа.ТипЦен;
				СтрокаДок.Фирма = СтрокаЗаказа.Фирма;
				
				Если ЭтоПоследнийВариантОплаты Тогда
					СтрокаДок.Количество	= СтрокаЗаказа.Количество	- СтрокаЗаказа.КолвоРаспределения;
					СтрокаДок.Сумма			= СтрокаЗаказа.Сумма		- СтрокаЗаказа.СуммаРаспределения;
				ИначеЕсли н = МассивСтрокВозврата.Количество() Тогда
					СтрокаДок.Количество	= СтрокаЗаказа.Количество	* ДоляВариантаОплаты;
					СтрокаДок.Сумма			= СтрокаОплата.Сумма		- Док.Товары.Итог("Сумма");
					
					СтрокаЗаказа.КолвоРаспределения	= СтрокаЗаказа.КолвоРаспределения + СтрокаДок.Количество;
					СтрокаЗаказа.СуммаРаспределения = СтрокаЗаказа.СуммаРаспределения + СтрокаДок.Сумма;
				Иначе
					СтрокаДок.Количество	= СтрокаЗаказа.Количество	* ДоляВариантаОплаты;
					СтрокаДок.Сумма			= СтрокаЗаказа.Сумма		* ДоляВариантаОплаты;
					
					СтрокаЗаказа.КолвоРаспределения	= СтрокаЗаказа.КолвоРаспределения + СтрокаДок.Количество;
					СтрокаЗаказа.СуммаРаспределения = СтрокаЗаказа.СуммаРаспределения + СтрокаДок.Сумма;
				КонецЕсли; 
				
				ЗаписатьСпецифики(Док, СтрокаЗаказа.Строки, СтрокаДок);
				
			КонецЦикла;
			
			Док.Сумма = Док.Товары.Итог("Сумма");
			
			ФлагОК = ИнтерфейсРМ.ПопыткаДействияСОбъектом( Док, "Объект.Записать(РежимЗаписиДокумента.Проведение)" );
			
			Если ФлагОК И Заказ.Доставка Тогда
				ДоставкаДопИнф = РегистрыСведений.ДоставкаДопИнф.СоздатьМенеджерЗаписи();
				ДоставкаДопИнф.Период	= ТекущаяДата();
				ДоставкаДопИнф.Заказ	= Заказ.Ссылка;
				ДоставкаДопИнф.Статус	= Перечисления.СтатусыДоставки.Отказ;
				ДоставкаДопИнф.Автор	= глПользователь;
				
				ФлагОК = ИнтерфейсРМ.ПопыткаДействияСОбъектом( ДоставкаДопИнф, "Объект.Записать()" );
				
			КонецЕсли; 
			
			Если ФлагОК И Док.Сумма>0  Тогда
				ОбработкаПечати = ИнтерфейсРМ.ПолучитьОбъектОбработки("ПечатьЧека");
				//ОбработкаПечати.ККМ = ГруппыОплаты.ККМ;
				//:ОбработкаПечати = Обработки.ПечатьЧека.Создать();
				ОбработкаПечати.ККМ = ТекККМ;
				ФлагОК = ОбработкаПечати.ФискализацияВозврата(Док, СтрокаОплата.ВариантОплаты);
				ИнтерфейсРМ.ПопыткаДействияСОбъектом( Док, "Объект.Записать(РежимЗаписиДокумента.Проведение)" );
			КонецЕсли;
			
			Если ФлагОК Тогда
				
				ЛояльностьКлиентСервер.Логирование(1, "финализация возврата", "начало (возврат="+Док.Номер+")");
				Лояльность.ЗаписатьВСПУЛ(Док.Ссылка);
				Лояльность.ЗапуститьОбработкуСПУЛаЛояльности();
				ЛояльностьКлиентСервер.Логирование(1, "финализация возврата", "конец (возврат="+Док.Номер+")");
					
				ЗафиксироватьТранзакцию();
				
				ИнтерфейсРМ.ЗаписьСобытия(Справочники.События.ОплатаВозврат, Док.Ссылка, Док.Номер, Док.Сумма, Док.Причина);		
				Оповестить("ВыходИзЗаказа", Док.Ссылка);	// чтобы сразу спозиционироваться в журнале закрытых
				
			Иначе
				
				ОтменитьТранзакцию();
				
				Если ЗначениеЗаполнено(ДанныеКарты) Тогда
					Защита.ЗапросПлатежнойСистемы("ОтменаВозврата", СтрокаОплата.Сумма, ДокОткрытияСмены.Номер, 0, СсылочныйНомер, ДанныеКарты, СтрокаОплата.ВариантОплаты);
				КонецЕсли;
				
				глОжидание.Конец();
				Если Открыта() Тогда
					Закрыть();
				КонецЕсли; 
				
				Возврат;
			КонецЕсли;
			
		//КонецЦикла;
		
	КонецЦикла;
	
	глОжидание.Конец();
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьСписокПозицийДляВозврата(ГруппаОплаты, СуммаВозврата)
	
	МассивСтрокВозврата = Новый Массив;
	
	Для Каждого СтрокаЗаказа Из ТаблицаЗаказа.Строки Цикл
		Если СтрокаЗаказа.Количество=0 ИЛИ ИспользоватьГруппыОплаты И ГруппаОплаты <> СтрокаЗаказа.ГруппаОплаты Тогда
			Продолжить;
		КонецЕсли; 
		//:СтрокаЗаказа = Заказ.Товары[0];	
		Если ЗначениеЗаполнено(СтрокаЗаказа.Фирма) Тогда
			Если СтрокаЗаказа.Фирма.МестоРеализации <> Справочники.МестаРеализации.Ресторан Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		МассивСтрокВозврата.Добавить(СтрокаЗаказа);
		СуммаВозврата = СуммаВозврата + СтрокаЗаказа.Сумма;
		
	КонецЦикла;	
	
	Возврат МассивСтрокВозврата;
	
КонецФункции	

Процедура ЗаписатьСпецифики(ДокВозврат, СтрокиСпецифик, СтрокаДок, НомерСтрокиСпецифики=0)

	Для каждого СтрокаСпецифики Из СтрокиСпецифик Цикл
		СтрокаДокСпец = ДокВозврат.Специфики.Добавить();
		СтрокаДокСпец.НомерСтрокиТовара		= СтрокаДок.НомерСтроки;
		СтрокаДокСпец.НомерСтрокиСпецифики	= НомерСтрокиСпецифики;
		СтрокаДокСпец.Специфика				= СтрокаСпецифики.Товар;
		СтрокаДокСпец.ГруппаОплаты			= СтрокаДок.ГруппаОплаты;
		СтрокаДокСпец.Количество			= СтрокаДок.Количество;
		// вложенные специфики
		ЗаписатьСпецифики(ДокВозврат, СтрокаСпецифики.Строки, СтрокаДок, СтрокаДокСпец.НомерСтроки)
	КонецЦикла; 

КонецПроцедуры
 
Функция ВыборПричины()
	
	ВыбПричина = ИнтерфейсРМ.ВыборПричиныОтказа(Перечисления.ТипыПричинУдалений.Возврат);
	Если ВыбПричина=Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПричинаВозврата = ВыбПричина;
	ЭлементыФормы.КнопкаПричинаВозврата.Заголовок = ПричинаВозврата.Наименование;
	
	Возврат Истина;
КонецФункции

Процедура ОпределитьГруппыОплаты()
	
	ИспользоватьГруппыОплаты = Константы.ИспользоватьГруппыОплаты.Получить();
	
	ТаблицаГруппыОплаты = Новый ТаблицаЗначений;
	ТаблицаГруппыОплаты.Колонки.Добавить("Группа");
	ТаблицаГруппыОплаты.Колонки.Добавить("ККМ");
	
	// если группы оплаты не используются, то делаем фиктивную запись для совместимости алгоритма
	Если НЕ ИспользоватьГруппыОплаты Тогда
		ГруппыОплаты = ТаблицаГруппыОплаты.Добавить();
		ГруппыОплаты.ККМ = ККМ;
		
	Иначе
		// реальные группы оплаты
		Для каждого СтрокаЗаказа Из ТаблицаЗаказа.Строки Цикл
			Если СтрокаЗаказа.Количество=0 Тогда
				Продолжить;
			КонецЕсли;
			
			ГруппыОплаты = ТаблицаГруппыОплаты.Добавить();
			ГруппыОплаты.Группа	= СтрокаЗаказа.ГруппаОплаты;
			ГруппыОплаты.ККМ	= ККМГруппыОплаты(ГруппыОплаты.Группа);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаГруппыОплаты.Свернуть("Группа,ККМ");
	
	Если ТаблицаГруппыОплаты.Количество() = 0 Тогда
		ЭлементыФормы.КнопкаККМ.Заголовок = "";
		
	ИначеЕсли ТаблицаГруппыОплаты.Количество() = 1 Тогда
		ККМ = ТаблицаГруппыОплаты[0].ККМ;
		ЭлементыФормы.КнопкаККМ.Заголовок = ККМ.Наименование;
		
	Иначе
		ЭлементыФормы.КнопкаККМ.Заголовок = "Раздельная регистрация!!!";
	КонецЕсли;
	
КонецПроцедуры

Функция ККМГруппыОплаты(Группа)
	
	СтрокаГруппы = глПараметрыРМ.ККМГруппыОплаты.Найти(Группа,"Группа");
	
	Возврат ?(СтрокаГруппы=Неопределено, ККМ, СтрокаГруппы.ККМ);
КонецФункции

Процедура РаспределитьСуммуПоВариантамОплаты(ГруппаОплаты=Неопределено, СтрокаКорректировки=Неопределено)

	СуммаВозврата = 0;
	Если ИспользоватьГруппыОплаты И ГруппаОплаты <> Неопределено Тогда
		СтрокиЗаказаПоГруппеОплаты = ТаблицаЗаказа.Строки.НайтиСтроки(Новый Структура("ГруппаОплаты", ГруппаОПлаты));
		Для каждого СтрокаЗаказа Из СтрокиЗаказаПоГруппеОплаты Цикл
			СуммаВозврата = СуммаВозврата + СтрокаЗаказа.Сумма;
		КонецЦикла; 
	Иначе
		СуммаВозврата = ТаблицаЗаказа.Строки.Итог("Сумма");
	КонецЕсли;
	
	Если СтрокаКорректировки <> Неопределено Тогда
		СуммаВозврата = СуммаВозврата - СтрокаКорректировки.Сумма;
	КонецЕсли; 
	
	Для каждого СтрокаОплата Из ТаблицаОплаты Цикл
		Если СтрокаОплата = СтрокаКорректировки 
			ИЛИ (ГруппаОплаты <> Неопределено И СтрокаОплата.ГруппаОплаты <> ГруппаОплаты) Тогда
			Продолжить;
		КонецЕсли; 
		
		СтрокаОплата.Сумма = Мин(СтрокаОплата.СуммаОстаток, СуммаВозврата);
		СуммаВозврата = СуммаВозврата - СтрокаОплата.Сумма;
		
	КонецЦикла;
	
	//Если СуммаВозврата > 0 И СтрокаКорректировки <> Неопределено Тогда
	//	СтрокаКорректировки.Сумма = Мин(СтрокаКорректировки.СуммаОстаток, СтрокаКорректировки.Сумма + СуммаВозврата);
	//КонецЕсли; 
	
	// суммы должны сходиться, для наглядной проверки выведем из разных источников
	ЭлементыФормы.тСуммаВозврата.Заголовок = "Сумма: " + ФорматСумм(ТаблицаОплаты.Итог("Сумма"));
	ЭлементыФормы.ТаблицаЗаказа.Колонки.Сумма.ТекстПодвала = ФорматСумм(ТаблицаЗаказа.Строки.Итог("Сумма"));

КонецПроцедуры

Процедура ВводСуммыНаВариантОплаты(СтрокаОплата)
	
	Если СтрокаОплата.СуммаОстаток = 0 ИЛИ ТаблицаОплаты.Количество() = 1 Тогда
		Возврат;
	КонецЕсли; 
	
	СуммаВозврата = 0;
	СуммаОстаток = 0;
	Если ИспользоватьГруппыОплаты Тогда
		СтрокиЗаказаПоГруппеОплаты = ТаблицаЗаказа.Строки.НайтиСтроки(Новый Структура("ГруппаОплаты", СтрокаОплата.ГруппаОПлаты));
		Для каждого СтрокаЗаказа Из СтрокиЗаказаПоГруппеОплаты Цикл
			СуммаВозврата = СуммаВозврата + СтрокаЗаказа.Сумма;
			СуммаОстаток = СуммаОстаток + СтрокаЗаказа.СуммаОстаток;
		КонецЦикла; 
	Иначе
		СуммаВозврата = ТаблицаЗаказа.Строки.Итог("Сумма");
		СуммаОстаток = ТаблицаЗаказа.Строки.Итог("СуммаОстаток");
	КонецЕсли; 
	// если полный возврат, то менять уже нечего
	Если СуммаВозврата = 0 ИЛИ СуммаВозврата = СуммаОстаток Тогда
		Возврат;
	КонецЕсли; 
	
	ДопСумма = Мин(СуммаВозврата, СтрокаОплата.СуммаОстаток);
	Сумма = ИнтерфейсРМ.ВводЧисла("Сумма", "Число", 12, 2, ДопСумма);
	
	Если Сумма = СтрокаОплата.Сумма ИЛИ Сумма = Неопределено Тогда
		Возврат;
	ИначеЕсли Сумма > ДопСумма Тогда
		Текст1="Некорректное значение!";
		Текст2="Нельзя вернуть больше, чем было оплачено...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
	КонецЕсли;
	
	СтрокаОплата.Сумма = Сумма;
	РаспределитьСуммуПоВариантамОплаты(СтрокаОплата.ГруппаОплаты, СтрокаОплата);
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ глПараметрыРМ.ККМЕсть Тогда
		Текст1="Нет доступа!";
		Текст2="Данное рабочее место не является кассовым!";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеПоЗаказу();
	
	Если ТаблицаЗаказа.Строки.Итог("КоличествоОстаток")<>0 И НЕ ВыборПричины() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ККМ = глПараметрыРМ.ККМ;
	Если глПараметрыРМ.ККМЕстьДоп И ЗначениеЗаполнено(глПараметрыРМ.ККМСписокДоп) Тогда
		СписокДопККМ = глПараметрыРМ.ККМСписокДоп.Скопировать();
		СписокДопККМ.Вставить(0,ККМ);
	КонецЕсли; 
	
	ОпределитьГруппыОплаты();
	
	Если Заказ.Доставка Тогда
		ВернутьВсе();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// неизменяемые надписи
	ЭлементыФормы.тНомерЗаказа	.Заголовок = "Возврат по заказу № " +УбратьВсеБуквы(Заказ.Номер)+ " (" +Формат(Заказ.Дата,"ДФ=дд.ММ.гггг")+" "+Формат(Заказ.Дата,"ДФ=ЧЧ:мм")+ ")";
	ЭлементыФормы.тМесто		.Заголовок = НаимПосадочногоМеста(Заказ.ПосадочноеМесто);
	ЭлементыФормы.тКлиент		.Заголовок = ?(ЗначениеЗаполнено(Заказ.Клиент), Заказ.Клиент.Наименование, "");
	
	ЭлементыФормы.КнопкаККМ				.Заголовок = ККМ.Наименование;
	
	ЭлементыФормы.ТаблицаЗаказа.Колонки.СуммаОстаток.ТекстПодвала = ФорматСумм(ТаблицаЗаказа.Строки.Итог("СуммаОстаток"));
	
	// Видимость группы оплаты
	Если ТаблицаГруппыОплаты.Количество() = 1 Тогда
		ЭлементыФормы.ТаблицаОплаты.Колонки.ГруппаОплаты.Видимость = Ложь;
	КонецЕсли; 
	
	Если ТаблицаЗаказа.Строки.Итог("КоличествоВозврат") = 0 Тогда
		ЭлементыФормы.ТаблицаЗаказа.Колонки.КоличествоВозврат.Видимость = Ложь;
		ЭлементыФормы.ТаблицаЗаказа.Колонки.КоличествоВсего	.Видимость = Ложь;
		ЭлементыФормы.ТаблицаЗаказа.Колонки.СуммаВозврат	.Видимость = Ложь;
		ЭлементыФормы.ТаблицаЗаказа.Колонки.СуммаВсего		.Видимость = Ложь;
		
		ЭлементыФормы.ТаблицаЗаказа.Колонки.КоличествоОстаток	.Ширина = 10;
		ЭлементыФормы.ТаблицаЗаказа.Колонки.СуммаОстаток		.Ширина = 10;
		
		ЭлементыФормы.ТаблицаОплаты.Колонки.СуммаВозврат	.Видимость = Ложь;
		ЭлементыФормы.ТаблицаОплаты.Колонки.СуммаВсего		.Видимость = Ложь;
		
	Иначе	
		ЭлементыФормы.ТаблицаЗаказа.Колонки.СуммаВсего.ТекстПодвала		= ФорматСумм(ТаблицаЗаказа.Строки.Итог("СуммаВсего"));
		ЭлементыФормы.ТаблицаЗаказа.Колонки.СуммаВозврат.ТекстПодвала	= ФорматСумм(ТаблицаЗаказа.Строки.Итог("СуммаВозврат"));
		
	КонецЕсли; 
	
	// вывод на дисплей покупателя
	ИнтерфейсРМ.ВыводНаДП("СоздатьОкно");
	ИнтерфейсРМ.ВыводНаДП("ВывестиТекст", "ВОЗВРАТ"+Символы.ПС+"ПО ЗАКАЗУ N "+Число(Заказ.Номер) );
	
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
	ИнтерфейсРМ.ВыводНаДП("Ожидание");
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	глОтсечкаПростоя();
	ТекущийЭлемент = ЭлементыФормы.ТаблицаЗаказа;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаККМНажатие(Элемент)
	
	Если НЕ ИнтерфейсРМ.ПроверкаПраваДоступа("ВыборККМ") ИЛИ НЕ ЗначениеЗаполнено(СписокДопККМ) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбККМ = ИнтерфейсРМ.ВыборИзСписка(СписокДопККМ);
	Если ВыбККМ=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ККМ = ВыбККМ;  
	ЭлементыФормы.КнопкаККМ.Заголовок = ККМ.Наименование;
	
	Для каждого ГруппыОплаты Из ТаблицаГруппыОплаты Цикл
		ГруппыОплаты.ККМ = ВыбККМ;
	КонецЦикла;
	
	ИнтерфейсРМ.ЗаписьСобытия(Справочники.События.ОплатаВыборККМ, Заказ.Ссылка, ККМ.Наименование);
	
КонецПроцедуры

Процедура КнопкаОплатаНажатие(Элемент)
	
	ОформитьВозврат();
	
КонецПроцедуры

Процедура ТаблицаЗаказаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ИзменитьКоличество(ВыбраннаяСтрока);
	
КонецПроцедуры

Процедура КнопкаКоличествоНажатие(Элемент)
	
	ИзменитьКоличество(ЭлементыФормы.ТаблицаЗаказа.ТекущаяСтрока);
	
КонецПроцедуры

Процедура КнопкаСтрелкаВверхНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.ТаблицаЗаказа;
	WshShell.SendKeys("{UP}");
	
КонецПроцедуры

Процедура КнопкаСтрелкаВнизНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.ТаблицаЗаказа;
	WshShell.SendKeys("{DOWN}");
	
КонецПроцедуры

Процедура КнопкаПричинаВозвратаНажатие(Элемент)
	
	ВыборПричины();
	
КонецПроцедуры

Процедура КнопкаВернутьВсеНажатие(Элемент)
	
	ВернутьВсе();
	
КонецПроцедуры

Процедура ТаблицаЗаказаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Уровень()=0 Тогда
		ШрифтСтроки = глПараметрыРМ.ЗаказШрифтОсновной;
	Иначе
		ШрифтСтроки = глПараметрыРМ.ЗаказШрифтСпецифик;
	КонецЕсли; 
	
	Если ШрифтСтроки.Вид = ВидШрифта.АвтоШрифт Тогда
		ШрифтСтроки = ОформлениеСтроки.Шрифт;
	КонецЕсли; 
	
	ОформлениеСтроки.Шрифт = ШрифтСтроки;
	
КонецПроцедуры

Процедура ТаблицаОплатыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВводСуммыНаВариантОплаты(ВыбраннаяСтрока);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);
