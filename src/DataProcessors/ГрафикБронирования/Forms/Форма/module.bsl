Перем СписокМестРеализации;

Процедура ОбновитьНажатие(Элемент)
	ОбновитьГрафик();
КонецПроцедуры

Процедура ПриОткрытии()	
	
	ЗагрузитьНастройки();
	УстановитьДоступность();
	
	Если НЕ ЗначениеЗаполнено(МестоРеализации) Тогда
		МестоРеализации = Константы.ОсновноеМестоРеализации.Получить();
	КонецЕсли; 
	
	ОбновитьГрафик();
	
КонецПроцедуры

Процедура ВремяСНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьВремя(Элемент.Значение, Элемент);
КонецПроцедуры

Процедура ВремяПоНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьВремя(Элемент.Значение, Элемент);
КонецПроцедуры

// Процедура инициирует диалог выбора времени.
//
// Параметры
//  ДатаВремен - дата для выбора времени
//  ТекЭлемент - элемент формы
//  ПолныйГод - булево, показывать год 4-мя цифрами или 2-мя
//
// Возвращаемое значение:
//  НЕТ
//
Процедура ВыбратьВремя(ДатаВремен, ТекЭлемент)
	
	НачалоРабочегоДняКонстанта 		= Дата(1,1,1,01,00,00);
	ОкончаниеРабочегоДняКонстанта 	= Дата(1,1,1,23,30,00);
	
	Если ДатаВремен = Дата(1,1,1) Тогда
		ДатаВремен = НачалоДня(ДатаС);
	КонецЕсли;
	
	СписокВремен = Новый СписокЗначений;
	НачалоРабочегоДня = НачалоДня(ДатаВремен)+Час(НачалоРабочегоДняКонстанта)*60*60+?(Минута(НачалоРабочегоДняКонстанта) >= 30, 30, 0)*60;
	Если Минута(ОкончаниеРабочегоДняКонстанта) = 0 Тогда
		МинутРабочегоОкончанияДня = 0;
	ИначеЕсли Минута(ОкончаниеРабочегоДняКонстанта) > 30 Тогда
		МинутРабочегоОкончанияДня = 60;
	Иначе
		МинутРабочегоОкончанияДня = 30;
	КонецЕсли; 
	ОкончаниеРабочегоДня = НачалоДня(ДатаВремен)+Час(ОкончаниеРабочегоДняКонстанта)*60*60+МинутРабочегоОкончанияДня*60;
	
	а = 0;
	Пока 1=1 Цикл
		ВремяСписка = НачалоРабочегоДня + а*60*60;
		Если ВремяСписка > ОкончаниеРабочегоДня Тогда
			Прервать;
		КонецЕсли;
		СписокВремен.Добавить(ВремяСписка, Формат(ВремяСписка,"ДФ='ЧЧ:мм'"));
		а = а + 1;
	КонецЦикла; 
	
	НачальноеЗначение = СписокВремен.НайтиПоЗначению(ДатаВремен);
	Если НачальноеЗначение = Неопределено Тогда
		ВыбранноеВремя = ЭтаФорма.ВыбратьИзСписка(СписокВремен, ТекЭлемент);
	Иначе
		ВыбранноеВремя = ЭтаФорма.ВыбратьИзСписка(СписокВремен, ТекЭлемент, НачальноеЗначение);
	КонецЕсли; 
	
	Если ВыбранноеВремя <> Неопределено Тогда
		ДатаВремен = ВыбранноеВремя.Значение;
	КонецЕсли; 
	
КонецПроцедуры // ВыбратьВремя()

Процедура ТаблицаГрафикаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если НЕ Область.Расшифровка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВвестиБроньНаОднуЯчейку(Область.Имя);	
	
КонецПроцедуры

Процедура КоманднаяПанельВвестиБронь(Кнопка)
	
	ВвестиБроньНаНесколькоЯчеек(ЭлементыФормы.ТаблицаГрафика.ТекущаяОбласть);
	
КонецПроцедуры

Процедура ВвестиБроньНаОднуЯчейку(Адрес)
	
	Если НЕ Найти(Адрес, ":") = 0 ИЛИ Найти(Адрес, "R") = 0 ИЛИ Найти(Адрес, "C") = 0 Тогда
		Возврат;
	КонецЕсли;
		
	НачалоИнтервала = Дата(1,1,1);
	ПосадочноеМесто = Неопределено;	
		
	Адрес = СтрЗаменить(СтрЗаменить(Адрес, "R", ""), "C", Символы.ПС);
	нКол  = Число(СтрПолучитьСтроку(Адрес, 2));
	нСтр  = Число(СтрПолучитьСтроку(Адрес, 1));
	
	Если нСтр < 4 ИЛИ нКол < 13 Тогда
		Возврат;
	КонецЕсли;
			
	СтрокаВремени = ТаблицаВремени.Найти(нКол, "НомерКолонки");
	Если НЕ СтрокаВремени = Неопределено Тогда
		НачалоИнтервала = СтрокаВремени.НачалоИнтервала;
	Иначе
		Возврат;
	КонецЕсли;
	
	СтрокаПосадочноеМесто = ТаблицаПосадочныхМест.Найти(нСтр, "НомерСтроки");
	Если НЕ СтрокаПосадочноеМесто = Неопределено Тогда
		ПосадочноеМесто = СтрокаПосадочноеМесто.ПосадочноеМесто;
	КонецЕсли;
		
	Док 						= Документы.Бронь.СоздатьДокумент();
	Док.ВремяНачала 			= НачалоИнтервала;
	Док.ВремяКонца				= ?(НачалоИнтервала = Дата(1,1,1), НачалоИнтервала, НачалоИнтервала+Число(Дискретность)*60);
	Если НЕ ПосадочноеМесто = Неопределено Тогда
		НоваяСтрока 				= Док.ПосадочныеМеста.Добавить();
		НоваяСтрока.ПосадочноеМесто = ПосадочноеМесто;
	КонецЕсли;
	Док.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ВвестиБроньНаНесколькоЯчеек(Область)
	
	Область = ЭлементыФормы.ТаблицаГрафика.ТекущаяОбласть;
	Адрес = Область.Имя;
	
	Если Найти(Адрес, ":") = 0 Тогда
		ВвестиБроньНаОднуЯчейку(Область.Имя);
	Иначе 
		Стр = СтрЗаменить(Адрес, ":", Символы.ПС);
		Стр = СтрЗаменить(СтрЗаменить(Стр, "R", ""), "C", Символы.ПС);
		нКол  = Число(СтрПолучитьСтроку(Стр, 2));
		нСтр  = Число(СтрПолучитьСтроку(Стр, 1));
		кКол  = Число(СтрПолучитьСтроку(Стр, 4));
		кСтр  = Число(СтрПолучитьСтроку(Стр, 3));
		
		НачалоИнтервала = Дата(1,1,1);
		КонецИнтервала	= Дата(1,1,1);
		ПосадочноеМесто = Неопределено;
		
		СтрокаВремени = ТаблицаВремени.Найти(нКол, "НомерКолонки");
		Если НЕ СтрокаВремени = Неопределено Тогда
			НачалоИнтервала = СтрокаВремени.НачалоИнтервала;
		Иначе
			Возврат;
		КонецЕсли;
		
		СтрокаВремени = ТаблицаВремени.Найти(кКол, "НомерКолонки");
		Если НЕ СтрокаВремени = Неопределено Тогда
			КонецИнтервала = СтрокаВремени.НачалоИнтервала+Дискретность*60;
		Иначе
			Возврат;
		КонецЕсли;
		
		СтрокаПосадочноеМесто = ТаблицаПосадочныхМест.Найти(нСтр, "НомерСтроки");
		Если НЕ СтрокаПосадочноеМесто = Неопределено Тогда
			ПосадочноеМесто = СтрокаПосадочноеМесто.ПосадочноеМесто;
		КонецЕсли;
			
		Док 						= Документы.Бронь.СоздатьДокумент();
		Док.ВремяНачала 			= НачалоИнтервала;
		Док.ВремяКонца				= ?(КонецИнтервала <> Дата(1,1,1), КонецИнтервала, НачалоИнтервала+Число(Дискретность)*60);
		Счетчик = нСтр;
		Пока Счетчик <= кСтр Цикл
			СтрокаПосадочноеМесто = ТаблицаПосадочныхМест.Найти(Счетчик, "НомерСтроки");
			Счетчик = Счетчик + 1;
			Если СтрокаПосадочноеМесто = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока 				= Док.ПосадочныеМеста.Добавить();
			НоваяСтрока.ПосадочноеМесто = СтрокаПосадочноеМесто.ПосадочноеМесто;
		КонецЦикла;
		Если Док.ПосадочныеМеста.Количество() > 0 Тогда
			Док.ПолучитьФорму().Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура МестоРеализацииНажатие(Элемент)
	Выбор = ВыбратьИзМеню(СписокМестРеализации, Элемент);
	Если НЕ Выбор = Неопределено Тогда
		МестоРеализации = Выбор.Значение;
	КонецЕсли;	
КонецПроцедуры

Процедура ОбновитьГрафик()
	ЭлементыФормы.ТаблицаГрафика.Очистить();
	ЭлементыФормы.ТаблицаГрафика.Вывести(НапечататьДанныеГрафика());
	ЭлементыФормы.ТаблицаГрафика.ФиксацияСверху = 3;
	ЭлементыФормы.ТаблицаГрафика.ФиксацияСлева  = 12;
КонецПроцедуры

Процедура ВыборПериодаНажатие(Элемент)
	Форма = ПолучитьФорму("ВыборПериода");
	КодВозврата = Форма.ОткрытьМодально();
	Если КодВозврата = "ОК" Тогда
		ОбновитьГрафик();
	КонецЕсли;		
КонецПроцедуры

Процедура СохранитьНастройки()
	
	СохранитьЗначение("МестоРеализации"	, МестоРеализации);
	СохранитьЗначение("ДатаС"			, ДатаС);
	СохранитьЗначение("ДатаПо"			, ДатаПо);
	СохранитьЗначение("ВремяС"			, ВремяС);
	СохранитьЗначение("ВремяПо"			, ВремяПо);
	СохранитьЗначение("Дискретность"	, Дискретность);
	
КонецПроцедуры

Процедура ЗагрузитьНастройки()
		
	СохрДискр = ВосстановитьЗначение("Дискретность");
	СохрДатаС = ВосстановитьЗначение("ДатаС");
	СохрДатаПо = ВосстановитьЗначение("ДатаПо");
	
	Если СохрДискр = Неопределено Тогда
		Дискретность = "15";
	Иначе
		Дискретность = СохрДискр;
	КонецЕсли;
	Если СохрДатаС = Неопределено Тогда
		ДатаС = НачалоДня(ТекущаяДата());
	Иначе
		ДатаС = СохрДатаС;
	КонецЕсли;
	Если СохрДатаПо = Неопределено Тогда
		ДатаПо = КонецДня(ТекущаяДата());
	Иначе
		ДатаПо = СохрДатаПо;
	КонецЕсли;
	
	ВремяС = ВосстановитьЗначение("ВремяС");
	ВремяПо = ВосстановитьЗначение("ВремяПо");
	МестоРеализации = ВосстановитьЗначение("МестоРеализации");
	
	Выборка = Справочники.МестаРеализации.Выбрать();
	СписокМестРеализации = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		СписокМестРеализации.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьНастройки();
КонецПроцедуры

Процедура УстановитьДоступность()
	
	Если Дискретность = "1440" Тогда
		ВремяС  = Дата(1,1,1);
		ВремяПо = Дата(1,1,1);
		ЭлементыФормы.ВремяС.Доступность = Ложь;
		ЭлементыФормы.ВремяПо.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ВремяС.Доступность = Истина;
		ЭлементыФормы.ВремяПо.Доступность = Истина;
	КонецЕсли;
			
КонецПроцедуры

Процедура ДискретностьПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура ВремяСПриИзменении(Элемент)
	ВремяС = НачалоЧаса(ВремяС);
КонецПроцедуры

Процедура ВремяПоПриИзменении(Элемент)
	Если ВремяПо <> НачалоЧаса(ВремяПо) Тогда
		ВремяПо = КонецЧаса(ВремяПо) + 1;
	КонецЕсли;
КонецПроцедуры
