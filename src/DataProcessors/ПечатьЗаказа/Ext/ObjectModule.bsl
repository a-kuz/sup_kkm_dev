
#Если Клиент Тогда

Перем ТаблицаЗадания;
Перем НомерМарки;
Перем ПодтверждатьГотовность;
Перем ПечатьКорешка;
Перем ПечатьШККорешка;
Перем ПрефиксШКмарки;
Перем ПрефиксШКкорешка;
Перем Язык;

Перем ФормаФоноваяПечать;
Перем ТаблицаГруппПечати;

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
	ТаблицаЗадания = Новый ТаблицаЗначений;
	ТаблицаЗадания.Колонки.Добавить("Данные");
	ТаблицаЗадания.Колонки.Добавить("ТипДанных");
	ТаблицаЗадания.Колонки.Добавить("Параметры");
	
	НомерМарки = Неопределено;
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Печать QRкода заказа
//
Функция ПечатьQRкода() Экспорт
	
	Принтер = глПараметрыРМ.ТрактиръМобайлПринтерQRКода;
	
	КолвоКопий = 1;
	
	Язык = Неопределено;
	
	Если глВерсия>1 И Константы.ДопЯзыки.Получить()Тогда
		Если ЗначениеЗаполнено(Заказ.Клиент.Язык) Тогда
			Язык = Заказ.Клиент.Язык;
			
		ИначеЕсли глПараметрыРМ.ПечатьСчетаДопЯзыки = 1 Тогда
			МассивЯзыков = ЗаполнитьМассивЯзыков();
			Язык = ИнтерфейсРМ.ВыборИзСписка(МассивЯзыков);
			Если Язык = Неопределено Тогда
				Возврат Ложь;
			ИначеЕсли Язык = "Основной" Тогда
				Язык = Неопределено;
			КонецЕсли;
			
		ИначеЕсли  глПараметрыРМ.ПечатьСчетаДопЯзыки = 2 Тогда
			Язык = глПараметрыРМ.ПечатьСчетаЯзык;
			
		КонецЕсли;
	КонецЕсли;
	
	Если глПараметрыРМ.ТрактиръМобайлПечатьQRКодаШапка Тогда
		ДобавитьШапкуПодвалСчета(ТаблицаЗадания, глПараметрыРМ.ПечатьСчетаТаблицаШапки);
	КонецЕсли; 
		
	//Задание = ТаблицаЗадания.Добавить();
	//Задание.Данные    = глПараметрыРМ.ТрактиръМобайлПечатьQRКодаТекст;
	////Задание.Данные    = Перевод("Для доступа к заказу считайте QR-код",Язык);
	//Задание.ТипДанных = "Строка";
	//Задание.Параметры = "ДвойнаяШирина,Центр,Переносить,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Центр,ПереводСтроки";
	
	НомерЗаказа = "";
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Центр,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Заказ",Язык)+" N "+НомерЗаказа;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "ДвойнаяШирина,Центр,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Дата",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = СтрТекДата();
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Время",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = СтрТекВремя(Истина);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Место",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ДопНаименование(Заказ.ПосадочноеМесто,Язык);//+" № "+Заказ.ПосадочноеМесто.Код;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Официант",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ДопНаименование(Заказ.Автор,Язык);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
	Если ЗначениеЗаполнено(Заказ.Клиент) Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Клиент",Язык,,8,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ДопНаименование(Заказ.Клиент,Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,Переносить,ПереводСтроки";
		
		ДобавитьИнформациюПоКлиенту(ТаблицаЗадания, Заказ.Клиент);
	КонецЕсли;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	// Формирование товарной спецификации счета
	ДлинаРасшифровки = 0;
	ДлинаСуммы = 0;
	//СформироватьСпецификацию(Принтер, ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы, Язык);
	
	//Если глПараметрыРМ.ТрактиръМобайлПечатьQRКодаПодвал Тогда
	//	ДобавитьШапкуПодвалСчета(ТаблицаЗадания, глПараметрыРМ.ПечатьСчетаТаблицаПодвала);
	//КонецЕсли; 
	
	Возврат ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, Ложь, КолвоКопий);
КонецФункции

// Печать счета и предварительного счета
//
Функция ПечатьКопииЧека() Экспорт
	
	Принтер = глПараметрыРМ.ПечатьСчетаПринтер;
	
	КолвоКопий = 1;
	
	Язык = Неопределено;
	
	
	//Мясновъ	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Формат(ЗаказДопИнф.ДатаЗакрытия,"ДЛФ=Д");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "Ваш заказ на станциях ""Кухни Полли"" №"+Формат(Число(Заказ.Номер),"ЧГ=") + ?(ЗначениеЗаполнено(Заказ.ВнешнийНомер), " / "+Заказ.ВнешнийНомер, "");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Центр,ПереводСтроки";
	
	// Формирование товарной спецификации счета
	ДлинаРасшифровки = 0;
	ДлинаСуммы = 0;
	СформироватьСпецификацию(Принтер, ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы, Язык);
	
	СуммаПредоплаты = 0;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "**************** ЧЕК - КОПИЯ ***************";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,ЦЕНТР,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ИТОГО",Язык,,ДлинаРасшифровки-2) +" "+ СтрДополнитьСлева(": "+ФорматСумм(Макс(0,Заказ.ИтоговаяСумма - СуммаПредоплаты)),ДлинаСуммы);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "ДвойнаяВысота,Жирный,Право,ПереводСтроки";
	
	//Задание.Данные    = Формат(ЗаказДопИнф.ДатаЗакрытия,"ДЛФ=Д");
	//Задание.ТипДанных = "Строка";
	//Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ОПЛАТА",Язык)+":";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	//Задание = ТаблицаЗадания.Добавить();
	//Задание.Данные    = Перевод("Взнос:  Наличные",Язык,,ДлинаРасшифровки-2) +" "+ СтрДополнитьСлева(" "+ФорматСумм(Макс(0,Заказ.ИтоговаяСумма - СуммаПредоплаты)),ДлинаСуммы);
	//Задание.ТипДанных = "Строка";
	//Задание.Параметры = "Право,ПереводСтроки";
	
	Для каждого СтрокаПротокола Из ПротоколРасчетов.Протокол Цикл
		Если СтрокаПротокола.Действие = Перечисления.ДействияПриОплате.Заказ Тогда
			Продолжить;
		КонецЕсли;
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод(Строка(СтрокаПротокола.Действие),Язык)+" "+СтрДополнитьСправа(ДопНаименование(СтрокаПротокола.ВариантОплаты,Язык),10) +
		ФорматСумм1(СтрокаПротокола.Сумма,12);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,ПереводСтроки";
	КонецЦикла;
		
	
	Возврат ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, Ложь, КолвоКопий);
КонецФункции

// Печать счета и предварительного счета
//
Функция ПечатьКопииЧекаВозврата(ДокВозврата) Экспорт
	
	Принтер = глПараметрыРМ.ПечатьСчетаПринтер;
	
	КолвоКопий = 1;
	
	Язык = Неопределено;
	
	
	//Мясновъ
	//считаем что возврат делается только по заказу в целом , исключительно в ситуациях с ошибками при оплате
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "ВОЗВРАТ №"+ДокВозврата.Номер+" от "+Формат(ДокВозврата.Дата,"ДЛФ=Д");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "По заказу №"+Формат(Число(Заказ.Номер),"ЧГ=") + ?(ЗначениеЗаполнено(Заказ.ВнешнийНомер), " / "+Заказ.ВнешнийНомер, "");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Центр,ПереводСтроки";
	
	// Формирование товарной спецификации счета
	ДлинаРасшифровки = 0;
	ДлинаСуммы = 0;
	СформироватьСпецификацию(Принтер, ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы, Язык);
	
	СуммаПредоплаты = 0;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "**************** ВОЗВРАТ - КОПИЯ ***************";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Центр,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ИТОГО",Язык,,ДлинаРасшифровки-2) +" "+ СтрДополнитьСлева(": "+ФорматСумм(Макс(0,Заказ.ИтоговаяСумма - СуммаПредоплаты)),ДлинаСуммы);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "ДвойнаяВысота,Жирный,Право,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ОПЛАТА",Язык)+":";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	//Задание = ТаблицаЗадания.Добавить();
	//Задание.Данные    = Перевод("Взнос:  Наличные",Язык,,ДлинаРасшифровки-2) +" "+ СтрДополнитьСлева(" "+ФорматСумм(Макс(0,Заказ.ИтоговаяСумма - СуммаПредоплаты)),ДлинаСуммы);
	//Задание.ТипДанных = "Строка";
	//Задание.Параметры = "Право,ПереводСтроки";
	Для каждого СтрокаПротокола Из ПротоколРасчетов.Протокол Цикл
		Если СтрокаПротокола.Действие = Перечисления.ДействияПриОплате.Заказ Тогда
			Продолжить;
		КонецЕсли;
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод(Строка(СтрокаПротокола.Действие),Язык)+" "+СтрДополнитьСправа(ДопНаименование(СтрокаПротокола.ВариантОплаты,Язык),10) +
		ФорматСумм1(СтрокаПротокола.Сумма,12);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,ПереводСтроки";
	КонецЦикла;
	
	Возврат ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, Ложь, КолвоКопий);
КонецФункции

// Печать счета и предварительного счета
//
Функция ПечатьСчета(Действие) Экспорт
	
	Принтер = глПараметрыРМ.ПечатьСчетаПринтер;
	
	Если Действие="Счет" Тогда
		КолвоКопий = глПараметрыРМ.ПечатьСчетаКолвоКопий;
		ПечататьШК = глПараметрыРМ.ПечатьСчетаОкончательныйПечатьШК;
	Иначе
		КолвоКопий = 1;
		ПечататьШК = глПараметрыРМ.ПечатьСчетаПресчетПечатьШК;
	КонецЕсли;
	
	Язык = Неопределено;
	
	Если глВерсия>1 И Константы.ДопЯзыки.Получить()Тогда
		Если ЗначениеЗаполнено(Заказ.Клиент.Язык) Тогда
			Язык = Заказ.Клиент.Язык;
			
		ИначеЕсли глПараметрыРМ.ПечатьСчетаДопЯзыки = 1 Тогда
			МассивЯзыков = ЗаполнитьМассивЯзыков();
			Язык = ИнтерфейсРМ.ВыборИзСписка(МассивЯзыков);
			Если Язык = Неопределено Тогда
				Возврат Ложь;
			ИначеЕсли Язык = "Основной" Тогда
				Язык = Неопределено;
			КонецЕсли;
			
		ИначеЕсли  глПараметрыРМ.ПечатьСчетаДопЯзыки = 2 Тогда
			Язык = глПараметрыРМ.ПечатьСчетаЯзык;
			
		КонецЕсли;
	КонецЕсли;
	
	Если глПараметрыРМ["Печать"+Действие+"Шапка"] Тогда
		ДобавитьШапкуПодвалСчета(ТаблицаЗадания, глПараметрыРМ.ПечатьСчетаТаблицаШапки);
	КонецЕсли; 
		
	// формирование заголовка счета
	Если Действие = "Пресчет" И НЕ Заказ.Доставка Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ПРЕДВАРИТЕЛЬНЫЙ",Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "ДвойнаяШирина,Центр,ПереводСтроки";
	КонецЕсли;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("СЧЕТ",Язык)+" N "+Формат(Число(Заказ.Номер),"ЧГ=") + ?(ЗначениеЗаполнено(Заказ.ВнешнийНомер), " / "+Заказ.ВнешнийНомер, "");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "ДвойнаяШирина,Центр,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Дата",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ?(Действие = "Пресчет", СтрТекДата(), Формат(ЗаказДопИнф.ДатаЗакрытия,"ДЛФ=Д"));
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,НеПереводСтроки";
	
	Если Действие = "Пресчет" ИЛИ Заказ.Доставка ИЛИ ЗаказДопИнф.ДатаЗакрытия - ЗаказДопИнф.ДатаОткрытия < 5*60 Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Время",Язык,,8,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ?(Действие = "Пресчет", СтрТекВремя(Истина), Формат(ЗаказДопИнф.ДатаЗакрытия,"ДФ=ЧЧ:мм"));
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	Иначе
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Открыт",Язык,,8,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Формат(ЗаказДопИнф.ДатаОткрытия,"ДФ=ЧЧ:мм");
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = " "+Перевод("Закрыт",Язык)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Формат(ЗаказДопИнф.ДатаЗакрытия,"ДФ=ЧЧ:мм");
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	КонецЕсли;
	
	Если НЕ Заказ.Доставка Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Место",Язык,,8,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ДопНаименование(Заказ.ПосадочноеМесто,Язык);//+" № "+Заказ.ПосадочноеМесто.Код;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заказ.Клиент) Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Клиент",Язык,,8,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ДопНаименование(Заказ.Клиент,Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,Переносить,ПереводСтроки";
		
		Если Заказ.Доставка Тогда
			Адрес = Заказ.Адрес;
			Телефон = Заказ.Телефон;
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = "   Адрес: "+Адрес.Представление + ?(ЗначениеЗаполнено(Адрес.Комментарий), " ("+Адрес.Комментарий+")", "");
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Жирный,Лево,Переносить,ПереводСтроки";
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = "    Тел.: "+Телефон.Представление + ?(ЗначениеЗаполнено(Телефон.Комментарий), " ("+Телефон.Комментарий+")", "");
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Жирный,Лево,Переносить,ПереводСтроки";
			
			Если ЗначениеЗаполнено(Заказ.Комментарий) Тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = "   Прим.: "+Заказ.Комментарий;
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Жирный,Лево,Переносить,ПереводСтроки";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Заказ.Доставка Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "Оператор: "+Заказ.Автор;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
	Иначе
		Если глПараметрыРМ.ЗаказЗапросКолвоПосетителей Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод("Гостей",Язык,,8,1)+": ";
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,НеПереводСтроки";
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Строка(Заказ.КоличествоПосетителей);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		КонецЕсли;
	
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Официант",Язык,,8,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ДопНаименование(Заказ.Автор,Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
		Если Действие = "Счет" Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод("Кассир",Язык,,8,1)+": ";
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,НеПереводСтроки";
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = ДопНаименование(ПротоколРасчетов.Автор,Язык);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		КонецЕсли;
	КонецЕсли;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	// Формирование товарной спецификации счета
	ДлинаРасшифровки = 0;
	ДлинаСуммы = 0;
	СформироватьСпецификацию(Принтер, ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы, Язык);
	
	// Переделать на правильный расчет НДС
	Если Действие="Счет" И глПараметрыРМ.ПечатьСчетаНДС Тогда
		СтавкаНДС = 18; //Константа.ОсновнаяСтавкаНДС.Ставка;
		СуммаНДС =Окр((Заказ.ИтоговаяСумма*СтавкаНДС/(100+СтавкаНДС)),2,1);
		Если СуммаНДС<>0 Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод("в т.ч. НДС",Язык,,ДлинаРасшифровки) +":"+ ФорматСумм1(СуммаНДС,ДлинаСуммы);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,ПереводСтроки";
		КонецЕсли;
	КонецЕсли;
	
	СуммаПредоплаты = 0;
	Если глВерсия>1 И Действие="Пресчет" И ЗначениеЗаполнено(Заказ.Бронь) Тогда	
		СуммаПредоплаты = НакопленияКлиента(Заказ.Бронь.Клиент, Заказ.Бронь).СуммаБезнал;
		Если СуммаПредоплаты > 0 Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = "СтрЧерта";
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,ПереводСтроки";
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод("Внесена предоплата",Язык)+": "+ФорматСумм1(СуммаПредоплаты, ДлинаСуммы);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,Переносить,ПереводСтроки";
		КонецЕсли;
	КонецЕсли; 
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ИТОГО К ОПЛАТЕ",Язык,,ДлинаРасшифровки-2) +" "+ СтрДополнитьСлева("= "+ФорматСумм(Макс(0,Заказ.ИтоговаяСумма - СуммаПредоплаты)),ДлинаСуммы);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "ДвойнаяВысота,Жирный,Право,ПереводСтроки";
	
	Если Действие="Счет" И глПараметрыРМ.ПечатьСчетаПротоколРасчетов Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "СтрЧерта";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ОПЛАТА",Язык)+":";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
		
		Для каждого СтрокаПротокола Из ПротоколРасчетов.Протокол Цикл
			Если СтрокаПротокола.Действие = Перечисления.ДействияПриОплате.Заказ Тогда
				Продолжить;
			КонецЕсли;
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод(Строка(СтрокаПротокола.Действие),Язык)+" "+СтрДополнитьСправа(ДопНаименование(СтрокаПротокола.ВариантОплаты,Язык),10) +
			ФорматСумм1(СтрокаПротокола.Сумма,12);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,ПереводСтроки";
		КонецЦикла;
		
	КонецЕсли;
	
	ЛимитнаяКарта = ?(глВерсия=3, Заказ.ПосадочноеМесто.ЛимитнаяКарта, Ложь );
	Если Действие="Пресчет" Тогда
		Если ЛимитнаяКарта Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод("Внесена предоплата",Язык,,ДлинаРасшифровки)+":"+ФорматСумм1(Защита.СуммаВнесеннойПредоплаты(Заказ,ЗаказДопИнф), ДлинаСуммы);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,ПереводСтроки";
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод("Сумма к оплате",Язык,,ДлинаРасшифровки)+":"+ФорматСумм1(Заказ.ИтоговаяСумма-Защита.СуммаВнесеннойПредоплаты(Заказ,ЗаказДопИнф), ДлинаСуммы);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,ПереводСтроки";
			
		Иначе
			ДобавитьИнформациюПоНеплательщику(ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы);
		КонецЕсли; 
	КонецЕсли; 
	
	ДобавитьИнформациюПоКлиенту(ТаблицаЗадания, Заказ.Клиент);
	
	Если глВерсия>1 И Константы.РумбаИнтерфейсВкл.Получить() И Действие = "Пресчет" Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";

		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Комната:",Язык)+"____________________";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ФИО    :",Язык)+"____________________";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ПОДПИСЬ:",Язык)+"____________________";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный, Лево,ПереводСтроки";
	КонецЕсли;
	
	Если Константы.ПечатьШКНаСчетах.Получить() И ПечататьШК Тогда
		ШтрихКод = СформироватьШК( Строка(Константы.ПрефиксШКсчета.Получить()) + Заказ.Номер+"0000" );
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ШтрихКод;
		Задание.ТипДанных = "ШтрихКод";
		Задание.Параметры = "ВысотаШК10,EAN13,ЕстьКС,Центр,ПереводСтроки";
	КонецЕсли;
	
	Если глПараметрыРМ["Печать"+Действие+"Подвал"] Тогда
		ДобавитьШапкуПодвалСчета(ТаблицаЗадания, глПараметрыРМ.ПечатьСчетаТаблицаПодвала);
	КонецЕсли; 
	
	Возврат ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, Ложь, КолвоКопий);
КонецФункции

// Добавляет в таблицу задания таблицу шапки или повала из настроки РМ
//
Процедура ДобавитьШапкуПодвалСчета(ТаблицаЗадания, ТаблицаШапки) Экспорт
	
	Для каждого СтрокаШапки Из ТаблицаШапки Цикл
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = СтрокаШапки.Данные;
		Задание.ТипДанных = ?(ЗначениеЗаполнено(СтрокаШапки.Тип), СтрокаШапки.Тип, "Строка");
		
		Задание.Параметры = "ПереводСтроки," + СтрокаШапки.Выравнивание +","+ СтрокаШапки.РЕЖИМ_ПЕЧАТИ +","+
							?(СтрокаШапки.Жирный		,"Жирный,","") +
							?(СтрокаШапки.Курсив		,"Курсив,","") +
							?(СтрокаШапки.Подчеркнутый	,"Подчеркнутый,","") +
							?(СтрокаШапки.ДвойнаяШирина	,"ДвойнаяШирина,","") +
							?(СтрокаШапки.ДвойнаяВысота	,"ДвойнаяВысота,","");
		
	КонецЦикла; 
	
КонецПроцедуры
 
// Печать слипа (отчета банковской платежной системы)
//
Функция ПечатьСлипа(ТекстСлипа) Экспорт
	
	Принтер		= глПараметрыРМ.ПлатежнаяСистемаПринтерСлипов;
	КолвоКопий	= глПараметрыРМ.ПлатежнаяСистемаКолвоКопийСлипа;
	Если НЕ( ЗначениеЗаполнено(Принтер) И ЗначениеЗаполнено(КолвоКопий) ) Тогда
	    Возврат Истина;
	КонецЕсли;
	
	Для н=1 По СтрЧислоСтрок(ТекстСлипа) Цикл
		
		СтрокаСлипа = СтрПолучитьСтроку(ТекстСлипа,н);
		Задание = ТаблицаЗадания.Добавить();
		
		// в тексте слипа может присутствовать служебный символ, обозначающий необходимость отрезки бумаги
		Если КодСимвола(Лев(СтрокаСлипа, 1)) = 12 Тогда
			Задание.ТипДанных = "ЧастичнаяОтрезка";
		Иначе
			Задание.Данные    = СтрокаСлипа;
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Центр,ПереводСтроки";
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, Ложь, КолвоКопий);
КонецФункции

// Формирование товарной спецификации счета (вызывается еще из печати чека)
//
Процедура СформироватьСпецификацию(Принтер, ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы, Язык=Неопределено, ГруппаОплаты=Неопределено, ЭтоБронь=Ложь) Экспорт
	
	
	//Мясновъ
	Если ЭтоБронь Тогда
		Док = Бронь;
		ТабТовары = Док.Товары.Выгрузить();
	Иначе
		Док = Заказ;
		ТабТовары = ?(СчетПодробно, Заказ.Товары.Выгрузить(), СвернутьТовары());
	КонецЕсли; 
	
	ТабТовары.Колонки.Добавить("Станция");
	ТабТовары.Колонки.Добавить("Порядок");
	
	Для Каждого СтрЗаказа из ТабТовары цикл
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказТоварыДопИнф.Станция
			|ИЗ
			|	РегистрСведений.ЗаказТоварыДопИнф КАК ЗаказТоварыДопИнф
			|ГДЕ
			|	ЗаказТоварыДопИнф.Заказ = &Заказ
			|	И ЗаказТоварыДопИнф.ИдСтроки = &ИдСтроки";
		
		Запрос.УстановитьПараметр("Заказ", Заказ.Ссылка);
		Запрос.УстановитьПараметр("ИдСтроки", СтрЗаказа.ИдСтроки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрЗаказа.Станция = Выборка.Станция;
			Если ЗначениеЗаполнено(СтрЗаказа.Станция) тогда
				СтрЗаказа.Порядок = СтрЗаказа.Станция.Код;
			Иначе
				СтрЗаказа.Порядок = "9"; //заказы без станции убираем в хвост
			КонецЕсли;
		КонецЦикла;
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		//ТабТовары.Станция = РегистрыСведений.ЗаказТоварыДопИнф.Получить(Новый Структура("Заказ,ИдСтроки", Заказ.Ссылка, СтрЗаказа.ИдСтроки) ).Станция;
	КонецЦикла;
	
	
	ТабТовары.Сортировать("Порядок");
	
	//Задание = ТаблицаЗадания.Добавить();
	//Задание.Данные    = Перевод("Наименования блюд и товаров",Язык);
	//Задание.ТипДанных = "Строка";
	//Задание.Параметры = "Жирный,Центр,ПереводСтроки";
	//
	//Задание = ТаблицаЗадания.Добавить();
	//Задание.Данные    = "СтрЧерта";
	//Задание.ТипДанных = "Строка";
	//Задание.Параметры = "Лево,ПереводСтроки";
	
	// формирование спецификации счета
	// из-за возможного разделения по группам оплаты итоги посчитаем вручную
	ИтогоСумма = 0;
	ИтогоСуммаРеализации = 0;
	ИтогоПоАбонементам = 0;
	
	текСтанция = "";
	ВремяЗаказа = Дата(1,1,1);
	
	ДлинаСтроки = ИнтерфейсРМ.ПРНДлинаСтроки(Принтер);
	
	НомСтр=0;
	Для каждого СтрЗаказа Из ТабТовары Цикл
		Если ТекСтанция <> СтрЗаказа.Станция тогда
			//выводим шапку для станции
			ТекСтанция = СтрЗаказа.Станция;
			
			Если НомСтр<>0 тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = "СтрЧерта";
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,ПереводСтроки";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрЗаказа.Станция) тогда
				//если не пустая станция
				Задание = ТаблицаЗадания.Добавить();
				Если Найти(""+ТекСтанция,"БАР")>0 тогда
					Задание.Данные    = "Ваш заказ в БАРе, бармен: "+СтрЗаказа.Автор;
				иначе
					Задание.Данные    = "Шеф станции: "+ТекСтанция + "   "+СтрЗаказа.Автор;
				КонецЕсли;
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Жирный,Центр,ПереводСтроки";
			КонецЕсли;
		КонецЕсли;
		
		Товар = СтрЗаказа.Товар;
		Если СтрЗаказа.Количество=0 ИЛИ Товар.ВариантПечати=0 Тогда
			Продолжить;
		КонецЕсли;
		
		// для печати в чеке
		Если ЗначениеЗаполнено(ГруппаОплаты) И СтрЗаказа.ГруппаОплаты<>ГруппаОплаты Тогда
			Продолжить;
		КонецЕсли;
		
		//посчитаем сумму платных специфик
		СуммаСпецифик = 0;
		ОтборСпецифик = Новый Структура("НомерСтрокиТовара", СтрЗаказа.НомерСтроки);
		МассивСтрок = Док.Специфики.НайтиСтроки(ОтборСпецифик);
		Для каждого СтрСпецифики Из МассивСтрок Цикл
			СуммаСпецифик = СуммаСпецифик + СтрСпецифики.ЦенаРеализации;
		КонецЦикла; 
		
		ИтогоСумма = ИтогоСумма + СтрЗаказа.Сумма;
		Если НЕ ЭтоБронь Тогда
			ИтогоСуммаРеализации = ИтогоСуммаРеализации + СтрЗаказа.СуммаРеализации;
		КонецЕсли; 
		
		СуммаПоАбонементу = 0;
				
		Если СчетПодробно Тогда
			ВремяЗаказаСтроки = РегистрыСведений.ЗаказТоварыДопИнф.Получить(Новый Структура("Заказ,ИдСтроки", Заказ.Ссылка, СтрЗаказа.ИдСтроки) ).ВремяЗаказано;
			Если ВремяЗаказаСтроки - ВремяЗаказа > 60 Тогда
			
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = Перевод("Время заказа",Язык) + " " + Формат(ВремяЗаказаСтроки,"ДФ=ЧЧ:мм");
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Жирный,Лево,ПереводСтроки";
				
				ВремяЗаказа = ВремяЗаказаСтроки;
			КонецЕсли; 
		КонецЕсли; 
		
		НомСтр=НомСтр+1;
		
		КолонкиПечати = Новый СписокЗначений;
		ИнтерфейсАдмина.ЗаполнитьСписокЧтоПечататьВСчете(КолонкиПечати, Товар.ВариантПечати);
		
		СтрПеч="";
		Если КолонкиПечати[0].Пометка Тогда
			СтрПеч=СтрПеч+Строка(НомСтр)+". ";
		КонецЕсли;
		Если КолонкиПечати[1].Пометка Тогда
			СтрПеч=СтрПеч+ДопНаименование(Товар,Язык);
		КонецЕсли;
		Если КолонкиПечати[2].Пометка Тогда
			Если ИнтерфейсРМ.ЭтоТариф(Товар) Тогда
				СтрПеч=СтрПеч+" ["+Товар.Тариф.ВремяЦены+"]";
			Иначе
				СтрПеч=СтрПеч+" ["+СокрЛП(ДопНаименование(Товар.ЕдиницаИзмерения,Язык))+"]";
			КонецЕсли;                      	
		КонецЕсли;
		
		// Выход в граммах добавился позднее, поэтому он в конце списка с индексом 8
		Если КолонкиПечати[8].Пометка И ЗначениеЗаполнено(Товар.Выход) Тогда
			СтрПеч=СтрПеч+" ["+Товар.Выход+"]";
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(СтрПеч) Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = СтрПеч;
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,Переносить,ПереводСтроки";
			
		КонецЕсли;
		
		КолСтрЗаданияТовар = ТаблицаЗадания.Количество();	// для тарификации
		
		СтрПеч="";
		Если КолонкиПечати[3].Пометка Тогда
			СтрПеч=СтрПеч+Строка(СтрЗаказа.Количество);
		КонецЕсли;
		Если КолонкиПечати[4].Пометка Тогда
			СтрПеч=СтрПеч+" * "+ФорматСумм(СтрЗаказа.Цена);
		КонецЕсли;
		Если КолонкиПечати[5].Пометка Тогда
			Если СтрЗаказа.Сумма=0 И ЗначениеЗаполнено(СтрЗаказа.Подарок) Тогда
				СтрПеч=СтрПеч+СтрДополнитьСлева("Подарок",15);
			Иначе
				СтрПеч=СтрПеч+СтрДополнитьСлева("= "+ФорматСумм(СтрЗаказа.СуммаРеализации-СуммаСпецифик*СтрЗаказа.Количество) ,15);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрПеч) Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = СтрПеч;
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,Переносить,ПереводСтроки";
			
			//-------------------------------------------
			// тарификация
			Если ИнтерфейсРМ.ЭтоТариф(Товар) Тогда
				
				РасчетыПоТарифу = СтрЗаказа.РасчетыПоТарифу;
				Если ЗначениеЗаполнено(РасчетыПоТарифу) Тогда
					
					ВариантРасшифровки	= РасчетыПоТарифу.Тариф.ВариантРасшифровки;
					ПоказыватьДаты		= РасчетыПоТарифу.Тариф.ПоказыватьДаты;
					ТаблицаРасчетов		= РасчетыПоТарифу.ТаблицаРасчетов;
					
					Если ВариантРасшифровки=1 Тогда
						// общий период
						Время1 = ТаблицаРасчетов[0].Время1;
						Время2 = ТаблицаРасчетов[ТаблицаРасчетов.Количество()-1].Время2;
						
						Задание = ТаблицаЗадания.Добавить();
						Если ПоказыватьДаты Тогда
							Задание.Данные = ?(ДлинаСтроки>32,"  ","")+"("+Формат(Время1,"ДФ=дд.ММ.гг,ЧЧ:мм")+" - "+Формат(Время2,"ДФ=дд.ММ.гг,ЧЧ:мм")+")";
						Иначе
							Задание.Данные = "  ("+Формат(Время1,"ДФ=ЧЧ:мм")+" - "+Формат(Время2,"ДФ=ЧЧ:мм")+")";
						КонецЕсли;
						Задание.ТипДанных = "Строка";
						Задание.Параметры = "Лево,ПереводСтроки";
						
					ИначеЕсли ВариантРасшифровки=2 Тогда
						// подробно
						// убираем строку с общим количеством
						Пока ТаблицаЗадания.Количество() > КолСтрЗаданияТовар Цикл
							ТаблицаЗадания.Удалить(КолСтрЗаданияТовар);
						КонецЦикла; 
						
						Для каждого СтрокаРасчетов Из ТаблицаРасчетов Цикл
							СтрПеч="";
							Если КолонкиПечати[3].Пометка Тогда
								СтрПеч=СтрПеч+Строка(СтрокаРасчетов.Количество);
							КонецЕсли;
							Если КолонкиПечати[4].Пометка Тогда
								СтрПеч=СтрПеч+" * "+ФорматСумм(СтрокаРасчетов.Цена);
							КонецЕсли;
							Если КолонкиПечати[5].Пометка Тогда
								СтрПеч=СтрПеч+СтрДополнитьСлева("= "+ФорматСумм(СтрокаРасчетов.Сумма) ,15);
							КонецЕсли;
							Если ЗначениеЗаполнено(СтрПеч) Тогда
								Задание = ТаблицаЗадания.Добавить();
								Задание.Данные    = СтрПеч;
								Задание.ТипДанных = "Строка";
								Задание.Параметры = "Право,Переносить,ПереводСтроки";
							КонецЕсли;
							
							Время1 = СтрокаРасчетов.Время1;
							Время2 = СтрокаРасчетов.Время2;
							
							Задание = ТаблицаЗадания.Добавить();
							Если ПоказыватьДаты Тогда
								Задание.Данные = ?(ДлинаСтроки>32,"  ","")+"("+Формат(Время1,"ДФ=дд.ММ.гг,ЧЧ:мм")+" - "+Формат(Время2,"ДФ=дд.ММ.гг,ЧЧ:мм")+")";
							Иначе
								Задание.Данные = "  ("+Формат(Время1,"ДФ=ЧЧ:мм")+" - "+Формат(Время2,"ДФ=ЧЧ:мм")+")";
							КонецЕсли;
							Задание.ТипДанных = "Строка";
							Задание.Параметры = "Лево,Переносить,ПереводСтроки";
							
						КонецЦикла;
						
						Если КолонкиПечати[5].Пометка И ТаблицаРасчетов.Количество()>1 Тогда
							Задание = ТаблицаЗадания.Добавить();
							Задание.Данные    = Перевод("Всего",Язык,,ДлинаРасшифровки)+": "+ФорматСумм(СтрЗаказа.Сумма);
							Задание.ТипДанных = "Строка";
							Задание.Параметры = "Право,Переносить,ПереводСтроки";
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		// специфики
		Для каждого СтрСпецифики Из МассивСтрок Цикл
			Если (СтрСпецифики.Специфика.ПечатьНаСчете) или (СтрСпецифики.ЦенаРеализации>0) Тогда
				Для каждого СтрокаТовара  Из МассивСтрок Цикл
					Если СтрокаТовара.НомерСтроки = СтрСпецифики.НомерСтрокиТовара Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла; 
				
								
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = " - "+ДопНаименование(СтрСпецифики.Специфика, Язык);
				Если СтрСпецифики.Цена > 0 тогда
					пСтрока = "" + СтрокаТовара.Количество + " * " + ФорматСумм(СтрСпецифики.Цена);
					пСтрока = пСтрока + СтрДополнитьСлева(" = " + ФорматСумм(СтрСпецифики.ЦенаРеализации*СтрокаТовара.Количество),15);
					
					ДлинаИмени = 48 - СтрДлина(пСтрока);
										
					Задание.Данные = Лев(Задание.Данные+"                                               ",ДлинаИмени)+пСтрока;
				КонецЕсли;
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,ПереводСтроки";
				
				СуммаСпецифик = СуммаСпецифик + СтрСпецифики.ЦенаРеализации;
			КонецЕсли;
		КонецЦикла; 
		
		//-------------------------------------------
		СуммаСкидки = ?(ЭтоБронь, 0, СтрЗаказа.СуммаРеализации + СуммаПоАбонементу - СтрЗаказа.Сумма);
		
		Если СуммаСкидки<>0 Тогда
			Если КолонкиПечати[6].Пометка Тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = Перевод(?(СуммаСкидки<0,"Скидка:","Наценка:"),Язык,,ДлинаРасшифровки)+ФорматСумм1(СуммаСкидки,15);
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Право,Переносить,ПереводСтроки";
			КонецЕсли;
			Если КолонкиПечати[7].Пометка Тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = Перевод("С учетом "+?(СуммаСкидки<0, "скидки:", "наценки:" ),Язык,,ДлинаРасшифровки) + 
									СтрДополнитьСлева("= "+ФорматСумм(СтрЗаказа.СуммаРеализации + СуммаПоАбонементу),15);
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Право,Переносить,ПереводСтроки";
			КонецЕсли;
		КонецЕсли;
		
				
	КонецЦикла;
	
	//-------------------------------------------
	ДлинаСуммы		 = СтрДлина(ФорматСумм(ИтогоСумма)) + 2;	// плюс 2 для "= "
	ДлинаРасшифровки = ДлинаСтроки - ДлинаСуммы - 1;			// минус 1 для ":"
	
	// формирование "подвала" счета
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Если ЭтоБронь Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ВСЕГО",Язык,,ДлинаРасшифровки)+":"+ФорматСумм1(ИтогоСумма, ДлинаСуммы);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,ПереводСтроки";
		
		
	ИначеЕсли Док.Скидки.Количество()=0 И ИтогоПоАбонементам=0 Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ВСЕГО",Язык,,ДлинаРасшифровки)+":"+ФорматСумм1(ИтогоСуммаРеализации, ДлинаСуммы);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,ПереводСтроки";
		
	Иначе
		// подробно со скидками и абонементами
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ВСЕГО без скидок",Язык,,ДлинаРасшифровки)+":"+ФорматСумм1(ИтогоСумма, ДлинаСуммы);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,ПереводСтроки";
		
		Если ИтогоСуммаРеализации = Док.ИтоговаяСумма Тогда
			// нет разделения по группам оплаты
			
			Если Док.Скидки.Количество()>0 Тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = Перевод("Скидки (наценки)",Язык,,ДлинаРасшифровки)+":"+СтрДополнитьСправа("",ДлинаСуммы);
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Право,ПереводСтроки";
				
				НетНеНулевыхСкидок = Истина;	// подарки выводить не надо
				Для каждого СтрокаСкидки Из Док.Скидки Цикл
					Если СтрокаСкидки.Сумма=0 Тогда
						Продолжить;
					КонецЕсли; 
					НетНеНулевыхСкидок = Ложь;
					
					НаименованиеДляПечати = ДопНаименование(СтрокаСкидки.Скидка, Язык, ,"НаименованиеДляПечати");
					Если НЕ ЗначениеЗаполнено(НаименованиеДляПечати) Тогда
						НаименованиеДляПечати = Перевод(НРег(Строка(СтрокаСкидки.Тип)),Язык,,ДлинаРасшифровки);
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(НаименованиеДляПечати) Тогда
						НаименованиеДляПечати = Перевод(?(СтрокаСкидки.Сумма<0,"скидка","наценка"),Язык,,ДлинаРасшифровки);
					КонецЕсли;
					
					Задание = ТаблицаЗадания.Добавить();
					Задание.Данные    = НаименованиеДляПечати + ":" + ФорматСумм1(СтрокаСкидки.Сумма, ДлинаСуммы);
					Задание.ТипДанных = "Строка";
					Задание.Параметры = "Право,ПереводСтроки";
				КонецЦикла;
				
				Если НетНеНулевыхСкидок Тогда
					ТаблицаЗадания.Удалить(Задание);
				КонецЕсли; 
			КонецЕсли; 
			
		Иначе
			// нет возможности расшифровать по типам скидок
			ИтогоСкидка = ИтогоСуммаРеализации + ИтогоПоАбонементам - ИтогоСумма;
			
			Если ИтогоСкидка>0 Тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = Перевод(?(ИтогоСкидка<0,"Скидка","Наценка"),Язык,,ДлинаРасшифровки)+":"+ФорматСумм1(ИтогоСкидка, ДлинаСуммы);
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Право,ПереводСтроки";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИтогоПоАбонементам>0 Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Перевод("Закрыто абонементом",Язык,,ДлинаРасшифровки)+":"+ФорматСумм1(-ИтогоПоАбонементам, ДлинаСуммы);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,ПереводСтроки";
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

// Аналог процедуры УпаковкаТаблицыЗаказа из обработки Заказ
//
Функция СвернутьТовары()
	
	ТабТовары = Заказ.Товары.Выгрузить();
	
	// надо просуммировать количество по одинаковым позициям, с учетом 
	// признака "Отдельной строкой", и с проверкой состава специфик
	Инд1 = 0;
	Пока Инд1 <= ТабТовары.Количество()-1 Цикл
		
		СтрТов1 = ТабТовары[Инд1];
		
		Если СтрТов1.Товар.Разделитель Тогда
			Инд1 = Инд1 + 1;
			Продолжить;
		КонецЕсли; 
		
		Инд2 = Инд1 + 1;
		Пока Инд2 <= ТабТовары.Количество()-1 Цикл
			
			СтрТов2 = ТабТовары[Инд2];
			Если СтрТов2.Товар.Разделитель Тогда
				Прервать;
			КонецЕсли; 
			
			Если СтрТов1.Товар = СтрТов2.Товар И НЕ СтрТов1.Товар.ОтдельнойСтрокой
				И СтрТов1.Цена				= СтрТов2.Цена
				И СтрТов1.ЦенаРеализации	= СтрТов2.ЦенаРеализации
				И КонтрольнаяСтрокаСпецифики(СтрТов1.НомерСтроки) = КонтрольнаяСтрокаСпецифики(СтрТов2.НомерСтроки)
							
				Тогда
				
				СтрТов1.Количество		= СтрТов1.Количество		+ СтрТов2.Количество;
				СтрТов1.Сумма			= СтрТов1.Сумма 			+ СтрТов2.Сумма;
				СтрТов1.СуммаРеализации	= СтрТов1.СуммаРеализации	+ СтрТов2.СуммаРеализации;
				
				ТабТовары.Удалить(СтрТов2);
				
			Иначе
				Инд2 = Инд2 + 1;
			КонецЕсли; 
			
		КонецЦикла; 
		
		Инд1 = Инд1 + 1;
	КонецЦикла; 
	
	Возврат ТабТовары;
КонецФункции

// Возвращает строку, уникальную для набора специфик
//
Функция КонтрольнаяСтрокаСпецифики(НомерСтрокиТовара)
	
	Если глВерсия=1 Тогда
		Возврат "";
	КонецЕсли;
	
	ОтборСпецифик = Новый Структура("НомерСтрокиТовара", НомерСтрокиТовара);
	МассивСтрок = Заказ.Специфики.НайтиСтроки(ОтборСпецифик);
	Стр="";
	Для каждого СтрСпецифики Из МассивСтрок Цикл
		Если СтрСпецифики.Специфика.ПечатьНаСчете Тогда
			Стр = Стр + СтрСпецифики.Специфика.ПолныйКод();
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Стр;
КонецФункции

// Печать брони
//
Процедура ПечатьБрони() Экспорт
	
	Если НЕ глПараметрыРМ.ПечатьСчета Тогда
		Возврат;
	КонецЕсли;
	
	Принтер = глПараметрыРМ.ПечатьСчетаПринтер;
	
	Язык = Неопределено;
	
	// формирование заголовка счета
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("БРОНЬ",Язык)+" N "+Число(Бронь.Номер);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "ДвойнаяШирина,Центр,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	// дата
	Если НачалоДня(Бронь.ВремяНачала) = НачалоДня(Бронь.ВремяКонца) Тогда
		ТекстДата = Формат(Бронь.ВремяНачала, "ДФ=дд.ММ.гг");
	Иначе
		ТекстДата = Формат(Бронь.ВремяНачала, "ДФ=дд.ММ.гг") + " - " + Формат(Бронь.ВремяКонца, "ДФ=дд.ММ.гг");
	КонецЕсли;
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Дата",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ТекстДата;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	// время
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Время",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Формат(Бронь.ВремяНачала, "ДФ=ЧЧ:мм") + " - " + Формат(Бронь.ВремяКонца, "ДФ=ЧЧ:мм");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	// место
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Место",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Место = Бронь.ПосадочныеМеста[0].ПосадочноеМесто;
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Врег(ДопНаименование(Место,Язык)+" № "+Место.Код);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	// клиент
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Клиент",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Бронь.КлиентСтр;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	// колво посетителей
	Если глПараметрыРМ.ЗаказЗапросКолвоПосетителей Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Гостей",Язык,,8,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Строка(Бронь.ПосадочныеМеста[0].КоличествоПосетителей);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	КонецЕсли;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	// Формирование товарной спецификации счета
	Если Бронь.Товары.Количество()>0 Тогда
		ДлинаРасшифровки = 0;
		ДлинаСуммы = 0;
		СформироватьСпецификацию(Принтер, ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы, Язык, , Истина);
	КонецЕсли; 
	
	СуммаПредоплаты = НакопленияКлиента(Бронь.Клиент, Бронь).СуммаБезнал;
	Если СуммаПредоплаты > 0 Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "СтрЧерта";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Внесена предоплата",Язык)+": "+ФорматСумм1(СуммаПредоплаты,12);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,Переносить,ПереводСтроки";
	КонецЕсли;
	
	ДобавитьИнформациюПоКлиенту(ТаблицаЗадания, Бронь.Клиент);
	
	ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, Ложь);
	
КонецПроцедуры

Процедура ДобавитьИнформациюПоКлиенту(ТаблицаЗадания, Клиент)
	
	Если НЕ ЗначениеЗаполнено(Клиент) Тогда
		Возврат;
	КонецЕсли;
	
	НакопленияКлиента = НакопленияКлиента(Клиент); 
	СуммаБезнал = НакопленияКлиента.СуммаБезнал;
	СуммаБонусов = ?(глВерсия=1, 0, НакопленияКлиента.СуммаБонусов );
	
	Если Клиент.Безнал ИЛИ СуммаБонусов<>0 Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "СтрЧерта";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
	КонецЕсли;
	Если Клиент.Безнал Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Остаток на счете",Язык)+": "+ФорматСумм1(СуммаБезнал,12);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,Переносить,ПереводСтроки";
	КонецЕсли;
	Если СуммаБонусов<>0 Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Накоплено бонусов",Язык)+": "+ФорматСумм1(СуммаБонусов,12);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Право,Переносить,ПереводСтроки";
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьИнформациюПоНеплательщику(ТаблицаЗадания, ДлинаРасшифровки, ДлинаСуммы)
	
	Клиент = Заказ.Клиент;
	Если НЕ ЗначениеЗаполнено(Клиент) Тогда
		Возврат;
	ИначеЕсли НЕ (Клиент.Неплательщик И Клиент.ОсновнойВариантОплаты.Тип = Перечисления.ТипыОплаты.Неплательщик) Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьОграничениеСуммы = Ложь;
	СуммаНаНеплательщика = Заказ.ИтоговаяСумма;
	// используется также в обработке ОплатаЗаказа
//	Защита.РасчетСуммыНаНеплательщикаБезнал(Заказ, Клиент.ОсновнойВариантОплаты, ЕстьОграничениеСуммы, СуммаНаНеплательщика, , Текст2);
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "При закрытии на """+Клиент.ОсновнойВариантОплаты+"""";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,Переносить,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ИТОГО К ОПЛАТЕ",Язык,,ДлинаРасшифровки-2) +" "+ СтрДополнитьСлева("= "+ФорматСумм(Заказ.ИтоговаяСумма - СуммаНаНеплательщика), ДлинаСуммы);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "ДвойнаяВысота,Жирный,Право,ПереводСтроки";
	
КонецПроцедуры

// Печать начисления
//
Процедура ПечатьНачислений() Экспорт
	
	Если НЕ глПараметрыРМ.ПечатьСчета Тогда
		Возврат;
	КонецЕсли;
	
	Принтер = глПараметрыРМ.ПечатьСчетаПринтер;
	
	Язык = Неопределено;
	
	ЗнакОперации = ?(Начисление.Сумма>0,1,-1);
	// формирование заголовка счета
	Задание = ТаблицаЗадания.Добавить();
	Если ЗначениеЗаполнено(Начисление.ДокОснование) Тогда
		Задание.Данные    = ?(ЗнакОперации=-1, "Возврат предоплаты", "Предоплата") + " по брони № " + Начисление.ДокОснование.Номер;
	Иначе
		Задание.Данные    = Перевод("СЧЕТ ПО "+?(ЗнакОперации=1,"НАЧИСЛЕНИЮ","УДЕРЖАНИЮ"),Язык)+" N "+Число(Начисление.Номер);
	КонецЕсли;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Центр,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	// дата
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Дата",Язык,,6,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = СтрТекДата();
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Время",Язык,,8,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = СтрТекВремя(Истина);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	// кассир
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Кассир",Язык,,6,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ДопНаименование(Начисление.Автор,Язык);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	// клиент
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Клиент",Язык,,6,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Если ЗначениеЗаполнено(Начисление.Клиент) Тогда
		Задание.Данные    = ДопНаименование(Начисление.Клиент,Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Карта",Язык,,6,1)+": ";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,НеПереводСтроки";
		
		КартаДоступа = Справочники.КартыДоступа.НайтиПоРеквизиту("Привязка", Начисление.Клиент);
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "№"+КартаДоступа.Код;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
		
	Иначе
		Задание.Данные    = Начисление.ДокОснование.КлиентСтр;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	КонецЕсли; 
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ОПЛАТА",Язык)+":";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод(?(ЗнакОперации=1,"Внесение","Удержание"),Язык)+": "+
						СтрДополнитьСправа(ДопНаименование(Начисление.ВариантОплаты,Язык),10) +
						ФорматСумм1(ЗнакОперации*Начисление.Сумма,12);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Право,ПереводСтроки";
	
	ДобавитьИнформациюПоКлиенту(ТаблицаЗадания, Начисление.Клиент);
	
	ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, Ложь);
	
КонецПроцедуры

// Описание процедуры
//
Процедура ПечатьИнформацииПоДозаказу( СтрокиДозаказа ) Экспорт
	
	
	
КонецПроцедуры
 
// Печать сообщения, указанного в специфике, или произвольного текста
//
Процедура ПечатьДопСообщения(ТаблицаПечати, ДопСообщение) Экспорт
	
	ГруппыПечатиОтказы = Новый Массив;
		
	ТаблицаГруппПечати = СоздатьТаблицуГруппПечати();
	
	Для каждого СтрокаГП Из ТаблицаПечати.Строки Цикл
		
		ГруппаПечати = СтрокаГП.ГруппаПечати; 
		Если НЕ ГруппаПечати.ЕстьПринтер Тогда
			Продолжить;
		КонецЕсли;
		
		Язык = ?(глВерсия=1, Неопределено, ГруппаПечати.Язык );
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("СООБЩЕНИЕ",Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Шрифт3,Жирный,ДвойнаяШирина,Центр,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "СтрОтчерк";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";    
		
		// шапка марки
		ДобавитьШапкуМарки(ТаблицаЗадания, ГруппаПечати);
	
		//-----------------------------------------------------------------------------
		ПараметрыШрифта = ?(ГруппаПечати.ПечатьНаименованиеДвойнойШрифт, ",ДвойнаяШирина,ДвойнаяВысота", "");
		
		Для каждого СтрокаПодачи Из СтрокаГП.Строки Цикл
			
			Подача = СтрокаПодачи.Подача;
			
			Если Константы.РаботаСПодтверждениямиПозицийЗаказа.Получить() И глПараметрыРМ.ЗаказИспользоватьКурсы И ЗначениеЗаполнено(Подача) Тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = Перевод("ПОДАЧА",Язык)+" N "+Подача;
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Шрифт3,ДвойнаяШирина,Лево,ПереводСтроки";
				
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = "СтрОтчерк";
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,ПереводСтроки";
			КонецЕсли;
			
			//-----------------------------------------------------------------------------
			Для каждого СтрокаТовара Из СтрокаПодачи.Строки Цикл
				
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = ДопНаименование(СтрокаТовара.Товар,Язык);
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,Переносить,ПереводСтроки"+ПараметрыШрифта;
				
			КонецЦикла; // по товарам
			
		КонецЦикла; // по подачам
		
		// собственно, сообщение
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,Переносить,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ДопСообщение;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,ДвойнаяШирина,Центр,Переносить,ПереводСтроки"+ПараметрыШрифта;
		
		// и сигнал если надо
		Если ГруппаПечати.ДлительностьСигнала>0 Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = ГруппаПечати.ДлительностьСигнала;
			Задание.ТипДанных = "Сигнал";
		КонецЕсли; 
		
		СтрокаТаблицыГП = ТаблицаГруппПечати.Добавить();
		СтрокаТаблицыГП.Группа			= ГруппаПечати;
		СтрокаТаблицыГП.ТаблицаЗадания	= ТаблицаЗадания.Скопировать();
		
	КонецЦикла; // по группам печати
	
	ПечатьЗаданийПоГруппамПечати(ГруппыПечатиОтказы);
	
КонецПроцедуры

// Печать марок на добавленные позиции
//
Функция ПечатьМарокДозаказ( ТаблицаПечати, СоответствиеКодПодтвержденияНомерМарки = Неопределено) Экспорт
	
	Если СоответствиеКодПодтвержденияНомерМарки <> Неопределено И СоответствиеКодПодтвержденияНомерМарки.Количество() > 0 Тогда
		СоответствиеКодПодтвержденияНомерМарки.Очистить();
	КонецЕсли;
	
	ГруппыПечатиОтказы = Новый Массив;
	
	ТаблицаГруппПечати = СоздатьТаблицуГруппПечати();
	
	Для каждого СтрокаГП Из ТаблицаПечати.Строки Цикл
		
		ГруппаПечати = СтрокаГП.ГруппаПечати; 
		Если ГруппаПечати.Тип = Перечисления.ТипыГруппПечати.Нет Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаЗадания.Очистить();
		ТаблицаКорешка = ТаблицаЗадания.Скопировать();
		
		Если глВерсия=1 Тогда
			РежимПодтверждения = -1;
			Язык = Неопределено;
		Иначе
			Язык = ГруппаПечати.Язык;

			ПодтверждатьГотовность	= Константы.ПодтверждениеГотовности.Получить() И НЕ (ГруппаПечати.ПодтвержденияОтключить ИЛИ глПараметрыРМ.ПодтвержденияОтключить);
			ПечатьКорешка			= Константы.ПодтверждениеВыдачи.Получить();
			ПечатьШККорешка			= НЕ глПараметрыРМ.ПодтвержденияВыдачиОтключить;
			ПрефиксШКмарки			= Строка(Константы.ПрефиксШКмарки.Получить());
			ПрефиксШКкорешка		= Строка(Константы.ПрефиксШКкорешка.Получить());

			Если ПодтверждатьГотовность ИЛИ ПечатьКорешка Тогда
				
				РежимПодтверждения	= ГруппаПечати.РежимПодтверждения;
				Если РежимПодтверждения = 1 И НЕ глПараметрыРМ.ЗаказИспользоватьКурсы Тогда
					РежимПодтверждения = 0;
				КонецЕсли; 
				
				// для ускорения записи документов подтверждения 
				// (надо бы еще и для их отмены в случае ошибки принтера использовать!!!)
				НачатьТранзакцию();	
				
			Иначе
				РежимПодтверждения = -1;
			КонецЕсли;
			
		КонецЕсли;    
		
		// формирование заголовка марки
		Если НЕ ДобавитьНомерМарки(ТаблицаЗадания, ГруппаПечати) Тогда
			ГруппыПечатиОтказы.Добавить(ГруппаПечати);
			Продолжить;
		КонецЕсли;
		Если ГруппаПечати.ЕстьПринтер Тогда
			// шапка марки
			ДобавитьШапкуМарки(ТаблицаЗадания, ГруппаПечати);
		КонецЕсли;
		
		СтрокаГП.Строки.Сортировать("Подача");
		
		Если РежимПодтверждения=0 Тогда
			ПодачаДозаказа = СтрокаГП.Строки[0].Подача;
			ДобавитьШтрихКод(ТаблицаЗадания, ТаблицаКорешка, ГруппаПечати, СтрокаГП.КодПодтверждения, ПодачаДозаказа);
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = "СтрОтчерк";
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,ПереводСтроки";
		КонецЕсли;
		
		//-----------------------------------------------------------------------------
		ПараметрыШрифта = ?(ГруппаПечати.ПечатьНаименованиеДвойнойШрифт, ",ДвойнаяШирина,ДвойнаяВысота", "");
		
		Для каждого СтрокаПодачи Из СтрокаГП.Строки Цикл
			
			Подача = СтрокаПодачи.Подача;
			
			Если глВерсия>1 И Константы.РаботаСПодтверждениямиПозицийЗаказа.Получить() И глПараметрыРМ.ЗаказИспользоватьКурсы И ЗначениеЗаполнено(Подача) Тогда
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = Перевод("ПОДАЧА",Язык)+" N "+Подача;
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Шрифт3,ДвойнаяШирина,Лево,ПереводСтроки";
				
				Если РежимПодтверждения=1 Тогда
					ДобавитьШтрихКод(ТаблицаЗадания, ТаблицаКорешка, ГруппаПечати, СтрокаПодачи.КодПодтверждения, Подача );
				КонецЕсли;
				
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = "СтрОтчерк";
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,ПереводСтроки";
			КонецЕсли;
			
			//-----------------------------------------------------------------------------
			Для каждого СтрокаТовара Из СтрокаПодачи.Строки Цикл
				
				Товар			=СтрокаТовара.Товар;
				
				ЭтоТовар = ТипЗнч(Товар) = Тип("СправочникСсылка.Товары");
				ЭтоТариф = ЭтоТовар И ИнтерфейсРМ.ЭтоТариф(Товар);
				
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = ДопНаименование(Товар,Язык);
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,Переносить,НеПереводСтроки"+ПараметрыШрифта;
				
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = "";
				Если ЭтоТовар И ГруппаПечати.ПечатьЕдиницаИзмерения Тогда
					Если ЭтоТариф Тогда
						Задание.Данные = " ["+СтрокаТовара.Тариф.ВремяЦены+"]";
					ИначеЕсли ЗначениеЗаполнено(Товар.ЕдиницаИзмерения) Тогда
						Задание.Данные = " ["+ДопНаименование(Товар.ЕдиницаИзмерения,Язык)+"]";
					КонецЕсли;
				КонецЕсли;
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,Переносить,ПереводСтроки"+ПараметрыШрифта;
				
				Для каждого СтрокаСпецифики Из СтрокаТовара.Строки Цикл
					
					КолвоСпецифики = СтрокаСпецифики.Количество / СтрокаТовара.Количество;
					
					Задание = ТаблицаЗадания.Добавить();
					Задание.Данные    = " - "+ДопНаименование(СтрокаСпецифики.Товар,Язык) + ?(КолвоСпецифики=1, "", " х "+КолвоСпецифики);
					Задание.ТипДанных = "Строка";
					Задание.Параметры = "Лево,ПереводСтроки"+ПараметрыШрифта;
					
					Если СоответствиеКодПодтвержденияНомерМарки <> Неопределено 
						И ЗначениеЗаполнено(СтрокаСпецифики.КодПодтверждения)
						И СоответствиеКодПодтвержденияНомерМарки.Получить(СтрокаСпецифики.КодПодтверждения) = Неопределено Тогда
						СоответствиеКодПодтвержденияНомерМарки.Вставить(СтрокаСпецифики.КодПодтверждения, НомерМарки);
					КонецЕсли;
					
				КонецЦикла; // по спецификам
				
				Если СтрокаТовара.Количество>0 Тогда
					Задание = ТаблицаЗадания.Добавить();
					Задание.Данные    = Формат(СтрокаТовара.Количество, "ЧЦ=10;ЧДЦ=3");
					Задание.ТипДанных = "Строка";
					Задание.Параметры = "Право,ПереводСтроки"+ПараметрыШрифта;
				КонецЕсли;
				
				//-------------------------------------------
				// тарификация
				Если ЭтоТариф Тогда
					Задание = ТаблицаЗадания.Добавить();
					
					Если ЗначениеЗаполнено(СтрокаТовара.РасчетыПоТарифу) Тогда
						Время1 = СтрокаТовара.РасчетыПоТарифу[0].Время1;
						Время2 = СтрокаТовара.РасчетыПоТарифу[СтрокаТовара.РасчетыПоТарифу.Количество()-1].Время2;
						
						Задание = ТаблицаЗадания.Добавить();
						Если СтрокаТовара.Тариф.ПоказыватьДаты Тогда
							Задание.Данные = "("+Формат(Время1,"ДФ=дд.ММ.гг, ЧЧ:мм")+" - "+Формат(Время2,"ДФ=дд.ММ.гг, ЧЧ:мм")+")";
						Иначе
							Задание.Данные = "("+Формат(Время1,"ДФ=ЧЧ:мм")+" - "+Формат(Время2,"ДФ=ЧЧ:мм")+")";
						КонецЕсли;
						
					ИначеЕсли СтрокаТовара.МаксВремя>0 Тогда
						Задание.Данные="Ограничение: "+ВремяСтрокой(СтрокаТовара.МаксВремя);
					ИначеЕсли СтрокаТовара.МаксСумма>0 Тогда
						Задание.Данные="Ограничение: "+ФорматСумм(СтрокаТовара.МаксСумма, СтрокаТовара.Тариф.Валюта);
					Иначе
						Задание.Данные="Без ограничений";
					КонецЕсли;
					
					Задание.ТипДанных = "Строка";
					Задание.Параметры = "Право,ПереводСтроки";
					
				КонецЕсли;
				
				//-------------------------------------------
				Если РежимПодтверждения = 2 Тогда
					ДобавитьШтрихКод(ТаблицаЗадания, ТаблицаКорешка, ГруппаПечати, СтрокаТовара.КодПодтверждения, Подача, Товар, СтрокаТовара.Количество);
				КонецЕсли;
				
				Задание = ТаблицаЗадания.Добавить();
				Задание.Данные    = "СтрЧерта";
				Задание.ТипДанных = "Строка";
				Задание.Параметры = "Лево,ПереводСтроки";
				
				Если СоответствиеКодПодтвержденияНомерМарки <> Неопределено 
					И ЗначениеЗаполнено(СтрокаТовара.КодПодтверждения)
					И СоответствиеКодПодтвержденияНомерМарки.Получить(СтрокаТовара.КодПодтверждения) = Неопределено Тогда
					СоответствиеКодПодтвержденияНомерМарки.Вставить(СтрокаТовара.КодПодтверждения, НомерМарки);
				КонецЕсли;
			
			КонецЦикла; // по товарам
			
		КонецЦикла; // по подачам
		
		// запись документов подтверждения
		Если РежимПодтверждения>=0 Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли; 
		
		// добавим в конец задания строки корешка
		Для каждого СтрокаКорешка Из ТаблицаКорешка Цикл
			Задание = ТаблицаЗадания.Добавить();
			ЗаполнитьЗначенияСвойств(Задание, СтрокаКорешка); 
		КонецЦикла;
		
		// и сигнал если надо
		Если ГруппаПечати.ДлительностьСигнала>0 Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = ГруппаПечати.ДлительностьСигнала;
			Задание.ТипДанных = "Сигнал";
		КонецЕсли; 
		
		СтрокаТаблицыГП = ТаблицаГруппПечати.Добавить();
		СтрокаТаблицыГП.Группа			= ГруппаПечати;
		СтрокаТаблицыГП.ТаблицаЗадания	= ТаблицаЗадания.Скопировать();
		
	КонецЦикла; // по группам печати
	
	ПечатьЗаданийПоГруппамПечати(ГруппыПечатиОтказы);
	
	Возврат ГруппыПечатиОтказы;
КонецФункции

// Печать марок на удаленные позиции
//
Функция ПечатьМарокОтмена( ТаблицаПечати ) Экспорт
	
	ГруппыПечатиОтказы = Новый Массив;
	
	ТаблицаГруппПечати = СоздатьТаблицуГруппПечати();
	
	Для каждого СтрокаГП Из ТаблицаПечати.Строки Цикл
		
		ГруппаПечати = СтрокаГП.ГруппаПечати; 
		
		Язык = ?(глВерсия=1, Неопределено, ГруппаПечати.Язык );
		
		ТаблицаЗадания.Очистить();
		
		// формирование заголовка марки
		Если НЕ ДобавитьНомерМарки(ТаблицаЗадания, ГруппаПечати) Тогда
			ГруппыПечатиОтказы.Добавить(ГруппаПечати);
			Продолжить;
		КонецЕсли;
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("ОТМЕНА",Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Шрифт3,Жирный,ДвойнаяШирина,ДвойнаяВысота,Центр,ПереводСтроки";
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "СтрОтчерк";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";    
		
		// шапка марки
		ДобавитьШапкуМарки(ТаблицаЗадания, ГруппаПечати);
		
		//-----------------------------------------------------------------------------
		ПараметрыШрифта = ?(ГруппаПечати.ПечатьНаименованиеДвойнойШрифт, ",ДвойнаяШирина,ДвойнаяВысота", "");
		
		Для каждого СтрокаПодачи Из СтрокаГП.Строки Цикл
		Для каждого СтрокаТовара Из СтрокаПодачи.Строки Цикл
			
			Товар = СтрокаТовара.Товар;
			
			ЭтоТовар = ТипЗнч(Товар) = Тип("СправочникСсылка.Товары");
			ЭтоТариф = ЭтоТовар И ИнтерфейсРМ.ЭтоТариф(Товар);
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = "ОТМЕНА ";
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Шрифт3,Жирный,Лево,Переносить,НеПереводСтроки";
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = ДопНаименование(Товар,Язык);
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,Переносить,НеПереводСтроки"+ПараметрыШрифта;
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = "";
			Если ЭтоТовар И ГруппаПечати.ПечатьЕдиницаИзмерения Тогда
				Если ЭтоТариф Тогда
					Задание.Данные = " ["+Товар.Тариф.ВремяЦены+"]";
				ИначеЕсли ЗначениеЗаполнено(Товар.ЕдиницаИзмерения) Тогда
					Задание.Данные = " ["+ДопНаименование(Товар.ЕдиницаИзмерения,Язык)+"]";
				КонецЕсли;
			КонецЕсли;
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,Переносить,ПереводСтроки"+ПараметрыШрифта;
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = Формат(-СтрокаТовара.Количество,"ЧЦ=10;ЧДЦ=3");
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Право,Переносить,ПереводСтроки"+ПараметрыШрифта;
			
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = "СтрЧерта";
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Лево,ПереводСтроки";
			
		КонецЦикла;
		КонецЦикла;
		
		// и сигнал если надо
		Если ГруппаПечати.ДлительностьСигнала>0 Тогда
			Задание = ТаблицаЗадания.Добавить();
			Задание.Данные    = ГруппаПечати.ДлительностьСигнала;
			Задание.ТипДанных = "Сигнал";
		КонецЕсли; 
		
		СтрокаТаблицыГП = ТаблицаГруппПечати.Добавить();
		СтрокаТаблицыГП.Группа			= ГруппаПечати;
		СтрокаТаблицыГП.ТаблицаЗадания	= ТаблицаЗадания.Скопировать();
		
	КонецЦикла;
	
	ПечатьЗаданийПоГруппамПечати(ГруппыПечатиОтказы);
	
	Возврат ГруппыПечатиОтказы;
КонецФункции  

// Описание функции
//
Функция СоздатьТаблицуГруппПечати()
	
	ТаблицаГруппПечати = Новый ТаблицаЗначений;
	ТаблицаГруппПечати.Колонки.Добавить("Группа");
	ТаблицаГруппПечати.Колонки.Добавить("ТаблицаЗадания");
	ТаблицаГруппПечати.Колонки.Добавить("ИндексОсновногоПринтера");
	ТаблицаГруппПечати.Колонки.Добавить("Принтер");
	ТаблицаГруппПечати.Колонки.Добавить("Результат");
	ТаблицаГруппПечати.Колонки.Добавить("ПечатьИдет");
	ТаблицаГруппПечати.Колонки.Добавить("НомерПопытки");
	ТаблицаГруппПечати.Колонки.Добавить("МассивПринтеров");
	ТаблицаГруппПечати.Колонки.Добавить("КолвоПринтеров");
	
	Возврат ТаблицаГруппПечати;
КонецФункции

// Добавление в
//
Процедура ДобавитьШапкуМарки(ТаблицаЗадания, ГруппаПечати)
	
	НуженПереводСтроки = Ложь;
	
	Если ГруппаПечати.НумерацияМарок И НомерМарки <> Неопределено Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "N " + Формат(НомерМарки,"ЧГ=");
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,НеПереводСтроки";
		
		НуженПереводСтроки = Истина;
	КонецЕсли;
	
	Если ГруппаПечати.ПечатьНомерЗаказа Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "  "+Перевод("Заказ:",Язык)+" "+Заказ.Номер;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
		
		НуженПереводСтроки = Ложь;
	КонецЕсли;
	
	Если НуженПереводСтроки Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "ПереводСтроки";
	КонецЕсли;
	
	Если Заказ.Доставка Тогда
		ДобавитьШапкуМаркиДоставка(ТаблицаЗадания, ГруппаПечати);
		Возврат;
	КонецЕсли; 
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ИСПОЛНИТЕЛЬ",Язык,,11,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Врег(ДопНаименование(ГруппаПечати,Язык));
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	ПараметрыШрифта = ?(ГруппаПечати.ПечатьМестоДвойнойШрифт, ",ДвойнаяШирина,ДвойнаяВысота", "");
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("МЕСТО",Язык,,11,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Врег(ДопНаименование(Заказ.ПосадочноеМесто,Язык));//+" № "+Заказ.ПосадочноеМесто.Код);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки"+ПараметрыШрифта;
	
	Если ГруппаПечати.ПечатьМестоРеализации Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = "             "+Заказ.МестоРеализации.Наименование;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	КонецЕсли;
	
	Если ГруппаПечати.ПечатьКоличествоПосетителей Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Гостей",Язык,,11,1)+": "+Заказ.КоличествоПосетителей;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
	КонецЕсли;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Официант",Язык)+": "+Врег(ДопНаименование(Заказ.Автор,Язык));
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Дата",Язык,,8,1)+": "+СтрТекДата()+Перевод("Время",Язык,,6,1)+": "+СтрТекВремя(1);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрОтчерк";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
КонецПроцедуры

Процедура ДобавитьШапкуМаркиДоставка(ТаблицаЗадания, ГруппаПечати)
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ДОСТАВКА",Язык) + ?(ЗначениеЗаполнено(Заказ.ВнешнийНомер), " № "+Заказ.ВнешнийНомер, "");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Центр,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("ИСПОЛНИТЕЛЬ",Язык,,11,1)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Врег(ДопНаименование(ГруппаПечати,Язык));
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	Если ГруппаПечати.ПечатьКоличествоПосетителей Тогда
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = Перевод("Персон",Язык,,11,1)+": "+Заказ.КоличествоПосетителей;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
	КонецЕсли;
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрЧерта";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Автор",Язык)+": "+Врег(ДопНаименование(глПользователь,Язык));
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = Перевод("Дата",Язык,,5,1)+": "+СтрТекДата()+Перевод("Время",Язык,,6,1)+": "+СтрТекВремя(1);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = "СтрОтчерк";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,ПереводСтроки";
	
КонецПроцедуры

// Определяет текущий номер марки
//
Функция ДобавитьНомерМарки(ТаблицаЗадания, ГруппаПечати)
	
	Если ГруппаПечати.НумерацияМарок ИЛИ ГруппаПечати.ЕстьМонитор Тогда
		
		НомерМарки = РегистрыСведений.ГруппыПечатиДопИнф.Получить(Новый Структура("ГруппаПечати",ГруппаПечати)).НомерМарки;
		НомерМарки = НомерМарки + 1;
		
		ДопИнф = РегистрыСведений.ГруппыПечатиДопИнф.СоздатьМенеджерЗаписи();
		ДопИнф.ГруппаПечати = ГруппаПечати;
		ДопИнф.НомерМарки	= НомерМарки;
		Если НЕ ИнтерфейсРМ.ПопыткаДействияСОбъектом( ДопИнф, "Объект.Записать()" ) Тогда
			Возврат Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

// Уменьшает номер марки
//
Процедура ВычестьНомерМарки(ГруппаПечати)
	
	Если ГруппаПечати.НумерацияМарок Тогда
		
		ДопИнф = РегистрыСведений.ГруппыПечатиДопИнф.СоздатьМенеджерЗаписи();
		ДопИнф.ГруппаПечати = ГруппаПечати;
		ДопИнф.Прочитать();
		ДопИнф.НомерМарки	= ДопИнф.НомерМарки - 1;
		ИнтерфейсРМ.ПопыткаДействияСОбъектом( ДопИнф, "Объект.Записать()" );
		
		НомерМарки = ДопИнф.НомерМарки; // запоминаем для корешка
	КонецЕсли;
	
КонецПроцедуры

// Создает документ ПодтверждениеГотовности, формирует ШК марки и добавляет его в задание.
// Также формирует задание для печати корешка, если надо.
//
Процедура ДобавитьШтрихКод(ТаблицаЗадания, ТаблицаКорешка, ГруппаПечати, КодПодтверждения, Подача=Неопределено, Товар=Неопределено, Колво=0)
		
	Если НЕ ГруппаПечати.ЕстьПринтер Тогда
		Возврат;
	КонецЕсли; 
	
	Если  ПодтверждатьГотовность  Тогда
		
		ШтрихКодМарки = СформироватьШК( ПрефиксШКмарки + КодПодтверждения );	
		
		Задание = ТаблицаЗадания.Добавить();
		Задание.Данные    = ШтрихКодМарки;
		Задание.ТипДанных = "ШтрихКод";
		Задание.Параметры = "ВысотаШК10,EAN13,ЕстьКС,Центр,ПереводСтроки";
		
	КонецЕсли;
	
	Если НЕ ПечатьКорешка Тогда
		Возврат;
	КонецЕсли;
	
	// Если к марке прилагается несколько корешков, то надо печатать их в обратном порядке,
	// поэтому вставляем строки в начало.
	Инд = 0;
	Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
	Задание.ТипДанных = "ЧастичнаяОтрезка";
	
	Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
	Задание.Данные    = Перевод("Корешок марки",Язык) + ?(ГруппаПечати.НумерацияМарок, " N "+НомерМарки, "");
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	Если ГруппаПечати.ПечатьНомерЗаказа Тогда
		Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
		Задание.Данные    = Перевод("Заказ:",Язык)+" "+Заказ.Номер;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
	КонецЕсли;
	
	Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
	Задание.Данные    = Перевод("МЕСТО",Язык)+": ";
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Лево,НеПереводСтроки";
	
	Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
	Задание.Данные    = Врег(ДопНаименование(Заказ.ПосадочноеМесто,Язык));//+" № "+Заказ.ПосадочноеМесто.Код);
	Задание.ТипДанных = "Строка";
	Задание.Параметры = "Жирный,Лево,ПереводСтроки";
	
	РежимПодтверждения	= ГруппаПечати.РежимПодтверждения;
	Если РежимПодтверждения = 1 И НЕ глПараметрыРМ.ЗаказИспользоватьКурсы Тогда
		РежимПодтверждения = 0;
	КонецЕсли; 
	
	Если РежимПодтверждения > 0 Тогда
		Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
		Задание.Данные    = "СтрЧерта";
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,ПереводСтроки";
	КонецЕсли; 
	
	Если РежимПодтверждения = 1  Тогда
		Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
		//Задание.Данные    = Перевод("ПОДАЧА",Язык)+" N "+Подача.Номер;
		Задание.Данные    = Перевод("ПОДАЧА",Язык)+" N "+Подача;
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Шрифт3,ДвойнаяШирина,Лево,ПереводСтроки";
	КонецЕсли; 
	
	Если РежимПодтверждения = 2  Тогда
		Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
		Задание.Данные    = ДопНаименование(Товар,Язык);
		Задание.ТипДанных = "Строка";
		Задание.Параметры = "Лево,Переносить,ПереводСтроки";
	КонецЕсли; 
	
	Если НЕ ПечатьШККорешка Тогда
		Возврат;
	КонецЕсли;
	
	ШтрихКодКорешка = СформироватьШК(ПрефиксШКкорешка + КодПодтверждения);
	
	Задание = ТаблицаКорешка.Вставить(Инд);	Инд = Инд + 1;
	Задание.Данные    = ШтрихКодКорешка;
	Задание.ТипДанных = "ШтрихКод";
	Задание.Параметры = "ВысотаШК10,EAN13,ЕстьКС,Центр,ПереводСтроки";
	
КонецПроцедуры

// Описание функции
//
Процедура ПечатьЗаданийПоГруппамПечати(ГруппыПечатиОтказы)
	
	Для каждого СтрокаГП Из ТаблицаГруппПечати Цикл
		
		Если НЕ СтрокаГП.Группа.ЕстьПринтер Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаГП.МассивПринтеров = Новый Массив;
		МассивПринтеровДляКопии = Новый Массив;
		
		ПринтерРМ = Неопределено;
		ГруппаПечатиРМ = глПараметрыРМ.ГруппыПечати.Строки.Найти(СтрокаГП.Группа,"Группа");
		Если ГруппаПечатиРМ <> Неопределено Тогда
			ПринтерРМ = ГруппаПечатиРМ.Принтер;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ПринтерРМ) Тогда
			// принтеры из настройки РМ
			ТаблицаПринтеров = Новый ТаблицаЗначений;
			ТаблицаПринтеров.Колонки.Добавить("НомерСтроки");
			ТаблицаПринтеров.Колонки.Добавить("Принтер");
			ТаблицаПринтеров.Колонки.Добавить("Копия");
			
			СтрокаПринтера = ТаблицаПринтеров.Добавить();
			СтрокаПринтера.НомерСтроки	= 1;
			СтрокаПринтера.Принтер		= ПринтерРМ;
			
			Для каждого ДопПринтер Из ГруппаПечатиРМ.Строки Цикл
				СтрокаПринтера = ТаблицаПринтеров.Добавить();
				СтрокаПринтера.НомерСтроки	= 2;	// не важно, главное что не 1
				СтрокаПринтера.Принтер		= ДопПринтер.Принтер;
				СтрокаПринтера.Копия		= ДопПринтер.Копия;
			КонецЦикла; 
			
		Иначе
			// Авто, принтеры из настройки группы печати
			ТаблицаПринтеров = СтрокаГП.Группа.Оборудование;
		КонецЕсли; 
		
		Для каждого СтрокаПринтера Из ТаблицаПринтеров Цикл
			Если СтрокаПринтера.НомерСтроки>1 И СтрокаПринтера.Копия Тогда
				МассивПринтеровДляКопии.Добавить(СтрокаПринтера.Принтер);
			Иначе
				СтрокаГП.МассивПринтеров.Добавить(СтрокаПринтера.Принтер);
			КонецЕсли;
		КонецЦикла; 
			
		
		СтрокаГП.НомерПопытки	= 1;
		СтрокаГП.КолвоПринтеров	= СтрокаГП.МассивПринтеров.Количество();
		
		Если НЕ глПараметрыРМ.Свойство("ОсновнойПринтерГП"+СтрокаГП.Группа.Код, СтрокаГП.ИндексОсновногоПринтера) Тогда
			СтрокаГП.ИндексОсновногоПринтера = 0;
		КонецЕсли;
		
		Если СтрокаГП.Группа.ЗапрашиватьОтменаПеренаправленияПечати И СтрокаГП.ИндексОсновногоПринтера <> 0
			И НЕ ФоновыйРежим Тогда
			
			Текст1="Вернуть обратно?";
			Текст2="Печать для """+СтрокаГП.Группа.Наименование+""" была перенаправлена на запасной принтер. Вернуться к основному?";
			Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"Да","","Esc=Нет") = "Да" Тогда
				глПараметрыРМ.Вставить("ОсновнойПринтерГП"+СтрокаГП.Группа.Код,0);
				СтрокаГП.ИндексОсновногоПринтера = 0;
			КонецЕсли;
		
		КонецЕсли; 
		
		СтрокаГП.Принтер	= СтрокаГП.МассивПринтеров[СтрокаГП.ИндексОсновногоПринтера];
		СтрокаГП.Результат	= ОтправитьЗаданиеНаПринтер(СтрокаГП.Принтер, СтрокаГП.ТаблицаЗадания, Истина, СтрокаГП.Группа.КоличествоКопий);
		СтрокаГП.ПечатьИдет	= Истина;
		
		// копии марок отправляем молча, без проверки связи
		Для каждого ПринтерКопия Из МассивПринтеровДляКопии Цикл
			ТаблицаЗадания = СтрокаГП.ТаблицаЗадания.Скопировать();
			
			Задание = ТаблицаЗадания.Вставить(0);
			Задание.Данные    = "КОПИЯ";
			Задание.ТипДанных = "Строка";
			Задание.Параметры = "Жирный,Право,ПереводСтроки";
			
			ОтправитьЗаданиеНаПринтер(ПринтерКопия, ТаблицаЗадания, Истина, СтрокаГП.Группа.КоличествоКопий);
		КонецЦикла;
		
	КонецЦикла;
	
	Если глПараметрыРМ.ПечатьМарокФоновая Тогда
		ФормаФоноваяПечать = ПолучитьФорму("ФоноваяПечать");
		ФормаФоноваяПечать.ПодключитьОбработчикОжидания("ПроверкаРезультатаПечатиМарок", 5, Истина);
		
	Иначе
		
		ПроверкаРезультатаПечатиМарок();
		
		Для каждого СтрокаГП Из ТаблицаГруппПечати Цикл
			Если НЕ СтрокаГП.Группа.ЕстьПринтер Тогда
				Продолжить;
			КонецЕсли;
			
			ГруппыПечатиОтказы.Добавить(СтрокаГП.Группа);
			ВычестьНомерМарки(СтрокаГП.Группа);
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаРезультатаПечатиМарок() Экспорт

	Если глРабочееМесто = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ОтборПечатьИдет = Новый Структура("ПечатьИдет",Истина);
	МассивСтрокПечатьИдет = ТаблицаГруппПечати.НайтиСтроки( ОтборПечатьИдет );
	
	Пока МассивСтрокПечатьИдет.Количество() > 0 Цикл
		
		Для каждого СтрокаГП Из МассивСтрокПечатьИдет Цикл
			
			Если СтрокаГП.Результат.Ошибка Тогда
				
				СтрокаГП.ПечатьИдет = Ложь;
				
				Если НЕ СтрокаГП.Группа.АвтоПереборПринтеров ИЛИ СтрокаГП.НомерПопытки=СтрокаГП.КолвоПринтеров Тогда
					Текст1 = СтрокаГП.Группа.Наименование;
					Текст2 = СтрокаГП.Результат.Описание+Символы.ПС+СтрокаГП.Результат.Подробно;
					Если НЕ ФоновыйРежим Тогда
						Если ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"Повтор","","Esc=Отмена") = "Повтор" Тогда
							СтрокаГП.Результат	= ОтправитьЗаданиеНаПринтер(СтрокаГП.Принтер, СтрокаГП.ТаблицаЗадания, Истина, СтрокаГП.Группа.КоличествоКопий);
							СтрокаГП.ПечатьИдет	= Истина;
							Продолжить;
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли; 
				
				// в фоне перенаправление всегда автоматом
				Если НЕ ФоновыйРежим Тогда
					Если НЕ СтрокаГП.Группа.АвтоПереборПринтеров И СтрокаГП.КолвоПринтеров>1 И СтрокаГП.НомерПопытки=1 Тогда
						Текст1="Перенаправить?";
						Текст2="Перенаправить печать для """+СтрокаГП.Группа.Наименование+""" на другой принтер и сделать его основным?";
						Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"Да","","Esc=Нет") = "Нет" Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли; 
				
				Если СтрокаГП.НомерПопытки = СтрокаГП.КолвоПринтеров Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаГП.НомерПопытки			 = СтрокаГП.НомерПопытки + 1;
				СтрокаГП.ИндексОсновногоПринтера = СтрокаГП.ИндексОсновногоПринтера + 1;
				Если СтрокаГП.ИндексОсновногоПринтера > СтрокаГП.КолвоПринтеров - 1 Тогда
					СтрокаГП.ИндексОсновногоПринтера = 0;
				КонецЕсли; 
				
				СтрокаГП.Принтер	= СтрокаГП.МассивПринтеров[СтрокаГП.ИндексОсновногоПринтера];
				СтрокаГП.Результат	= ОтправитьЗаданиеНаПринтер(СтрокаГП.Принтер, СтрокаГП.ТаблицаЗадания, Истина, СтрокаГП.Группа.КоличествоКопий);
				СтрокаГП.ПечатьИдет	= Истина;
				
			ИначеЕсли СтрокаГП.Результат.Свойство("ИндексЗадания") Тогда
				// драйвер вернул индекс задания и мы ждем результат его печати
				РезультатПроверки = ПроверкаСтатусаПечати(СтрокаГП.Принтер, СтрокаГП.Результат.ИндексЗадания);
				
				Если РезультатПроверки.Ошибка Тогда
					// ошибка обработается при следующей итерации
					СтрокаГП.Результат = РезультатПроверки;
					
				ИначеЕсли РезультатПроверки.ПечатьЗакончена Тогда
					// печать закончена успешно
					глПараметрыРМ.Вставить("ОсновнойПринтерГП"+СтрокаГП.Группа.Код, СтрокаГП.ИндексОсновногоПринтера);
					ТаблицаГруппПечати.Удалить(СтрокаГП);
					
				КонецЕсли; 
				
			Иначе
				// драйвер не вернул ошибок и не поддерживает фоновую проверку заданий
				// значит уже все ОК
				глПараметрыРМ.Вставить("ОсновнойПринтерГП"+СтрокаГП.Группа.Код, СтрокаГП.ИндексОсновногоПринтера);
				ТаблицаГруппПечати.Удалить(СтрокаГП);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если глПараметрыРМ.ПечатьМарокФоновая Тогда
			ФормаФоноваяПечать.ПодключитьОбработчикОжидания("ПроверкаРезультатаПечатиМарок", 5, Истина);
			Возврат;
		КонецЕсли;
		
		МассивСтрокПечатьИдет = ТаблицаГруппПечати.НайтиСтроки( ОтборПечатьИдет );
	КонецЦикла;
	
КонецПроцедуры
 
// Описание функции
//
Функция ОтправитьЗаданиеНаПринтер(Принтер, ТаблицаЗадания, ФоноваяПечать=Истина, КолвоКопий=1 )
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ТаблицаЗадания"	,ТаблицаЗадания);
	ПараметрыПечати.Вставить("КолвоКопий"		,Макс(1,КолвоКопий));
	ПараметрыПечати.Вставить("ФоноваяПечать"	,ФоноваяПечать);
	ПараметрыПечати.Вставить("Кассир"			,глПользователь.Наименование);	// это для СПАРКа и МУЛЬТИСОФТа
	ПараметрыПечати.Вставить("Пароль"			,глПользователь.КодДоступа);	// нужен для Феликс-3СК станция ПД
	
	// < КС_ВДВ ------------------------------------------------------------ 
	//Результат = Принтер.ПолучитьОбъект().ВыполнитьДействие("Печать", ПараметрыПечати);
	
	Если НЕ ВиртуальнаяПечать Тогда
		Результат = Принтер.ПолучитьОбъект().ВыполнитьДействие("Печать", ПараметрыПечати);
	Иначе	
		Результат = Новый Структура("Ошибка,Описание,Подробно", Ложь,"","");
	КонецЕсли; 
	// КС_ВДВ > ------------------------------------------------------------ 
	
	Если ФоноваяПечать Тогда
		Возврат Результат;
		
	ИначеЕсли Результат.Ошибка Тогда
		Если НЕ ПустаяСтрока(Результат.Описание) Тогда
			Текст1 = Результат.Описание;
			Текст2 = Результат.Подробно;
			Если НЕ ФоновыйРежим Тогда
				ИнтерфейсРМ.ВопросПредупреждение("Ошибка", Текст1, Текст2, "","ОК","");
			КонецЕсли; 
		КонецЕсли; 
		Возврат Ложь;
		
	Иначе
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции


// Описание функции
//
Функция ПроверкаСтатусаПечати(Принтер, ИндексЗадания)
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ИндексЗадания", ИндексЗадания);
	
	Возврат Принтер.ПолучитьОбъект().ВыполнитьДействие("ПроверкаСтатусаПечати", ПараметрыПечати);
	
КонецФункции

Функция ДопНаименование(Оригинал, Язык, РежимВозврата=1, ИмяРеквизита="Наименование" ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Оригинал) Тогда
		Возврат ?(РежимВозврата=1,"",Неопределено);
		
	ИначеЕсли глВерсия=1 ИЛИ НЕ Константы.ДопЯзыки.Получить() ИЛИ НЕ ЗначениеЗаполнено(Язык) Тогда
		Возврат ?(РежимВозврата=1, Оригинал[ИмяРеквизита], Неопределено);
		
	КонецЕсли;
	
	СтруктураИзмерений = Новый Структура("СправочникСсылка,Язык", Оригинал, Язык);
	ДопНаименование = РегистрыСведений.ДопНаименования.Получить(СтруктураИзмерений);
	
	Если ПустаяСтрока(ДопНаименование.Наименование)  Тогда
		Возврат ?(РежимВозврата=1, Оригинал[ИмяРеквизита], Неопределено);
	Иначе
		Возврат ?(РежимВозврата=1, ДопНаименование.Наименование, ДопНаименование.СправочникСсылка);
	КонецЕсли;
	
КонецФункции

// Перевод слова на дополнительный язык
//
// Параметры:
//	Оригинал	  - оригинал слова на русском языке
//  Язык          - Язык на который осуществляется перевод
//  РежимВозврата - режим возврата
//  Длина         - длина, до которой необходимо отформатировать
//  Положение     - положение
//
// Возвращаемое значение:
//	Тип.Вид		- описание
//
Функция Перевод(Оригинал, Язык, РежимВозврата=1, Длина=0, Положение=0 ) Экспорт 
	
	Если глВерсия=1 ИЛИ НЕ Константы.ДопЯзыки.Получить() ИЛИ НЕ ЗначениеЗаполнено(Язык) Тогда
		Возврат СтрДополнитьСлева(Оригинал, Длина);
	КонецЕсли;
	
	СтруктураИзмерений = Новый Структура("ОригиналСтр,Язык", Оригинал, Язык);
	Перевод = РегистрыСведений.СловарьСлужебныхСлов.Получить(СтруктураИзмерений);
	
	Если ПустаяСтрока(Перевод.Перевод) Тогда
		Возврат ?(РежимВозврата=1, СтрДополнитьСлева(Оригинал, Длина), Неопределено);
	Иначе
		Возврат СтрДополнитьСлева(Перевод.Перевод, Длина)
	КонецЕсли;
	
КонецФункции

Функция ЗаполнитьМассивЯзыков() 
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.Языки ГДЕ НЕ ПометкаУдаления");
	
	МассивЯзыков= Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	МассивЯзыков.Вставить(0,"Основной");
	
	Возврат МассивЯзыков;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#КонецЕсли
