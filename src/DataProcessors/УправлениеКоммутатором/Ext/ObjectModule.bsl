
#Если Клиент Тогда

Перем КолвоКнопок Экспорт;
Перем ВсегоСтраниц Экспорт;
Перем ТекСтраница Экспорт;

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
КонецПроцедуры
  
Процедура ЗаполнитьУстройства() Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ Ссылка, Наименование, Коммутатор, НомерКанала
		|ИЗ Справочник.КоммутируемыеУстройства 
		|ГДЕ НЕ ПометкаУдаления И Коммутатор В (&СписокКЭП)
		|");
	
	Запрос.УстановитьПараметр("СписокКЭП", глПараметрыРМ.СписокКЭП);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОшибкаКоммутатора = Ложь;
	КоммутируемыеУстройства.Очистить();
	
	Пока Выборка.Следующий() Цикл
		Устройство = КоммутируемыеУстройства.Добавить();
		Устройство.Ссылка			= Выборка.Ссылка;
		Устройство.Наименование		= Выборка.Наименование;
		Устройство.Коммутатор		= Выборка.Коммутатор;
		Устройство.НомерКанала		= Выборка.НомерКанала;
		Если НЕ ОшибкаКоммутатора Тогда
			Устройство.КаналВключен = ПолучитьКанал(Устройство, ОшибкаКоммутатора);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиТекущуюСтраницу(Форма) Экспорт
	
	ИндексЗначенияПервойКнопки = (ТекСтраница-1) * КолвоКнопок;
	
	Для НомерКнопки=1 По КолвоКнопок Цикл
		
		Кнопка = Форма.ЭлементыФормы["Кнопка"+НомерКнопки];
		
		ТекИндекс = ИндексЗначенияПервойКнопки + НомерКнопки-1;
		Если ТекИндекс <= КоммутируемыеУстройства.Количество()-1 Тогда
			Устройство = КоммутируемыеУстройства[ТекИндекс];
			Кнопка.Видимость = Истина;
			Кнопка.Заголовок = Устройство.Наименование;
			Кнопка.Картинка = ?(Устройство.КаналВключен, БиблиотекаКартинок.ЛампочкаВкл, БиблиотекаКартинок.ЛампочкаВыкл);
		Иначе
			Кнопка.Видимость = Ложь;
		КонецЕсли; 
		
	КонецЦикла;
	
	// выводим счетчик страниц
	Форма.ЭлементыФормы.ТекстКолвоСтраниц.Заголовок = ?(ВсегоСтраниц>1, Строка(ТекСтраница)+"/"+Строка(ВсегоСтраниц), "");
	// показываем только доступные направления листания
	Форма.ЭлементыФормы.КнопкаСтрелкаВверх.Видимость = ТекСтраница > 1;
	Форма.ЭлементыФормы.КнопкаСтрелкаВниз .Видимость = ТекСтраница < ВсегоСтраниц;
	
КонецПроцедуры
 
Процедура ВклВыклТекущееУстройство(Форма) Экспорт

	ИндексЗначенияПервойКнопки = (ТекСтраница-1) * КолвоКнопок;
	НомерКнопки = Число(Сред(Форма.ТекущийЭлемент.Имя,7));
	
	Устройство = КоммутируемыеУстройства[ ИндексЗначенияПервойКнопки + НомерКнопки-1 ];
	
	ПравоВклВыкл = ПланыВидовХарактеристик.ПраваДоступа["УправлениеКоммутатором"+?(Устройство.КаналВключен, "Выкл", "Вкл")];
	Если НЕ ИнтерфейсРМ.ПроверкаПраваДоступа(ПравоВклВыкл, Истина) Тогда
		Возврат;
	КонецЕсли; 
	
	Если Устройство.КаналВключен И НЕ ОтменитьТекущиеСобытия(Устройство) Тогда
		Возврат;
	КонецЕсли; 
	
	Если УстановитьКанал(Устройство, ?(Устройство.КаналВключен, 0, 1)) Тогда
		Устройство.КаналВключен = НЕ Устройство.КаналВключен;
		ВывестиТекущуюСтраницу(Форма);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПерезагрузитьОчередьСобытий() Экспорт

	Текст1="Внимание!";
	Текст2="Очередь событий в сервере коммутаторов будет перезагружена! Продолжить?";
	Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"ОК","","Esc=Отмена")="Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	// очищаем очередь всех коммутаторов
	ВсеКоммутаторы = КоммутируемыеУстройства.Выгрузить();
	ВсеКоммутаторы.Свернуть("Коммутатор");
	Для каждого СтрокаВсеКоммутаторы Из ВсеКоммутаторы Цикл
	
		Результат = СтрокаВсеКоммутаторы.Коммутатор.ПолучитьОбъект().ВыполнитьДействие("ОчиститьОчередь");
		
		Если Результат.Ошибка Тогда
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка", Результат.Описание, Результат.Подробно, "","ОК","");
			Возврат;
		КонецЕсли;
		
	КонецЦикла; 
	
	// выключаем все каналы
	Для каждого Устройство Из КоммутируемыеУстройства Цикл
		
		Если НЕ УстановитьКанал(Устройство, 0) Тогда
			Возврат;
		КонецЕсли; 
		
		Устройство.КаналВключен = Ложь;
	КонецЦикла; 
	
	// формируем очередь заново по текущим данным из базы
	Запрос = Новый Запрос("
		|ВЫБРАТЬ 
		|	Номер, ВремяНачала, ВремяКонца, КоммутироемоеУстройство
		|ИЗ 
		|	Документ.РасчетыПоТарифу
		|ГДЕ
		|	НЕ ПометкаУдаления
		|	И (ВремяКонца > &ТекВремя ИЛИ ВремяКонца = ДАТАВРЕМЯ(1,1,1))
		|");
		
	Запрос.УстановитьПараметр("ТекВремя", ТекущаяДата());	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Устройство = Выборка.КоммутироемоеУстройство;
		
		ПараметрыДействия = Новый Структура;
		ПараметрыДействия.Вставить("ИдСобытия"		, Выборка.Номер);
		ПараметрыДействия.Вставить("НомерКанала"	, Устройство.НомерКанала);
		ПараметрыДействия.Вставить("ВремяНач"		, Выборка.ВремяНачала);
		ПараметрыДействия.Вставить("ВремяКон"		, Выборка.ВремяКонца);
		
		Результат = Устройство.Коммутатор.ПолучитьОбъект().ВыполнитьДействие("ПоставитьВОчередь", ПараметрыДействия);
		
		Если Результат.Ошибка Тогда
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка", Результат.Описание, Результат.Подробно, "","ОК","");
			Возврат;
		КонецЕсли;
		
	КонецЦикла; 
	
	Текст1 = "Очередь перезагружена!";
	Текст2 = "Количество событий в очереди: " + Выборка.Количество();
	ИнтерфейсРМ.ВопросПредупреждение("Предупреждение", Текст1, Текст2, "","ОК","");
	
КонецПроцедуры

Функция ПолучитьКанал(Устройство, ОшибкаКоммутатора)

	Парам = Новый Структура;
	Парам.Вставить("НомерКанала", Устройство.НомерКанала);
	
	Результат = Устройство.Коммутатор.ПолучитьОбъект().ВыполнитьДействие("ПолучитьКанал", Парам);
	
	Если Результат.Ошибка Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка", Результат.Описание, Результат.Подробно, "","ОК","");
		ОшибкаКоммутатора = Истина;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Результат.СостояниеКанала=1;
КонецФункции

Функция УстановитьКанал(Устройство, СостояниеКанала)

	Парам = Новый Структура;
	Парам.Вставить("НомерКанала", Устройство.НомерКанала);
	Парам.Вставить("СостояниеКанала", СостояниеКанала);
	
	Результат = Устройство.Коммутатор.ПолучитьОбъект().ВыполнитьДействие("УстановитьКанал", Парам);
	
	Если Результат.Ошибка Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка", Результат.Описание, Результат.Подробно, "","ОК","");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Функция ОтменитьТекущиеСобытия(Устройство)

	Запрос = Новый Запрос("
		|ВЫБРАТЬ Номер ИЗ Документ.РасчетыПоТарифу
		|ГДЕ НЕ ПометкаУдаления
		|	 И КоммутироемоеУстройство = &Устройство
		|	 И ВремяНачала <= &ТекВремя
		|	 И (ВремяКонца >= &ТекВремя ИЛИ ВремяКонца = ДАТАВРЕМЯ(1,1,1))
		|");
		
	Запрос.УстановитьПараметр("Устройство", Устройство.Ссылка);	
	Запрос.УстановитьПараметр("ТекВремя", ТекущаяДата());	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли; 
	
	Текст1="Внимание!";
	Текст2="Текущие события этого устройства будут отменены!
			|Продолжить?";
	Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"ОК","","Esc=Отмена")="Отмена" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
	
		ПараметрыДействия = Новый Структура;
		ПараметрыДействия.Вставить("ИдСобытия"		, Выборка.Номер);
		ПараметрыДействия.Вставить("НомерКанала"	, Устройство.НомерКанала);
		ПараметрыДействия.Вставить("ВремяНач"		, Неопределено);
		ПараметрыДействия.Вставить("ВремяКон"		, Неопределено);
		// событие без времени начала отменяется
		Результат = Устройство.Коммутатор.ПолучитьОбъект().ВыполнитьДействие("ПоставитьВОчередь", ПараметрыДействия);
		
		Если Результат.Ошибка Тогда
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка", Результат.Описание, Результат.Подробно, "","ОК","");
			Возврат Ложь;
		КонецЕсли;
	
	КонецЦикла; 
	
	Возврат Истина;
КонецФункции
 
#КонецЕсли
