
#Если Клиент Тогда

Перем ФормаПодбора;
Перем ЭлементыФормы;
Перем ПараметрыНастройки Экспорт;
Перем РежимНастройки Экспорт;
Перем ТекущаяНастройка Экспорт;
Перем РежимОбъединения;
Перем НачалоОбъединения;
Перем МассивПодчиненныхКнопок;

Перем ДеревоКаталога Экспорт;	// Содержит дерево меню, в случае ручных привязок хранится в настройке.
Перем КаталогТекущегоУровня;
Перем КолвоКнопокКаталога;
Перем КолвоКнопокФиксГрупп;
Перем НачИндексы;				// Массив индексов начальной позиции по уровням (для листания).
Перем ЕстьКнопкаВозврата;		// Признак наличия на текущем уровне кнопки возврата наверх.
Перем РежимПодсказки Экспорт;

Перем КнопкаФиксГруппТекущая;
Перем ШиринаВнутреннейОбласти Экспорт;
Перем ИдетФормированиеЭлементовФормы Экспорт;

Перем Вес Экспорт;
Перем ВесСтабилен Экспорт;
Перем Обработка_Весы Экспорт;

Перем ОбрезатьОкно Экспорт;
Перем ОкноЛево Экспорт, ОкноВерх Экспорт, ОкноШирина Экспорт, ОкноВысота Экспорт, ОбрезкаОкнаШирина Экспорт;

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	ШиринаВнутреннейОбласти = 0;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ДЛЯ ФОРМ КНОПКАМИ

Процедура КнопкиДействияПередОткрытием(ТекущаяФорма) Экспорт
	
	ФормаПодбора = ТекущаяФорма;
	ЭлементыФормы = ФормаПодбора.ЭлементыФормы;
	
	Если НЕ РежимНастройки Тогда
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
	КонецЕсли;
	
	Если ПараметрыНастройки.СвободноеОкно И не ПараметрыНастройки.МестоРеализации = Справочники.МестаРеализации.Ресторан Тогда
		КнопкиИнициализацияНастройки();
	Иначе
		КнопкиИнициализацияНастройкиНеСвободноеОкно();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнитьНаименованияРучныхПривязок(СтрокиТекущегоУровня)

	Для каждого СтрокаКаталога Из СтрокиТекущегоУровня Цикл
	
		Если СтрокаКаталога.ТипКнопки=1 Тогда
			// произвольная группа - входим внутрь
			ЗаполнитьНаименованияРучныхПривязок(СтрокаКаталога.Строки);
			
		ИначеЕсли СтрокаКаталога.ТипКнопки=2 ИЛИ СтрокаКаталога.ТипКнопки=3 Тогда
			// группа или элемент справочника - заполняем актуальное наименование и прочее
			ЗаполнитьНаименование(СтрокаКаталога);
			
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьНаименование(СтрокаКаталога)

	КодСУП = СтрокаКаталога.КодСУП;
	Если Не ЗначениеЗаполнено(КодСУП) Тогда
		Если ЗначениеЗаполнено(СтрокаКаталога.Ссылка) Тогда
			Товар = СтрокаКаталога.Ссылка;
			Если Товар.ПолучитьОбъект() = Неопределено Тогда
				Товар = Справочники.Товары.ПустаяСсылка();
			Иначе
				СтрокаКаталога.КодСУП = Товар.КодСУП;
			КонецЕсли;
		Иначе
			Товар = Справочники.Товары.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Товар = ИнтерфейсРМ.НайтиТоварПоКоду(КодСУП);	
		Если Не ЗначениеЗаполнено(Товар) Тогда
			_Товар = ОбщегоНазначенияПовтИсп.НайтиПоРеквизиту("Справочник.Товары","КодСУП",КодСУП);
			Если _Товар <> Неопределено Тогда
				Товар = _Товар;
			КонецЕсли;
		КонецЕсли;
		СтрокаКаталога.Ссылка = Товар;
	КонецЕсли;
	
	
	Если ПараметрыНастройки.КнопкиВыводКартинки Тогда
		СтрокаКаталога.Картинка	= Товар.Изображение;
	КонецЕсли; 
	
	Если СтрокаКаталога.ТипКнопки=2 Тогда
		СтрокаКаталога.Наименование	= СокрЛП(ВРЕГ(Товар.Наименование));
	Иначе
		ТоварСвойства = Новый Структура;
		ТоварСвойства.Вставить("Наименование"		, СокрЛП(Товар.Наименование));
		ТоварСвойства.Вставить("Доступность", Истина);	
		Если Не ЗначениеЗаполнено(ТоварСвойства.Наименование) Тогда
			Наименование = СокрЛП(СтрокаКаталога.Наименование);
			RegExp = ирКэш.Получить().RegExp;
			RegExp.Pattern = "[\n\s]+\d+\.*\,*\d*=";
			ТоварСвойства.Наименование = RegExp.Replace(Наименование,"");
		КонецЕсли;
		Если ПараметрыНастройки.КнопкиПоказЕдИзм Тогда
			ТоварСвойства.Вставить("ЕдиницаИзмерения", Товар.ЕдиницаИзмерения.Наименование);
		КонецЕсли;
		Если ПараметрыНастройки.КнопкиПоказЦены Тогда
			ТоварСвойства.Вставить("Цена"			, ЦенаТовара(Товар, ТипЦен).Цена);
			Если Не ЗначениеЗаполнено(ТоварСвойства.Цена) Тогда
				ТоварСвойства.Цена = "0.00";
				Если Не РежимНастройки Тогда
					ТоварСвойства.Вставить("Доступность", Ложь);	
					Попытка
						СтрокаКаталога.Доступность = Ложь;
					Исключение
					КонецПопытки;
				КонецЕсли;
			Иначе 
				ТоварСвойства.Вставить("Доступность", Истина);	
			КонецЕсли;
		КонецЕсли;
		СтрокаКаталога.Наименование	= ШаблонНаименования(ТоварСвойства);
	КонецЕсли;

КонецПроцедуры
 
Процедура КнопкиИнициализацияНастройки() Экспорт
	//:ФормаПодбора = ПолучитьОбщуюФорму("ВыборПрофиля");
	//:ЭлементыФормы = ФормаПодбора.ЭлементыФормы;
	ИдетФормированиеЭлементовФормы = Истина;

	Если Не ПараметрыНастройки.СвободноеОкно Тогда
	
		ФормаПодбора.Ширина = ПараметрыНастройки.ШиринаОкна - 6;
		ФормаПодбора.Высота = ПараметрыНастройки.ВысотаОкна - 25;
	КонецЕсли;
	Панель = ФормаПодбора.Панель;
	Панель.ТекущаяСтраница.Заголовок = ТекущаяНастройка.Наименование;
	

	ЭлементыФормы.Очистить();
	Панель.Страницы.Очистить();
	
	
	Выб = Справочники.ТорговоеОборудование.Выбрать(,,Новый Структура("КодВида","ЭкранМеню"),"Наименование");
	Пока Выб.Следующий() Цикл
		Если Выб.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		Если Выб.Регион <> ТекущаяНастройка.Регион ИЛИ Выб.МестоРеализации <> ТекущаяНастройка.МестоРеализации Тогда
			Продолжить;
		КонецЕсли;
		
		Страница = Панель.Страницы.Добавить("Страница"+Выб.Код, Выб.Наименование,,БиблиотекаКартинок.ДляЗакладокМеню);
		Если Выб.Ссылка = ТекущаяНастройка Тогда
			Панель.ТекущаяСтраница = Страница;
		КонецЕсли;
			
	КонецЦикла;
		
	
	Попытка
		КнопкаДляОпределенияРазмера = ЭлементыФормы.КнопкаДляОпределенияРазмера;
	Исключение
		КнопкаДляОпределенияРазмера = ЭлементыФормы.Добавить(Тип("Кнопка"),"КнопкаДляОпределенияРазмера",);	
		КнопкаДляОпределенияРазмера.Ширина = 2000;
		КнопкаДляОпределенияРазмера.Высота = ФормаПодбора.Высота-45;
	КонецПопытки;
	ШиринаВнутреннейОбласти = КнопкаДляОпределенияРазмера.Ширина;
	ВысотаВнутреннейОбласти = КнопкаДляОпределенияРазмера.Высота;
	ЭлементыФормы.Очистить();	
	Панель.Страницы.Добавить("Выход", "Выход");
	Панель.Страницы.Удалить(0);

	
		
	Если ПараметрыНастройки.РучнаяНастройкаПривязок И ТипЗнч(ПараметрыНастройки.ДеревоКаталога) = Тип("ДеревоЗначений") Тогда
		ДеревоКаталога = ПараметрыНастройки.ДеревоКаталога.Скопировать();	// Скопировать() чтобы не по ссылке, чтобы не влияло последующее заполнение дерева
	Иначе
		ДеревоКаталога = СоздатьДеревоКаталога();
	КонецЕсли; 
	
	// 3.0.16.1 добавлена возможность объединениякнопок, нужна совместимость со старыми релизами
	Если ДеревоКаталога.Колонки.Найти("Объединение") = Неопределено Тогда 
		ДеревоКаталога.Колонки.Добавить("Объединение", Новый ОписаниеТипов("Булево"));	// признак объединения
		ДеревоКаталога.Колонки.Добавить("ВысотаКнопки");			// высота
		ДеревоКаталога.Колонки.Добавить("ШиринаКнопки");			// ширина
		ДеревоКаталога.Колонки.Добавить("МассивПодчиненных");		// номера подчиненных (скрытых) кнопок
	КонецЕсли; 
	Если ДеревоКаталога.Колонки.Найти("Доступность") = Неопределено Тогда 
		ДеревоКаталога.Колонки.Добавить("Доступность");				// кнопка должна быть недоступна, если цена = 0
	КонецЕсли;
	
	Если ДеревоКаталога.Колонки.Найти("КодСУП") = Неопределено Тогда 
		ДеревоКаталога.Колонки.Добавить("КодСУП", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(8)));	// признак объединения
	КонецЕсли;
	
	//---------------------------------------------------
	// общее оформление формы
	Заголовок	= ПараметрыНастройки.КаталогТоваров.Наименование+" ("+ТекущаяНастройка.Наименование+")";
	
	// размеры окна; здесь задаются размеры рабочей области формы, без рамок и заголовка
	Если ФормаПодбора.РежимРабочегоСтола Тогда
		Ширина = ПараметрыНастройки.ШиринаОкна -4;
		Высота = ПараметрыНастройки.ВысотаОкна -4;
	Иначе
		Ширина = ПараметрыНастройки.ШиринаОкна - 6;
		Высота = ПараметрыНастройки.ВысотаОкна - 25;
		
		ФормаПодбора.Ширина = Ширина;
		ФормаПодбора.Высота = Высота;
	КонецЕсли; 
	
	Ширина = ШиринаВнутреннейОбласти;
	
	

	
	// для КПК отступа не надо
	ОтступФормы = ?(ПараметрыНастройки.ИнтерфейсТип=0, 3, 0);
	
	//---------------------------------------------------
	// параметры панели с основными кнопками каталога, если не будет второй панели
	Если ПараметрыНастройки.СвободноеОкно Тогда
		ПанельВерх = ОтступФормы;
		ПанельЛево = ОтступФормы;
		ПанельВысота = Высота - ПанельВерх - ОтступФормы;
		ПанельШирина = ШиринаВнутреннейОбласти - ПанельЛево - ОтступФормы*2;
	Иначе
		ПанельВерх = ОтступФормы;
		ПанельЛево = ОтступФормы;
		ПанельВысота = Высота - ПанельВерх - ОтступФормы;
		ПанельШирина = ШиринаВнутреннейОбласти - ПанельЛево - ОтступФормы;
	КонецЕсли;
	
	//---------------------------------------------------
	// панель с кнопками фиксированных групп
	// размеры основной панели меняются соответственно
	Если ПараметрыНастройки.ФиксироватьГруппы Тогда
		
		ПанельФГВерх	= ПанельВерх;
		ПанельФГЛево	= ПанельЛево;
		ПанельФГВысота	= ПанельВысота;
		ПанельФГШирина	= ПанельШирина;
		
		ОтступПанели = ?(ПараметрыНастройки.ВыделениеФиксГрупп, 1, 0);
		
		Если ПараметрыНастройки.ПоложениеФиксГрупп = "Верх" Тогда
			ПанельФГВысота	= ОтступПанели*2 + 2 + (ПараметрыНастройки.ВысотаКнопки + ПараметрыНастройки.ИнтервалПоВертикали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельВерх		= ПанельВерх	+ ПанельФГВысота + ОтступФормы;
			ПанельВысота	= ПанельВысота	- ПанельФГВысота - ОтступФормы;
			
		ИначеЕсли ПараметрыНастройки.ПоложениеФиксГрупп = "Лево" Тогда
			ПанельФГШирина	= ОтступПанели*2 + 1 + (ПараметрыНастройки.ШиринаКнопки + ПараметрыНастройки.ИнтервалПоГоризонтали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельЛево		= ПанельЛево	+ ПанельФГШирина + ОтступФормы;
			ПанельШирина	= ПанельШирина	- ПанельФГШирина - ОтступФормы;
			
		ИначеЕсли ПараметрыНастройки.ПоложениеФиксГрупп = "Право" Тогда
			ПанельФГШирина	= ОтступПанели*2 + 1 + (ПараметрыНастройки.ШиринаКнопки + ПараметрыНастройки.ИнтервалПоГоризонтали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельШирина	= ПанельШирина	- ПанельФГШирина - ОтступФормы;
			ПанельФГЛево	= ПанельЛево	+ ПанельШирина + ОтступФормы;
			
		ИначеЕсли ПараметрыНастройки.ПоложениеФиксГрупп = "Низ" Тогда
			ПанельФГВысота	= ОтступПанели*2 + 1 + (ПараметрыНастройки.ВысотаКнопки + ПараметрыНастройки.ИнтервалПоВертикали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельВысота	= ПанельВысота	- ПанельФГВысота - ОтступФормы;
			ПанельФГВерх	= ПанельВерх	+ ПанельВысота + ОтступФормы;
			
		КонецЕсли;
		
		КолвоКнопокФиксГрупп = СоздатьПанельКнопок("КнопкаФиксГрупп", ПанельФГВерх, ПанельФГЛево, ПанельФГВысота, ПанельФГШирина, ОтступПанели);
		
	КонецЕсли; 
	
	//---------------------------------------------------
	// панель с основными кнопками каталога
	КолвоКнопокКаталога = СоздатьПанельКнопок("КнопкаКаталога", ПанельВерх, ПанельЛево, ПанельВысота, ПанельШирина);
	
	Если НЕ ПараметрыНастройки.РучнаяНастройкаПривязок Тогда
		ЗаполнитьТекущийУровеньПоСправочнику(ДеревоКаталога.Строки);
	КонецЕсли;
	КаталогТекущегоУровня = ДеревоКаталога.Строки;
	
	ЕстьКнопкаВозврата = Ложь;
	НачИндексы = Новый Массив;
	НачИндексы.Вставить(0,0);	// начальная позиция для вывода строк каталога текущего уровня пр листании
	
	Если ПараметрыНастройки.ФиксироватьГруппы Тогда
		ПоказатьВсеКнопки("КнопкаФиксГрупп");
	Иначе
		ПоказатьВсеКнопки();
	КонецЕсли; 
	ИдетФормированиеЭлементовФормы = Ложь;
	//:РаботаСокнами = Обработки.РаботаСокнами.Создать();
	Попытка
		//РаботаСокнами.УстановитьПоложениеОкна(ФормаПодбора.Заголовок, 1,50);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура КнопкиИнициализацияНастройкиНеСвободноеОкно()
	
	Если ПараметрыНастройки.РучнаяНастройкаПривязок И ТипЗнч(ПараметрыНастройки.ДеревоКаталога) = Тип("ДеревоЗначений") Тогда
		ДеревоКаталога = ПараметрыНастройки.ДеревоКаталога.Скопировать();	// Скопировать() чтобы не по ссылке, чтобы не влияло последующее заполнение дерева
	Иначе
		ДеревоКаталога = СоздатьДеревоКаталога();
	КонецЕсли; 
	
	// 3.0.16.1 добавлена возможность объединениякнопок, нужна совместимость со старыми релизами
	Если ДеревоКаталога.Колонки.Найти("Объединение") = Неопределено Тогда
		ДеревоКаталога.Колонки.Добавить("Объединение", Новый ОписаниеТипов("Булево"));	// признак объединения
		ДеревоКаталога.Колонки.Добавить("ВысотаКнопки");			// высота
		ДеревоКаталога.Колонки.Добавить("ШиринаКнопки");			// ширина
		ДеревоКаталога.Колонки.Добавить("МассивПодчиненных");		// номера подчиненных (скрытых) кнопок
		ДеревоКаталога.Колонки.Добавить("Доступность");				// кнопка должна быть недоступна, если цена = 0
	КонецЕсли; 
	
	
	//---------------------------------------------------
	// общее оформление формы
	Заголовок	= ПараметрыНастройки.КаталогТоваров.Наименование+" ("+ТекущаяНастройка.Наименование+")";
	
	// размеры окна; здесь задаются размеры рабочей области формы, без рамок и заголовка
	Если ФормаПодбора.РежимРабочегоСтола Тогда
		Ширина = ПараметрыНастройки.ШиринаОкна -4;
		Высота = ПараметрыНастройки.ВысотаОкна -4;
	Иначе
		Ширина = ПараметрыНастройки.ШиринаОкна - 6;
		Высота = ПараметрыНастройки.ВысотаОкна - 25;
		
		ФормаПодбора.Ширина = Ширина;
		ФормаПодбора.Высота = Высота;
	КонецЕсли; 
	
	// для КПК отступа не надо
	ОтступФормы = ?(ПараметрыНастройки.ИнтерфейсТип=0, 3, 0);
	
	//---------------------------------------------------
	// параметры панели с основными кнопками каталога, если не будет второй панели
	Если ПараметрыНастройки.СвободноеОкно Тогда
		ПанельВерх = ОтступФормы;
		ПанельЛево = ОтступФормы;
		ПанельВысота = Высота - ПанельВерх - ОтступФормы;
		Попытка
			ПанельШирина = Ширина - ПанельЛево - ОтступФормы*2 - ЭлементыФормы.КнопкаВыход.Ширина;	
		Исключение
			ПанельШирина = Ширина - ПанельЛево - ОтступФормы*2;
		КонецПопытки;
		
	Иначе
		ПанельВерх = ОтступФормы + ЭлементыФормы.тДозаказ.Верх + ЭлементыФормы.тДозаказ.Высота;
		ПанельЛево = ОтступФормы;
		ПанельВысота = Высота - ПанельВерх - ОтступФормы;
		ПанельШирина = Ширина - ПанельЛево - ОтступФормы;
	КонецЕсли;
	
	//---------------------------------------------------
	// панель с кнопками фиксированных групп
	// размеры основной панели меняются соответственно
	Если ПараметрыНастройки.ФиксироватьГруппы Тогда
		
		ПанельФГВерх	= ПанельВерх;
		ПанельФГЛево	= ПанельЛево;
		ПанельФГВысота	= ПанельВысота;
		ПанельФГШирина	= ПанельШирина;
		
		ОтступПанели = ?(ПараметрыНастройки.ВыделениеФиксГрупп, 1, 0);
		
		Если ПараметрыНастройки.ПоложениеФиксГрупп = "Верх" Тогда
			ПанельФГВысота	= ОтступПанели*2 + 2 + (ПараметрыНастройки.ВысотаКнопки + ПараметрыНастройки.ИнтервалПоВертикали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельВерх		= ПанельВерх	+ ПанельФГВысота + ОтступФормы;
			ПанельВысота	= ПанельВысота	- ПанельФГВысота - ОтступФормы;
			
		ИначеЕсли ПараметрыНастройки.ПоложениеФиксГрупп = "Лево" Тогда
			ПанельФГШирина	= ОтступПанели*2 + 1 + (ПараметрыНастройки.ШиринаКнопки + ПараметрыНастройки.ИнтервалПоГоризонтали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельЛево		= ПанельЛево	+ ПанельФГШирина + ОтступФормы;
			ПанельШирина	= ПанельШирина	- ПанельФГШирина - ОтступФормы;
			
		ИначеЕсли ПараметрыНастройки.ПоложениеФиксГрупп = "Право" Тогда
			ПанельФГШирина	= ОтступПанели*2 + 1 + (ПараметрыНастройки.ШиринаКнопки + ПараметрыНастройки.ИнтервалПоГоризонтали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельШирина	= ПанельШирина	- ПанельФГШирина - ОтступФормы;
			ПанельФГЛево	= ПанельЛево	+ ПанельШирина + ОтступФормы;
			
		ИначеЕсли ПараметрыНастройки.ПоложениеФиксГрупп = "Низ" Тогда
			ПанельФГВысота	= ОтступПанели*2 + 1 + (ПараметрыНастройки.ВысотаКнопки + ПараметрыНастройки.ИнтервалПоВертикали) * ПараметрыНастройки.КолвоРядовФиксГрупп;
			ПанельВысота	= ПанельВысота	- ПанельФГВысота - ОтступФормы;
			ПанельФГВерх	= ПанельВерх	+ ПанельВысота + ОтступФормы;
			
		КонецЕсли;
		
		КолвоКнопокФиксГрупп = СоздатьПанельКнопок("КнопкаФиксГрупп", ПанельФГВерх, ПанельФГЛево, ПанельФГВысота, ПанельФГШирина, ОтступПанели);
		
	КонецЕсли; 
	
	//---------------------------------------------------
	// панель с основными кнопками каталога
	КолвоКнопокКаталога = СоздатьПанельКнопок("КнопкаКаталога", ПанельВерх, ПанельЛево, ПанельВысота, ПанельШирина);
	
	Если НЕ ПараметрыНастройки.РучнаяНастройкаПривязок Тогда
		ЗаполнитьТекущийУровеньПоСправочнику(ДеревоКаталога.Строки);
	КонецЕсли;
	КаталогТекущегоУровня = ДеревоКаталога.Строки;
	
	ЕстьКнопкаВозврата = Ложь;
	НачИндексы = Новый Массив;
	НачИндексы.Вставить(0,0);	// начальная позиция для вывода строк каталога текущего уровня пр листании
	
	Если ПараметрыНастройки.ФиксироватьГруппы Тогда
		ПоказатьВсеКнопки("КнопкаФиксГрупп");
	Иначе
		ПоказатьВсеКнопки();
	КонецЕсли; 
	
КонецПроцедуры

Функция СоздатьПанельКнопок(ИмяКнопок, ПанельВерх, ПанельЛево, ПанельВысота, ПанельШирина, ОтступПанели=0)
	
	ПанельКнопок = ЭлементыФормы.Добавить(Тип("Панель"), "Панель"+ИмяКнопок );
	ПанельКнопок.Верх = ПанельВерх;
	ПанельКнопок.Лево = ПанельЛево;
	ПанельКнопок.Высота = ПанельВысота;
	ПанельКнопок.Ширина = ПанельШирина;
	ПанельКнопок.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
	
	Если ОбрезкаОкнаШирина <> Неопределено Тогда
		КоличествоКнопокПоГоризонтали = Цел(ПанельКнопок.Ширина/ПараметрыНастройки.ШиринаКнопки);
		ПараметрыНастройки.ШиринаКнопки = Цел(ПанельКнопок.Ширина/КоличествоКнопокПоГоризонтали)-4;
	КонецЕсли;	
	Если ИмяКнопок = "КнопкаФиксГрупп" Тогда
		Если ПараметрыНастройки.ВыделениеФиксГрупп Тогда
			ПанельКнопок.Рамка = Новый Рамка(ПараметрыНастройки.РамкаФиксГрупп);
			ПанельКнопок.ЦветФона = ПараметрыНастройки.ЦветФонаФиксГрупп;
		КонецЕсли; 
		
	ИначеЕсли РежимНастройки И ФормаПодбора.РежимРабочегоСтола Тогда
		// размеры окна установить нельзя, поэтому сделаем рамку чтобы было видно рабочую область
		ПанельКнопок.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная);
		
	КонецЕсли; 
	
	КолвоКнопок = 0;
	КнопкаЛево = ОтступПанели;
	КнопкаВерх = ОтступПанели;
	
	Пока Истина Цикл
		
		КолвоКнопок = КолвоКнопок + 1;
		Кнопка = ЭлементыФормы.Добавить(Тип("Кнопка"), ИмяКнопок+"_"+КолвоКнопок, Ложь, ПанельКнопок );
		
		Кнопка.Верх = КнопкаВерх;
		Кнопка.Лево = КнопкаЛево;
		Кнопка.Высота = ПараметрыНастройки.ВысотаКнопки;
		Кнопка.Ширина = ПараметрыНастройки.ШиринаКнопки;
		Кнопка.РазмерКартинки = ПараметрыНастройки.КнопкиРазмерКартинки;
		
		Кнопка.МногострочныйРежим		= Истина;
		Кнопка.ГоризонтальноеПоложение	= ГоризонтальноеПоложение.Центр;
		Кнопка.ВертикальноеПоложение	= ВертикальноеПоложение.Центр;
		
		Кнопка.УстановитьДействие("Нажатие", Новый Действие("КнопкаТовараНажатие") );
		
		КнопкаЛево = КнопкаЛево + ПараметрыНастройки.ШиринаКнопки + ПараметрыНастройки.ИнтервалПоГоризонтали;
		
		Если КнопкаЛево + ПараметрыНастройки.ШиринаКнопки > ПанельШирина-ОтступПанели  Тогда
			
			КнопкаЛево = ОтступПанели;
			КнопкаВерх = КнопкаВерх + ПараметрыНастройки.ВысотаКнопки + ПараметрыНастройки.ИнтервалПоВертикали;
			
			Если КнопкаВерх + ПараметрыНастройки.ВысотаКнопки > ПанельВысота-ОтступПанели Тогда
				Прервать;
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат КолвоКнопок;
КонецФункции

Функция СоздатьДеревоКаталога()
	
	Каталог = Новый ДеревоЗначений;
	Каталог.Колонки.Добавить("ТипКнопки");	// -1 - открытая группа, 0 - пустая кнопка, 
											//  1 - произвольная группа, 2 - группа справочника, 3 - элемент
	Каталог.Колонки.Добавить("Ссылка");
	Каталог.Колонки.Добавить("КодСУП", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(8)));
	Каталог.Колонки.Добавить("ДобавлятьВсе");
	Каталог.Колонки.Добавить("Наименование");
	Каталог.Колонки.Добавить("Картинка");
	Каталог.Колонки.Добавить("ЦветФона");
	Каталог.Колонки.Добавить("ЦветТекста");
	Каталог.Колонки.Добавить("Шрифт");
	Каталог.Колонки.Добавить("Объединение", Новый ОписаниеТипов("Булево"));	// признак объединения
	Каталог.Колонки.Добавить("ВысотаКнопки");			// высота
	Каталог.Колонки.Добавить("ШиринаКнопки");			// ширина
	Каталог.Колонки.Добавить("МассивПодчиненных");		// номера подчиненных (скрытых) кнопок
	
	Возврат Каталог;
КонецФункции

Функция ДобавитьСтрокуКаталога(Каталог)
	
	СтрокаКаталога = Каталог.Добавить();
	ОчиститьСтрокуКаталога(СтрокаКаталога);
	
	Возврат СтрокаКаталога;
КонецФункции

Процедура ОчиститьСтрокуКаталога(СтрокаКаталога)
	
	СтрокаКаталога.Строки.Очистить();
	СтрокаКаталога.ТипКнопки	= 0;
	СтрокаКаталога.Ссылка		= Неопределено;
	СтрокаКаталога.КодСУП		= "";
	СтрокаКаталога.ДобавлятьВсе	= Ложь;
	СтрокаКаталога.Наименование	= "";
	СтрокаКаталога.Картинка		= Неопределено;
	СтрокаКаталога.ЦветФона		= Новый Цвет;
	СтрокаКаталога.ЦветТекста	= Новый Цвет;
	СтрокаКаталога.Шрифт		= Новый Шрифт;
	СтрокаКаталога.Объединение	= Ложь;
	СтрокаКаталога.МассивПодчиненных = Неопределено;
	
КонецПроцедуры

Процедура ЗаполнитьТекущийУровеньПоСправочнику(Каталог, Родитель=Неопределено, ДобавитьВыходВверх=Истина)
	
	Если Родитель=Неопределено Тогда
		Родитель = Справочники.Товары.ПустаяСсылка();
		
	ИначеЕсли ДобавитьВыходВверх Тогда
		СтрокаКаталога = ДобавитьСтрокуКаталога(Каталог);
		СтрокаКаталога.ТипКнопки	= -1;
		СтрокаКаталога.Ссылка		= Родитель;
		СтрокаКаталога.Наименование	= ВРЕГ(Родитель.Наименование);
		СтрокаКаталога.Картинка		= Неопределено;
		
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Если ПараметрыНастройки.КнопкиПоказЦены Тогда
		Запрос.Текст = "
			|ВЫБРАТЬ  первые 40
			|	Товары.Ссылка,
			|	Товары.ЭтоГруппа,
			|	Товары.Наименование,
			|	Товары.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
			|	Товары.Изображение,
			|	ЦеныСрезПоследних.Цена, КодСУП
			|ИЗ
			|	Справочник.Товары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ТипЦен = &ТипЦен) КАК ЦеныСрезПоследних
			|		ПО Товары.Номенклатура = ЦеныСрезПоследних.Номенклатура
			|";
	Иначе
		Запрос.Текст = "
			|ВЫБРАТЬ
			|	Товары.Ссылка,
			|	Товары.ЭтоГруппа,
			|	Товары.Наименование,
			|	Товары.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
			|	Товары.Изображение, КодСУП
			|ИЗ
			|	Справочник.Товары КАК Товары
			|";
	КонецЕсли; 
		
	Запрос.Текст = Запрос.Текст + "
			|ГДЕ
			|	Товары.Родитель = &Родитель
			|	И Товары.Владелец = &Владелец
			|	И НЕ Товары.ПометкаУдаления
			|	И (Товары.ЭтоГруппа ИЛИ Товары.ЕстьВПродаже)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Товары.ЭтоГруппа УБЫВ, "+ПараметрыНастройки.РеквизитСортировки+"
			|";

	Запрос.УстановитьПараметр("Владелец", ПараметрыНастройки.КаталогТоваров);
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Запрос.УстановитьПараметр("Период"	, ТекущаяДата());
	Запрос.УстановитьПараметр("ТипЦен"	, ТипЦен);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаКаталога = ДобавитьСтрокуКаталога(Каталог);
		СтрокаКаталога.Ссылка	= Выборка.Ссылка;
		СтрокаКаталога.КодСУП 	= Выборка.КодСУП;
		СтрокаКаталога.Картинка	= Выборка.Изображение;
		
		Если Выборка.ЭтоГруппа Тогда
			СтрокаКаталога.ТипКнопки	= 2;
			СтрокаКаталога.Наименование	= ВРЕГ(Выборка.Наименование);
		Иначе
			СтрокаКаталога.ТипКнопки	= 3;
			СтрокаКаталога.Наименование	= ШаблонНаименования(Выборка);
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ШаблонНаименования(ТоварСвойства)
	
	СтрНаим = ТоварСвойства.Наименование;
	
	Если ПараметрыНастройки.КолвоСимволовВСтроке<>0 И ПараметрыНастройки.КолвоСтрок<>0 Тогда
		
		КолвоСтрок = ПараметрыНастройки.КолвоСтрок;
		Если ПараметрыНастройки.КнопкиПоказЕдИзм ИЛИ ПараметрыНастройки.КнопкиПоказЦены Тогда
			КолвоСтрок = Макс(1, КолвоСтрок-1);
		КонецЕсли;
		
		ОстатокНаим = СтрНаим;
		СтрНаим = "";
		
		Для н=1 По КолвоСтрок Цикл
			СтрНаим		= СтрНаим + Лев (ОстатокНаим, ПараметрыНастройки.КолвоСимволовВСтроке) + ?(н=КолвоСтрок, "", Символы.ПС);
			ОстатокНаим = Сред(ОстатокНаим, ПараметрыНастройки.КолвоСимволовВСтроке+1);
		КонецЦикла; 
		
	КонецЕсли;
	
	Если ПараметрыНастройки.КнопкиПоказЕдИзм ИЛИ ПараметрыНастройки.КнопкиПоказЦены Тогда
		
		СтрНаим = СтрНаим + Символы.ПС;
		
		Если ПараметрыНастройки.КнопкиПоказЕдИзм Тогда
			СтрНаим = СтрНаим + "["+ТоварСвойства.ЕдиницаИзмерения+"] ";
		КонецЕсли;
		
		Если ПараметрыНастройки.КнопкиПоказЦены Тогда
			СтрНаим = СтрНаим + ТоварСвойства.Цена + "=";
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат СтрНаим;
КонецФункции

Процедура ПоказатьВсеКнопки(ИмяКнопки="КнопкаКаталога")
	
	Если ИмяКнопки = "КнопкаКаталога" Тогда
		Каталог		= КаталогТекущегоУровня;
		КолвоКнопок = КолвоКнопокКаталога;
	Иначе
		Каталог		= ДеревоКаталога.Строки;
		КолвоКнопок = КолвоКнопокФиксГрупп;
	КонецЕсли;
	
	МассивПодчиненныхКнопок = Новый Массив;
	
	Для НомерКнопки=1 По КолвоКнопок Цикл
		ПоказатьКнопку(ИмяКнопки, НомерКнопки, Каталог);
	КонецЦикла;
	
	МассивПодчиненныхКнопок.Очистить();
	
	// нужны или нет кнопки листания
	ЕстьЧтоЛистать = (ИмяКнопки="КнопкаКаталога" И КаталогТекущегоУровня.Количество() > КолвоКнопокКаталога);
	
	НужнаСтрелкаВверх = ЕстьЧтоЛистать И ( НачИндексы[0] > ?(ЕстьКнопкаВозврата,1,0) );
	НужнаСтрелкаВниз  = ЕстьЧтоЛистать И ( НачИндексы[0] + (КолвоКнопокКаталога - ?(ЕстьКнопкаВозврата,1,0) ) <= КаталогТекущегоУровня.Количество()-1 );
	
	ФормаПодбора.УстановитьВидимостьСтрелок(НужнаСтрелкаВверх, НужнаСтрелкаВниз);
	
КонецПроцедуры

Процедура ПоказатьКнопку(ИмяКнопки, НомерКнопки, Каталог)
	
	Кнопка = ЭлементыФормы[ИмяКнопки+"_"+НомерКнопки];
	ИндексСтроки = ИндексСтрокиКаталога(ИмяКнопки, НомерКнопки);
	
	// если индекс за пределами каталога, то создаем фиктивную структуру для упрощения последующей логики
	СтрокаКаталога = ?(ИндексСтроки <= Каталог.Количество()-1, Каталог[ИндексСтроки], Новый Структура("Объединение, ТипКнопки", Ложь, 0) );
	
	// определение объединенной кнопки
	Если ПараметрыНастройки.РучнаяНастройкаПривязок Тогда
		
		// подчиненные кнопки просто прячем
		Если МассивПодчиненныхКнопок.Найти(НомерКнопки) <> Неопределено Тогда
			Кнопка.Видимость = Ложь;
			Возврат;
		КонецЕсли; 
		
		Если СтрокаКаталога.Объединение Тогда
			Для каждого НомерПодчКнопки Из СтрокаКаталога.МассивПодчиненных Цикл
				МассивПодчиненныхКнопок.Добавить(НомерПодчКнопки);
			КонецЦикла;
			Кнопка.Высота = СтрокаКаталога.ВысотаКнопки;
			Кнопка.Ширина = СтрокаКаталога.ШиринаКнопки;
		Иначе
			Кнопка.Высота = ПараметрыНастройки.ВысотаКнопки;
			Кнопка.Ширина = ПараметрыНастройки.ШиринаКнопки;
			
			Попытка
				Доступность = Вычислить("СтрокаКаталога.Доступность"); 
			Исключение
				Доступность = Неопределено;
			КонецПопытки;
			
			Если Доступность <> Неопределено Тогда
				Кнопка.Доступность = Доступность;	
			Иначе
				Кнопка.Доступность = Истина;	
			КонецЕсли;

		КонецЕсли; 
		
				
	КонецЕсли; 
	
	Если СтрокаКаталога.ТипКнопки=0 Тогда
		// пустая кнопка
		Если РежимНастройки И ПараметрыНастройки.РучнаяНастройкаПривязок И 
			(Каталог.Родитель=Неопределено ИЛИ Каталог.Родитель.ТипКнопки=1) Тогда
			// в режиме настройки привязок показываем пустые кнопки для возможности их настройки
			// только на верхнем уровне или внутри произвольной группы
			Кнопка.Картинка = Новый Картинка();
			Кнопка.Заголовок= "-----";
			Кнопка.ЦветФонаКнопки = ПараметрыНастройки.ЦветФонаКнопки;
			Кнопка.Видимость = Истина;
		Иначе
			Кнопка.Видимость = Ложь;
		КонецЕсли; 
		
	Иначе
		
		// в настроенном меню хранятся только ссылки, наименование и картинку надо вытянуть из справочника
		Если ПустаяСтрока(СтрокаКаталога.Наименование) Тогда
			ЗаполнитьНаименование(СтрокаКаталога);
		КонецЕсли; 
		
		Кнопка.ЦветФонаКнопки = ?(СтрокаКаталога.ЦветФона.Вид = ВидЦвета.АвтоЦвет, ПараметрыНастройки.ЦветФонаКнопки, СтрокаКаталога.ЦветФона);
		
		Если ПараметрыНастройки.КнопкиВыводКартинки Тогда
			
			Если ЗначениеЗаполнено(СтрокаКаталога.Картинка) Тогда
				Кнопка.Картинка = СтрокаКаталога.Картинка.Хранилище.Получить();
				
			ИначеЕсли СтрокаКаталога.ТипКнопки = 3 Тогда
				//Кнопка.Картинка = БиблиотекаКартинок.КаталогЭлемент;
				Кнопка.Картинка = Новый Картинка();
			ИначеЕсли СтрокаКаталога.ТипКнопки = -1 Тогда
				//Кнопка.Картинка = БиблиотекаКартинок.КаталогГруппаОткрыта;
				Кнопка.Картинка = Новый Картинка();
				
			Иначе
				//Кнопка.Картинка = БиблиотекаКартинок.КаталогГруппа;
				Кнопка.Картинка = Новый Картинка();

			КонецЕсли; 
			
		КонецЕсли;
		
		Если ПараметрыНастройки.КнопкиВыводТекста Тогда
			Кнопка.Заголовок		= СокрЛП(СтрокаКаталога.Наименование);
			Кнопка.ЦветТекстаКнопки = ?(СтрокаКаталога.ЦветТекста.Вид = ВидЦвета.АвтоЦвет,	ПараметрыНастройки.ЦветТекстаКнопки,	СтрокаКаталога.ЦветТекста);
			Кнопка.Шрифт			= ?(СтрокаКаталога.Шрифт.Вид = ВидШрифта.АвтоШрифт,		ПараметрыНастройки.ШрифтКнопки,			СтрокаКаталога.Шрифт);
		КонецЕсли; 
		
		Кнопка.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьМассивЭлементовПроизвольнойГруппы( МассивЭлементов, ГруппаКаталога )
	
	Для каждого СтрокаКаталога Из ГруппаКаталога Цикл
		
		Если СтрокаКаталога.ТипКнопки=1 Тогда
			ЗаполнитьМассивЭлементовПроизвольнойГруппы( МассивЭлементов, СтрокаКаталога.Строки );
			
		ИначеЕсли СтрокаКаталога.ТипКнопки=2 ИЛИ СтрокаКаталога.ТипКнопки=3 Тогда
			МассивЭлементов.Добавить(СтрокаКаталога.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура НастройкаКнопки(ИмяКнопки, НомерКнопки, Каталог, СтрокаКаталога)
	
	ФормаНастройки = ПолучитьФорму("НастройкаПривязки");
	ФормаНастройки.ПараметрыНастройки	= ПараметрыНастройки;
	ФормаНастройки.КаталогТоваров		= ПараметрыНастройки.КаталогТоваров;
	
	ФормаНастройки.ТипКнопки	= СтрокаКаталога.ТипКнопки;
	ФормаНастройки.Товар		= ВнешниеИсточникиДанных.СУПтт.Таблицы.dbo_Спр_Товары.НайтиПоПолю("КодГрПгрПрд", СтрокаКаталога.КодСУП);
	ФормаНастройки.ДобавлятьВсе	= СтрокаКаталога.ДобавлятьВсе;
	ФормаНастройки.Наименование	= СтрокаКаталога.Наименование;
	ФормаНастройки.Картинка		= СтрокаКаталога.Картинка;
	ФормаНастройки.ЦветФона		= СтрокаКаталога.ЦветФона;
	ФормаНастройки.ЦветТекста	= СтрокаКаталога.ЦветТекста;
	ФормаНастройки.Шрифт		= СтрокаКаталога.Шрифт;
	
	Если ФормаНастройки.ОткрытьМодально()<>"ОК" Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаКаталога.ТипКнопки <> ФормаНастройки.ТипКнопки Тогда
		// если изменился тип кнопки, то надо привести в соответствие подменю
		СтрокаКаталога.Строки.Очистить();
		Если ИмяКнопки="КнопкаКаталога" И ФормаНастройки.ТипКнопки=1 Тогда
			// для кнопки возврата
			СтрокаПодМеню = ДобавитьСтрокуКаталога(СтрокаКаталога.Строки);
			СтрокаПодМеню.ТипКнопки		= -1;
		КонецЕсли; 
	КонецЕсли;
	
	СтрокаКаталога.ТипКнопки	= ФормаНастройки.ТипКнопки;
	Если СтрокаКаталога.ТипКнопки=1 Тогда
		СтрокаКаталога.Ссылка		= Неопределено;
		СтрокаКаталога.Наименование	= ФормаНастройки.Наименование;
		СтрокаКаталога.Картинка		= ФормаНастройки.Картинка;
		Если ИмяКнопки="КнопкаКаталога" Тогда
			// для кнопки возврата
			СтрокаПодМеню = СтрокаКаталога.Строки[0];
			СтрокаПодМеню.Наименование	= ФормаНастройки.Наименование;
			СтрокаПодМеню.ЦветФона		= ФормаНастройки.ЦветФона;
			СтрокаПодМеню.ЦветТекста	= ФормаНастройки.ЦветТекста;
			СтрокаПодМеню.Шрифт			= ФормаНастройки.Шрифт;
		КонецЕсли; 
	Иначе
		СтрокаКаталога.Ссылка		= ФормаНастройки.Товар;
		СтрокаКаталога.Наименование	= СокрЛП(ФормаНастройки.Товар.descr);
		СтрокаКаталога.КодСУП		= ФормаНастройки.Товар.КодГрПгрПрд;
		СтрокаКаталога.Картинка		= Неопределено;
	КонецЕсли;
	СтрокаКаталога.ДобавлятьВсе	= ФормаНастройки.ДобавлятьВсе;
	СтрокаКаталога.ЦветФона		= ФормаНастройки.ЦветФона;
	СтрокаКаталога.ЦветТекста	= ФормаНастройки.ЦветТекста;
	СтрокаКаталога.Шрифт		= ФормаНастройки.Шрифт;
	
	ПоказатьКнопку(ИмяКнопки, НомерКнопки, Каталог);
	
	ФормаПодбора.ВладелецФормы.Модифицированность = Истина;
	
КонецПроцедуры

Процедура ПереходПодМеню(ИмяКнопки, СтрокаКаталога)
	
	КаталогТекущегоУровня = СтрокаКаталога.Строки;
	
	Если НЕ ЗначениеЗаполнено(КаталогТекущегоУровня) И СтрокаКаталога.ТипКнопки=2 Тогда
		ДобавитьВыходВверх = ИмяКнопки="КнопкаКаталога";
		ЗаполнитьТекущийУровеньПоСправочнику(КаталогТекущегоУровня, СтрокаКаталога.Ссылка, ДобавитьВыходВверх);
	КонецЕсли; 
	
	ЕстьКнопкаВозврата = ЗначениеЗаполнено(КаталогТекущегоУровня) И КаталогТекущегоУровня[0].ТипКнопки = -1;
	
	Если ИмяКнопки="КнопкаФиксГрупп" Тогда
		// при нажатии на фикс. кнопку сначала "возвращаемся наверх"
		НачИндексы.Очистить();
	КонецЕсли; 
	
	НачИндексы.Вставить(0, ?(ЕстьКнопкаВозврата,1,0) );	// начальная позиция для вывода строк каталога текущего уровня при листании
	
	ПоказатьВсеКнопки();
	
КонецПроцедуры

Процедура ПереходНаверх()

	СтрокаРодитель = КаталогТекущегоУровня.Родитель;
	КаталогТекущегоУровня = ?(СтрокаРодитель.Родитель=Неопределено, ДеревоКаталога.Строки, СтрокаРодитель.Родитель.Строки);
	
	ЕстьКнопкаВозврата = КаталогТекущегоУровня[0].ТипКнопки = -1;
	НачИндексы.Удалить(0);
	
	ПоказатьВсеКнопки();

КонецПроцедуры
 
Процедура ОбработкаНажатияКнопки(Элемент, Знач ТекВес = Неопределено) Экспорт
	
	Если НЕ РежимНастройки Тогда
		глОтсечкаПростоя();
	КонецЕсли;
	
	ПозицияПодчерка = Найти(Элемент.Имя,"_");
	ИмяКнопки	= Лев(Элемент.Имя, ПозицияПодчерка-1 );
	НомерКнопки = Число( Сред(Элемент.Имя, ПозицияПодчерка+1 ) );
	
	Каталог = ?(ИмяКнопки="КнопкаКаталога", КаталогТекущегоУровня, ДеревоКаталога.Строки);
	
	ИндексСтроки = ИндексСтрокиКаталога(ИмяКнопки, НомерКнопки);
	
	Пока ИндексСтроки > Каталог.Количество()-1 Цикл
		//это м.б. в режиме настройки
		ДобавитьСтрокуКаталога(Каталог);
	КонецЦикла;
	
	СтрокаКаталога = Каталог[ИндексСтроки];
	
	Если РежимНастройки Тогда
		// завершаем объединение
		Если РежимОбъединения Тогда
			КонецОбъединения = Новый Структура;
			КонецОбъединения.Вставить("СтрокаКаталога"	,СтрокаКаталога);
			КонецОбъединения.Вставить("Кнопка"			,Элемент);
			КонецОбъединения.Вставить("ИмяКнопки"		,ИмяКнопки);
			КонецОбъединения.Вставить("НомерКнопки"		,НомерКнопки);
			Если ЗакончитьОбъединение(КонецОбъединения) Тогда
				РежимОбъединения = Ложь;
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		// при нажатии на фикс. кнопку сразу обновляем основные кнопки
		Если ИмяКнопки="КнопкаФиксГрупп" Тогда
			КаталогТекущегоУровня = СтрокаКаталога.Строки;
			ПоказатьВсеКнопки();
		КонецЕсли; 
		
		// настройка привязки действия к кнопке
		СписокДействий = Новый СписокЗначений;
		
		Если СтрокаКаталога.ТипКнопки=-1 Тогда
			СписокДействий.Добавить("ПереходНаверх","Вернуться наверх");
		Иначе
			Если ИмяКнопки="КнопкаКаталога" И СтрокаКаталога.ТипКнопки=1 ИЛИ 
				НЕ ПараметрыНастройки.РучнаяНастройкаПривязок И СтрокаКаталога.ТипКнопки=2 Тогда
				СписокДействий.Добавить("Переход","Войти внутрь");
			КонецЕсли;
			Если ПараметрыНастройки.РучнаяНастройкаПривязок Тогда
				СписокДействий.Добавить("Изменить");
				Если СтрокаКаталога.ТипКнопки>0 Тогда
					СписокДействий.Добавить("Очистить");
				КонецЕсли;
				СписокДействий.Добавить("ВставитьИзБуфера");
			КонецЕсли; 
			Если СтрокаКаталога.ТипКнопки=2 ИЛИ СтрокаКаталога.ТипКнопки=3 Тогда
				СписокДействий.Добавить("ОткрытьКарточку","Открыть карточку");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыНастройки.РучнаяНастройкаПривязок Тогда
			Если СтрокаКаталога.Объединение Тогда
				СписокДействий.Добавить("Разъединить");
			КонецЕсли;
			СписокДействий.Добавить("Объединить");
		КонецЕсли;
		
		Если СписокДействий.Количество()=1 Тогда
			ВыбДействие = СписокДействий[0].Значение;
		Иначе
			ВыбЭлемент = ФормаПодбора.ВыбратьИзСписка(СписокДействий);
			Если ВыбЭлемент=Неопределено Тогда
				Возврат;
			КонецЕсли;
			ВыбДействие = ВыбЭлемент.Значение;
		КонецЕсли;
		
		Если ВыбДействие="Изменить" Тогда
			НастройкаКнопки(ИмяКнопки, НомерКнопки, Каталог, СтрокаКаталога);
			
		ИначеЕсли ВыбДействие="ВставитьИзБуфера" Тогда
			ВставитьИзБуфера(ИмяКнопки, НомерКнопки, Каталог, СтрокаКаталога);
		ИначеЕсли ВыбДействие="ПереходНаверх" Тогда
			ПереходНаверх();
			
		ИначеЕсли ВыбДействие="Переход" Тогда
			ПереходПодМеню(ИмяКнопки, СтрокаКаталога);
			
		ИначеЕсли ВыбДействие="ОткрытьКарточку" Тогда
			СтрокаКаталога.Ссылка.ПолучитьФорму().ОткрытьМодально();
			ПоказатьКнопку(ИмяКнопки, НомерКнопки, Каталог);
			
		ИначеЕсли ВыбДействие="Очистить" Тогда
			ОчиститьСтрокуКаталога(СтрокаКаталога);
			ПоказатьКнопку(ИмяКнопки, НомерКнопки, Каталог);
			ФормаПодбора.ВладелецФормы.Модифицированность = Истина;
			
		ИначеЕсли ВыбДействие="Разъединить" Тогда
			СтрокаКаталога.Объединение = Ложь;
			ФормаПодбора.ВладелецФормы.Модифицированность = Истина;
			ПоказатьВсеКнопки(ИмяКнопки);
			
		ИначеЕсли ВыбДействие="Объединить" Тогда
			Элемент.ЦветФонаКнопки = ЦветаСтиля.ЦветРамки;
			РежимОбъединения = Истина;
			НачалоОбъединения = Новый Структура;
			НачалоОбъединения.Вставить("СтрокаКаталога"	,СтрокаКаталога);
			НачалоОбъединения.Вставить("Кнопка"			,Элемент);
			НачалоОбъединения.Вставить("ИмяКнопки"		,ИмяКнопки);
			НачалоОбъединения.Вставить("НомерКнопки"	,НомерКнопки);
			
		КонецЕсли;
		
		// после изменения фикс. кнопки надо обновить основные кнопки
		Если ИмяКнопки="КнопкаФиксГрупп" И (ВыбДействие="Изменить" ИЛИ ВыбДействие="Очистить") Тогда
			КаталогТекущегоУровня = СтрокаКаталога.Строки;
			ПоказатьВсеКнопки();
		КонецЕсли; 
		
	Иначе // рабочий режим
		Если СтрокаКаталога.ТипКнопки=-1 Тогда
			ПереходНаверх();
			
		ИначеЕсли СтрокаКаталога.ТипКнопки=3 Тогда // Товар
			Если РежимПодсказки Тогда
				ИнтерфейсРМ.Подсказка(СтрокаКаталога.Наименование,СтрокаКаталога.Ссылка.ДопИнформация);
			Иначе
				Попытка
					Если СтрокаКаталога.Ссылка.ЗапросКоличества Тогда
						ФормаПодбора.ВладелецФормы.ТекКоличество = ТекВес;
					КонецЕсли;
				Исключение
				КонецПопытки;
				ФормаПодбора.ОповеститьОВыборе(СтрокаКаталога.Ссылка);
				Если ТекущаяНастройка.МестоРеализации <> Справочники.МестаРеализации.Ресторан Тогда
					ФормаПодбора.Закрыть();
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли СтрокаКаталога.ДобавлятьВсе И НЕ РежимПодсказки И НЕ ВызовИзСтопЛиста Тогда
			МассивЭлементов = Новый Массив;
			
			Если СтрокаКаталога.ТипКнопки=2 Тогда
				МассивЭлементов.Добавить(СтрокаКаталога.Ссылка);
			Иначе
				ЗаполнитьМассивЭлементовПроизвольнойГруппы( МассивЭлементов, СтрокаКаталога.Строки );
			КонецЕсли;
			
			ФормаПодбора.ОповеститьОВыборе(МассивЭлементов);
			
		Иначе // вход в группу
			ПереходПодМеню(ИмяКнопки, СтрокаКаталога);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяКнопки="КнопкаФиксГрупп" Тогда
		КнопкаФиксГруппТекущая = Элемент;
	ИначеЕсли КнопкаФиксГруппТекущая <> Неопределено Тогда
		ФормаПодбора.ТекущийЭлемент = КнопкаФиксГруппТекущая;
	КонецЕсли; 
	
КонецПроцедуры

Функция ЗакончитьОбъединение(КонецОбъединения)
	
	Если КонецОбъединения.ИмяКнопки <> НачалоОбъединения.ИмяКнопки Тогда
		// конец в другой области
		Предупреждение("Некорректное объединение!",5);
		Возврат Ложь;
	КонецЕсли; 
		
	КнопкаНачала= НачалоОбъединения.Кнопка;
	КнопкаКонца	= КонецОбъединения.Кнопка;
	Область = Новый Структура("Лево,Верх,Право,Низ");
	Область.Лево	= Мин(КнопкаНачала.Лево, КнопкаКонца.Лево); 
	Область.Верх	= Мин(КнопкаНачала.Верх, КнопкаКонца.Верх); 
	Область.Право	= Макс(КнопкаНачала.Лево+КнопкаНачала.Ширина, КнопкаКонца.Лево+КнопкаКонца.Ширина); 
	Область.Низ		= Макс(КнопкаНачала.Верх+КнопкаНачала.Высота, КнопкаКонца.Верх+КнопкаКонца.Высота); 
	
	// определяем какие кнопки попадают в объединение
	МассивПодчиненных = Новый Массив;
	
	ИмяКнопки = НачалоОбъединения.ИмяКнопки;
	Если ИмяКнопки = "КнопкаКаталога" Тогда
		Каталог		= КаталогТекущегоУровня;
		КолвоКнопок = КолвоКнопокКаталога;
	Иначе
		Каталог		= ДеревоКаталога.Строки;
		КолвоКнопок = КолвоКнопокФиксГрупп;
	КонецЕсли;
	
	Для НомерКнопки=1 По КолвоКнопок Цикл
		Кнопка = ЭлементыФормы[ИмяКнопки+"_"+НомерКнопки];
		ИндексСтроки = ИндексСтрокиКаталога(ИмяКнопки, НомерКнопки);
		СтрокаКаталога = ?(ИндексСтроки <= Каталог.Количество()-1, Каталог[ИндексСтроки], Неопределено );
		
		// объединенная кнопка может пересекать область, ее сначала надо вернуть в обычную
		Если КнопкаПересекаетОбласть(Кнопка,Область) Тогда
			Если Вопрос("Пересекающие выделенную область кнопки будут разъединены!", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
				Возврат Ложь;
			КонецЕсли; 
			СтрокаКаталога.Объединение = Ложь;
			Кнопка.Высота = ПараметрыНастройки.ВысотаКнопки;
			Кнопка.Ширина = ПараметрыНастройки.ШиринаКнопки;
		КонецЕсли;
		
		Если Кнопка.Верх = Область.Верх И Кнопка.Лево = Область.Лево Тогда
			// это верхняя левая кнопка, делаем ее главной
			НачалоОбъединения.СтрокаКаталога = СтрокаКаталога;
			
		ИначеЕсли КнопкаВнутриОбласти(Кнопка,Область) Тогда
			// это подчиненная кнопка
			МассивПодчиненных.Добавить(НомерКнопки);
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Если МассивПодчиненных.Количество()>0 Тогда
		СтрокаКаталога = НачалоОбъединения.СтрокаКаталога;
		СтрокаКаталога.Объединение = Истина;
		СтрокаКаталога.ВысотаКнопки = Область.Низ - Область.Верх;
		СтрокаКаталога.ШиринаКнопки = Область.Право - Область.Лево;
		СтрокаКаталога.МассивПодчиненных = МассивПодчиненных;
		
		ФормаПодбора.ВладелецФормы.Модифицированность = Истина;
	КонецЕсли; 
	
	ПоказатьВсеКнопки(ИмяКнопки);
	
	Возврат Истина;
КонецФункции

Функция КнопкаПересекаетОбласть(Кнопка,Область)

	// методом исключения
	Если КнопкаВнутриОбласти(Кнопка,Область) Тогда
		Возврат Ложь;
	КонецЕсли; 
	Если Кнопка.Верх > Область.Низ ИЛИ
		Кнопка.Лево > Область.Право ИЛИ
		Кнопка.Верх+Кнопка.Высота < Область.Верх ИЛИ
		Кнопка.Лево+Кнопка.Ширина < Область.Лево Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Функция КнопкаВнутриОбласти(Кнопка,Область)

	Возврат Кнопка.Верх >= Область.Верх И Кнопка.Лево >= Область.Лево И
			Кнопка.Верх+Кнопка.Высота <= Область.Низ И Кнопка.Лево+Кнопка.Ширина <= Область.Право;
	

КонецФункции
 
Функция ИндексСтрокиКаталога(ИмяКнопки, НомерКнопки)
	
	// в фиксированных группах листания нет
	Если ИмяКнопки="КнопкаФиксГрупп" Тогда
		Возврат НомерКнопки - 1;
	КонецЕсли; 
	
	// при листании каталога, индекс зависит от наличия кнопки возврата
	
	Если НомерКнопки=1 И ЕстьКнопкаВозврата Тогда
		// это мы фиксируем кнопку возврата на предыдущий уровень
		Возврат 0;
	Иначе	
		Возврат НачИндексы[0] + НомерКнопки - 1 - ?(ЕстьКнопкаВозврата, 1, 0);
	КонецЕсли;
	
КонецФункции

Процедура Пролистать(Направление) Экспорт
	
	НачИндексы[0] = НачИндексы[0] + Направление * (КолвоКнопокКаталога - ?(ЕстьКнопкаВозврата,1,0) );
	
	ПоказатьВсеКнопки();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ДЛЯ ФОРМ СПИСКОМ

Процедура СписокДействияПередОткрытием(ТекущаяФорма) Экспорт
	
	ФормаПодбора = ТекущаяФорма;
	//ФормаПодбора.Стиль = БиблиотекаСтилей[глПараметрыРМ.ИмяСтиля];
	
	ЭлементыФормы = ФормаПодбора.ЭлементыФормы;
	
	ТекущийКаталог = ПараметрыНастройки.КаталогТоваров;
	ЭлементыФормы.КнопкаМеню.Заголовок = ТекущийКаталог.Наименование;
	
	ФормаПодбора.Товары.Отбор.Владелец.Установить(ТекущийКаталог);
	ФормаПодбора.Товары.Отбор.ЕстьВПродаже.Установить(Истина);
	
	ФормаПодбора.Товары.Порядок.Установить("ЭтоГруппа, "+ПараметрыНастройки.РеквизитСортировки);
	
	ЭлементыФормы.Товары.Шрифт = ПараметрыНастройки.ШрифтСписка;
	ЭлементыФормы.Товары.Колонки.Код				.Видимость = ПараметрыНастройки.СписокПоказКода;
	ЭлементыФормы.Товары.Колонки.ЕдиницаИзмерения	.Видимость = ПараметрыНастройки.СписокПоказЕдИзм;
	ЭлементыФормы.Товары.Колонки.Цена				.Видимость = ПараметрыНастройки.СписокПоказЦены;
	
	ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры
 
Процедура СписокОбработкаВыбораТовара() Экспорт
	
	Товар = ФормаПодбора.ЭлементыФормы.Товары.ТекущаяСтрока;
	
	Если Товар=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Товар.ЭтоГруппа Тогда
		ФормаПодбора.ТекущийРодитель = Товар;
	Иначе
		ФормаПодбора.ОповеститьОВыборе(Товар);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ

Функция ПолучитьРабочуюФорму(ОсновноеМеню=Неопределено) Экспорт
	
	Если ОсновноеМеню=Неопределено Тогда
		ОсновноеМеню = ?(ЗначениеЗаполнено(глПользователь.ОсновноеМеню), глПользователь.ОсновноеМеню, глПараметрыРМ.ЗаказМенюОсновное);
	КонецЕсли; 
	
	ТекущаяНастройка = ОсновноеМеню;
	Если НЕ ПолучитьПараметрыНастройки() Тогда
		Возврат Неопределено;
	КонецЕсли;
	СвободноеОкно = ПараметрыНастройки.СвободноеОкно;
	Если ТекущаяНастройка.МестоРеализации = Справочники.МестаРеализации.Ресторан Тогда
		
		ИмяФормы = ПараметрыНастройки.СпособОтображения + ?(СвободноеОкно, "СвободноеОкноРесторан", глПараметрыРМ.ИнтерфейсТип);
		
	Иначе
		
		ИмяФормы = ПараметрыНастройки.СпособОтображения + ?(СвободноеОкно, "СвободноеОкно", глПараметрыРМ.ИнтерфейсТип);
		
	КонецЕсли;
	
	Если глПараметрыРМ.Тип = Перечисления.ТипыРМ.СтанцияПовараМОКП Тогда
		ИмяФормы = "КнопкиСвободноеОкноРесторанПовар"; 
	КонецЕсли;
	
	ФормаПодбора = ПолучитьФорму(ИмяФормы);
	
	ФормаПодбора.Заголовок = ОсновноеМеню.Наименование;
	
	Возврат ФормаПодбора;
КонецФункции
 
Функция ПолучитьПараметрыНастройки() Экспорт
	
	Если Не глРабочееМесто = Неопределено Тогда
		БылиПараметрыНастройки = ПараметрыНастройки;
		Если глТорговоеОборудование.Свойство("НастройкаМеню"+ТекущаяНастройка.Код, ПараметрыНастройки) Тогда
			ДатаПред = ДатаПред;
			ДатаТек = Константы.ДатаОбновленияПризнакаНаличияВПродаже.Получить();
			глПараметрыРМ.Свойство("ДатаОбновленияПризнакаНаличияВПродаже", ДатаПред);
			
			Если ДатаПред = ДатаТек Тогда
				Возврат Истина;
			Иначе
				глПараметрыРМ.Вставить("ДатаОбновленияПризнакаНаличияВПродаже", ДатаТек);
			КонецЕсли;              
		КонецЕсли; 
	КонецЕсли;
	Попытка
		ПараметрыНастройки = ТекущаяНастройка.ПолучитьОбъект().ПолучитьСтруктуруПараметров();
		ПараметрыНастройки.Свойство("ПроверкаЧтоЭтоСтруктура");
	Исключение
		Текст1="Нет доступа!";
		Текст2="Указана некорректная настройка меню! Обратитесь к администратору...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		
		ПараметрыНастройки = БылиПараметрыНастройки;
		Возврат Ложь;
	КонецПопытки;
	
	// на случай добавления новых параметров настройки в текущей версии,
	// проверим наличие в сохраненной настройке всех необходимых реквизитов
	ФормаНастройки = ПолучитьФорму("Настройка");
	Для каждого Элемент Из ФормаНастройки.ЭлементыФормы Цикл
		
		Если НЕ ЗначениеЗаполнено(Элемент.Данные) Тогда
			Продолжить;
		ИначеЕсли Элемент.Данные = "ТекущаяНастройка" Тогда
			Продолжить;
		КонецЕсли; 
		
		// для элементов формы, значения которых выбираются из списка,
		// подставим значения по умолчанию равными первому значению из списка
		Если Элемент.Значение=Неопределено И Элемент.СписокВыбора.Количество()>0 Тогда
			Элемент.Значение = Элемент.СписокВыбора[0].Значение;
		КонецЕсли; 
		
		Если НЕ ПараметрыНастройки.Свойство(Элемент.Данные) Тогда
			ПараметрыНастройки.Вставить(Элемент.Данные, Элемент.Значение);
		КонецЕсли; 
		
	КонецЦикла; 
	
	Если ПараметрыНастройки.ШиринаОкна=0 Тогда
		Текст1="Нет доступа!";
		Текст2="Указана некорректная настройка меню! Обратитесь к администратору...";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		
		ПараметрыНастройки = БылиПараметрыНастройки;
		Возврат Ложь;
	КонецЕсли; 
	
	Если ПараметрыНастройки.РучнаяНастройкаПривязок И ТипЗнч(ПараметрыНастройки.ДеревоКаталога) = Тип("ДеревоЗначений") Тогда
		ДеревоКаталога = ПараметрыНастройки.ДеревоКаталога;
		// для укорения работы, сразу заполняем все наименования кнопок со ссылками
		ЗаполнитьНаименованияРучныхПривязок(ДеревоКаталога.Строки);
	Иначе
		ДеревоКаталога = СоздатьДеревоКаталога();
	КонецЕсли; 
	
	ПараметрыНастройки.Вставить("ДеревоКаталога", ДеревоКаталога);
	
	глТорговоеОборудование.Вставить("НастройкаМеню"+ТекущаяНастройка.Код, ПараметрыНастройки);
	
	Возврат Истина;
КонецФункции

Функция ПолучитьПараметрыОкна() Экспорт

	ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота, ОбрезкаОкнаШирина", Ложь, ОкноЛево, ОкноВерх, ОкноШирина, ОкноВысота, ОбрезкаОкнаШирина);
	
	
	ПараметрыОкна.Ширина = ПараметрыНастройки.ШиринаОкна;
	
	
	Если ОкноВысота = Неопределено Тогда
		ПараметрыОкна.Высота = ПараметрыНастройки.ВысотаОкна;
	КонецЕсли;

	
	
	Если ПараметрыНастройки.ПоложениеОкна = "Центр" Тогда
		ПараметрыОкна.Центр = Истина;
		
	ИначеЕсли ПараметрыНастройки.ПоложениеОкна = "Низ" Тогда
		Если ФормаПодбора <> Неопределено И (ФормаПодбора.ВладелецФормы <> Неопределено) Тогда
			ШиринаВладельца = ФормаПодбора.ВладелецФормы.Ширина;
			ВысотаВладельца = ФормаПодбора.ВладелецФормы.Высота;
		Иначе
			ШиринаВладельца = глПараметрыРМ.ШиринаОкна1С;
			ВысотаВладельца = глПараметрыРМ.ВысотаОкна1С;
		КонецЕсли;
		Если ПараметрыОкна.Лево = Неопределено Тогда
		
		ПараметрыОкна.Лево	 = ШиринаВладельца - ПараметрыОкна.Ширина + 3;
	КонецЕсли;
	Если ПараметрыОкна.Верх = Неопределено Тогда
		ПараметрыОкна.Верх	 = ВысотаВладельца - ПараметрыОкна.Высота + 4;
	КонецЕсли;
	
		ПараметрыОкна.Вставить("Обрезать", ОбрезатьОкно);
	ИначеЕсли ПараметрыНастройки.ПоложениеОкна = "Право" Тогда
		Попытка
			ПараметрыОкна.Лево	 = глПараметрыРМ.ШиринаОкна1С - ПараметрыОкна.Ширина - 2;
			ПараметрыОкна.Верх	 = ?(ПараметрыОкна.Высота = глПараметрыРМ.ВысотаОкна1С, 0, ВерхняяГраницаПоложения);
		Исключение
		КонецПопытки;
	Иначе
		ПараметрыОкна.Лево	 = 0;
		ПараметрыОкна.Верх	 = ВерхняяГраницаПоложения;
		
	КонецЕсли; 
	
	Возврат ПараметрыОкна;
КонецФункции
 
Процедура ПоказатьДозаказ(РежимПодсказки = Ложь) Экспорт
	
	Если РежимПодсказки Тогда
		СтрЗаголовок = "Режим подсказки";
	Иначе
		КолвоПозицийДозаказа = Дозаказ.Количество();
		Если КолвоПозицийДозаказа = 0 Тогда
			СтрЗаголовок = ?(ВызовИзСтопЛиста, "Нет позиций", "Нет дозаказа");
		Иначе
			СтрЗаголовок = ?(ВызовИзСтопЛиста, "Позиция", "Дозаказ")+" "+КолвоПозицийДозаказа+": "+Дозаказ[КолвоПозицийДозаказа-1].Товар.Наименование;
		КонецЕсли;
	Конецесли;
	
	//ФормаПодбора.ЭлементыФормы.тДозаказ.Заголовок = СтрЗаголовок;
	
КонецПроцедуры

Процедура ОповещениеДозаказа(ИмяСобытия, Параметр, Источник) Экспорт
	
	Если НЕ ФормаПодбора.Открыта() Тогда
		Возврат;
	КонецЕсли; 
	
	Если ИмяСобытия="Дозаказ" Тогда
		Дозаказ.Добавить().Товар = Параметр;
		
	ИначеЕсли ИмяСобытия="УдалениеДозаказа" Тогда
		Дозаказ.Удалить( Дозаказ.Количество()-1 );
		
	КонецЕсли; 
	
	ПоказатьДозаказ();
	
КонецПроцедуры

Функция ВыборМеню(ЗакрыватьФорму = Истина) Экспорт
	
	Если РежимНастройки Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Если НЕ ВызовИзСтопЛиста И ФормаПодбора.ВладелецФормы.Заказ <> Неопределено 
		И НЕ ИнтерфейсРМ.ПроверкаПраваДоступа(ПланыВидовХарактеристик.ПраваДоступа.ВыборМеню, , , ФормаПодбора.ВладелецФормы.Заказ.Автор) Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	СписокНастроек = Новый СписокЗначений;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТорговоеОборудование.Ссылка КАК Ссылка,
	|	ТорговоеОборудование.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ТорговоеОборудование КАК ТорговоеОборудование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоступностьКаталоговТоваров КАК ДоступностьКаталоговТоваров
	|		ПО ТорговоеОборудование.КаталогТоваров = ДоступностьКаталоговТоваров.КаталогТоваров
	|ГДЕ
	|	ТорговоеОборудование.КодВида = &СписокВидов
	|	И НЕ ТорговоеОборудование.ПометкаУдаления
	|	И ТорговоеОборудование.Ссылка <> &ТекущаяНастройка
	|	И (ДоступностьКаталоговТоваров.Станция = &Станция
	|			ИЛИ ДоступностьКаталоговТоваров.Станция = ЗНАЧЕНИЕ(Справочник.Станции.ПустаяСсылка))
	|	И ТорговоеОборудование.МестоРеализации = &МестоРеализации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТорговоеОборудование.Наименование");
	
	
	//:глРабочееМесто=Справочники.РабочиеМеста.СоздатьЭлемент();
	Запрос.УстановитьПараметр("Станция", глРабочееМесто.Станция);
	Запрос.УстановитьПараметр("СписокВидов", ТекущаяНастройка.КодВида );
	Запрос.УстановитьПараметр("ТекущаяНастройка", ТекущаяНастройка );
	Запрос.УстановитьПараметр("МестоРеализации", глРабочееМесто.МестоРеализации);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокНастроек.Добавить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла; 
	
	ВыбНастройка = ИнтерфейсРМ.ВыборИзСписка(СписокНастроек);
	
	Если ВыбНастройка=Неопределено Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Если ЗакрыватьФорму Тогда
		ФормаПодбора.Закрыть();
		ФормаПодбора.ВладелецФормы.ПодборТоваров(,ВыбНастройка);
	Иначе
		ТекущаяНастройка = ВыбНастройка;
		ФормаПодбора.ЭлементыФормы.Очистить();
		
		ДеревоКаталога.Строки.Очистить();
		ФормаПодбора.Заголовок = ТекущаяНастройка.Наименование; 
		ПолучитьПараметрыНастройки();
		КнопкиДействияПередОткрытием(ФормаПодбора);
		ПараметрыОкна = ПолучитьПараметрыОкна();
		ФормаПодбора.Открыть();
		
	КонецЕсли;
	
	
КонецФункции

Процедура ВставитьИзБуфера(ИмяКнопки, НомерКнопки, Каталог, СтрокаКаталога) Экспорт
	ир = ирКэш.Получить();
	//:ир = Обработки.ирПлатформа.Создать();
	Текст = ирОбщий.БуферОбмена_ПолучитьТекстЛкс();
	ирОбщий.ОткрытьФормуПроизвольногоЗначенияЛкс(Текст);
	Массив=СтрРазделить(Текст, Символы.ПС, Ложь);
	//:ДеревоКаталога = Новый ДеревоЗначений;
	Если СтрокаКаталога.Родитель = Неопределено Тогда
		Инд = 0;		
	Иначе
		Инд = СтрокаКаталога.Родитель.Строки.Индекс(СтрокаКаталога);
	КонецЕсли;
	
	Для Каждого Т Из Массив Цикл
		Попытка
			СтрокаДерева = СтрокаКаталога.Родитель.Строки[Инд];
		Исключение
			Если СтрокаКаталога.Родитель = Неопределено Тогда
				Если ДеревоКаталога.Строки.Количество()=1 Тогда
					СтрокаДерева = ДеревоКаталога.Строки[0];
					СтрокаКаталога = СтрокаДерева;
				Иначе
					СтрокаДерева = ДобавитьСтрокуКаталога(ДеревоКаталога.Строки);
				КонецЕсли;
			Иначе
				СтрокаДерева = ДобавитьСтрокуКаталога(СтрокаКаталога.Родитель.Строки);
			КонецЕсли;
			
			СтрокаДерева.ТипКнопки = 3;
		КонецПопытки;
		КодСУП = СокрЛП(Т);
		Товар = ВнешниеИсточникиДанных.СУПтт.Таблицы.dbo_Спр_Товары.НайтиПоПолю("КодГрПгрПрд", КодСУП);
		Если Не Товар.Пустая() Тогда
			СтрокаДерева.КодСУП = КодСУП;
			СтрокаДерева.Наименование = СокрЛП(Товар.descr);
			ПоказатьКнопку(ИмяКнопки, НомерКнопки, Каталог);
			НомерКнопки = НомерКнопки + 1;
			Инд = Инд + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Обработка внешних событий
//
Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные) Экспорт
	
	Если Источник = "NativeDraw" Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(Источник,"Штрих АС POS") <> 0 Тогда //"Штрих АС POS" Тогда
		ОбновитьВес();
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбновитьВес() Экспорт
	Если глПараметрыРМ.ВесыЕсть Тогда
		Весы = Обработка_Весы.DRV;
		//Весы = глТорговоеОборудование.Scale1C;
		Весы.УдалитьСообщение();
		Весы.ПосылкаДанных = Истина;
		Вес = Весы.Вес;
		ВесСтабилен = Обработка_Весы.ВесСтабилен();
		//ВесСтабилен = НЕ Весы.ВесНеСтабилен ИЛИ Вес <= 0.1;
		
		ФормаПодбора.ОбновитьЗаголовок();
		//ИнтерфейсРМ.ВыводНаИнфоДисплей("ПоказатьВес",,,,,Вес);
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

РежимНастройки = Ложь;
РежимПодсказки = Ложь;
РежимОбъединения = Ложь;
ИдетФормированиеЭлементовФормы = Истина;

Вес = 0;
ВесСтабилен = Ложь;
ОбрезатьОкно = Ложь;
#КонецЕсли
