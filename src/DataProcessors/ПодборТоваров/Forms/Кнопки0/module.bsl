
Перем ПараметрыОкна Экспорт;	// Структура, определяет положение и размеры окна.

Перем ПанельСпецификаСвертка;
Перем ПанельКурсСвертка;
Перем ПанельКоличествоСвертка;

////////////////////////////////////////////////////////////////////////////////
// ПРОЧЕЕ

Процедура ПоказатьКурс()
	
	Если глВерсия>1 И Константы.РаботаСПодтверждениямиПозицийЗаказа.Получить() И НЕ ВызовИзСтопЛиста И глПараметрыРМ.ЗаказИспользоватьКурсы И НЕ ВладелецФормы.Доставка Тогда
		ЭлементыФормы.КнопкаКурс.Заголовок = "КУРС" + Символы.ПС + ВладелецФормы.ТекущаяПодача.Номер;
	Иначе
		ЭлементыФормы.ПанельКурс.Свертка = РежимСверткиЭлементаУправления.Лево;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПанельСтрелки()
	
	ЭлементыФормы.ПанельСтрелки.Свертка = РежимСверткиЭлементаУправления.Право;
	ЭлементыФормы.ПанельСтрелки.Видимость = Истина;
	
КонецПроцедуры

// Вызывается из модуля обработки после вывода кнопок
//
Процедура УстановитьВидимостьСтрелок(НужнаСтрелкаВверх, НужнаСтрелкаВниз) Экспорт
	
	Если ЭлементыФормы.Найти("ПанельСтрелки") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если НужнаСтрелкаВверх ИЛИ НужнаСтрелкаВниз Тогда
		// панель со стрелками нужна
		ЭлементыФормы.ПанельСтрелки.Свертка = РежимСверткиЭлементаУправления.Нет;
		// показываем только доступные направления листания
		ЭлементыФормы.КнопкаСтрелкаВверх.Видимость = НужнаСтрелкаВверх;
		ЭлементыФормы.КнопкаСтрелкаВниз .Видимость = НужнаСтрелкаВниз;
		
	Иначе
		// убираем панель со стрелками
		ЭлементыФормы.ПанельСтрелки.Свертка = РежимСверткиЭлементаУправления.Право;
	КонецЕсли; 
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	КнопкиДействияПередОткрытием(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если РежимНастройки Тогда
		ЭлементыФормы.ПанельВыборМеню	.Видимость = Ложь;
		ЭлементыФормы.ПанельСпецифика	.Видимость = Ложь;
		ЭлементыФормы.ПанельКурс		.Видимость = Ложь;
		ЭлементыФормы.ПанельКоличество	.Видимость = Ложь;
		ЭлементыФормы.КнопкаУдалить		.Видимость = Ложь;
		ЭлементыФормы.КнопкаПодсказка	.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ПараметрыОкна = ПолучитьПараметрыОкна();
	
	Если ВызовИзСтопЛиста ИЛИ НЕ (ВладелецФормы.Заказ=Неопределено ИЛИ ИнтерфейсРМ.ПроверкаПраваДоступа(ПланыВидовХарактеристик.ПраваДоступа.ВыборМеню, , , ВладелецФормы.Заказ.Автор)) Тогда
		ЭлементыФормы.ПанельВыборМеню.Свертка = РежимСверткиЭлементаУправления.Лево;
	КонецЕсли;
	
	Если глВерсия=1 ИЛИ ВызовИзСтопЛиста Тогда
		ЭлементыФормы.ПанельСпецифика.Свертка = РежимСверткиЭлементаУправления.Лево;
	КонецЕсли;
	
	//Если НЕ глПараметрыРМ.ЗаказМенюКнопкаКоличество Тогда
	//	ЭлементыФормы.ПанельКоличество.Свертка = РежимСверткиЭлементаУправления.Лево;
	//КонецЕсли;
	
	ПоказатьКурс();
	
	ПоказатьДозаказ();
	
	// без этого изврата не срабатывает привязка элемента тДозаказ, растягивающая его вправо 
	// (если ПанельСтрелки свернута в момент открытия формы)
	Если ЭлементыФормы.ПанельСтрелки.Свертка = РежимСверткиЭлементаУправления.Право Тогда
		ЭлементыФормы.ПанельСтрелки.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ПанельСтрелки.Видимость = Ложь;
		ПодключитьОбработчикОжидания("УстановитьПанельСтрелки", 0.1, Истина);
	КонецЕсли; 
	
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если РежимНастройки Тогда
		Если ПараметрыНастройки.РучнаяНастройкаПривязок Тогда
			ВладелецФормы.НастройкаДеревоКаталога = ДеревоКаталога;
		КонецЕсли; 
		
	Иначе
		ВладелецФормы.ПриЗакрытииМеню();	// это обязательно сначала
		ИнтерфейсРМ.ПриЗакрытииОкна();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОповещениеДозаказа(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если РежимПодсказки Тогда
		// иначе потом, при следующем открытии меню, не срабатывают привязки
		Отказ = Истина;
		КнопкаПодсказкаНажатие(ЭлементыФормы.КнопкаПодсказка);
		ПодключитьОбработчикОжидания("Выход",0.1,Истина);
	КонецЕсли; 
	
КонецПроцедуры

Процедура Выход()

	Закрыть();

КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Назначается динамически
//
Процедура КнопкаТовараНажатие(Элемент)
	
	ОбработкаНажатияКнопки(Элемент);
	
КонецПроцедуры
 
Процедура КнопкаУдалитьНажатие(Элемент)
	
	Если Дозаказ.Количество()>0 Тогда
		ВладелецФормы.УдалитьСтроку(,Истина);
	КонецЕсли; 
	
КонецПроцедуры

// Назначается динамически
//
Процедура КнопкаСтопЛистНажатие(Элемент)
	
	СтопЛист = ИнтерфейсРМ.ПолучитьОбъектОбработки("СтопЛист").ПолучитьФорму("Форма" + глПараметрыРМ.ИнтерфейсТип);
	СтопЛист.ВызовИзМеню = Истина;
	СтопЛист.Открыть();
	
КонецПроцедуры

Процедура КнопкаКурсНажатие(Элемент)
	
	Если Дозаказ.Количество()>0 Тогда
		ВладелецФормы.ИзменитьКурс();
		ПоказатьКурс();
	КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаКоличествоНажатие(Элемент)
	
	Если Дозаказ.Количество()>0 Тогда
		ВладелецФормы.ИзменитьКоличество();
	КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаСпецификаНажатие(Элемент)
	
	Если Дозаказ.Количество()>0 Тогда
		ВладелецФормы.ВыборСпецифики();
	КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаОбщСпецификаНажатие(Элемент)
	Если Дозаказ.Количество()>0 Тогда
		ВладелецФормы.ВыборСпецифики(Истина);
	КонецЕсли; 
КонецПроцедуры

Процедура КнопкаСтрелкаВверхНажатие(Элемент)
	
	Пролистать(-1);
	
КонецПроцедуры

Процедура КнопкаСтрелкаВнизНажатие(Элемент)
	
	Пролистать(1);
	
КонецПроцедуры

Процедура КнопкаВыборМенюНажатие(Элемент)
	
	ВыборМеню();
	
КонецПроцедуры

Процедура КнопкаПодсказкаНажатие(Элемент)
	
	РежимПодсказки = НЕ РежимПодсказки;
	
	Если НЕ РежимНастройки Тогда
		ПоказатьДозаказ(РежимПодсказки);
	КонецЕсли; 
	
	Если НЕ (глВерсия=1 ИЛИ ВызовИзСтопЛиста) Тогда
		Если РежимПодсказки Тогда
			ЭлементыФормы.КнопкаУдалить.Заголовок = "СТОП" +Символы.ПС+ "лист";
			ЭлементыФормы.КнопкаУдалить.УстановитьДействие("Нажатие", Новый Действие("КнопкаСтопЛистНажатие"));
			// уберем лишние кнопки
			ПанельСпецификаСвертка	= ЭлементыФормы.ПанельСпецифика.Свертка;
			ПанельКурсСвертка		= ЭлементыФормы.ПанельКурс.Свертка;
			ПанельКоличествоСвертка	= ЭлементыФормы.ПанельКоличество.Свертка;
			ЭлементыФормы.ПанельСпецифика.Свертка = РежимСверткиЭлементаУправления.Лево;
			ЭлементыФормы.ПанельКурс	 .Свертка = РежимСверткиЭлементаУправления.Лево;
			ЭлементыФормы.ПанельКоличество.Свертка = РежимСверткиЭлементаУправления.Лево;
		Иначе
			ЭлементыФормы.КнопкаУдалить.Заголовок = "УДАЛ.";
			ЭлементыФормы.КнопкаУдалить.УстановитьДействие("Нажатие", Новый Действие("КнопкаУдалитьНажатие"));
			// восстановим кнопки
			ЭлементыФормы.ПанельСпецифика.Свертка = ПанельСпецификаСвертка;
			ЭлементыФормы.ПанельКурс	 .Свертка = ПанельКурсСвертка;
			ЭлементыФормы.ПанельКоличество.Свертка = ПанельКоличествоСвертка;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ
