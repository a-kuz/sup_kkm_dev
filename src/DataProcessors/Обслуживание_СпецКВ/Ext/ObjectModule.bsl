
#Если Клиент Тогда

Перем ПараметрыТО Экспорт;   // Параметры торгового оборудования.
Перем Результат Экспорт;     // Результат выполнения действия.

// Производит инициализацию торгового оборудования.
//
Процедура Инициализация() Экспорт
	
КонецПроцедуры

// Выполняет действие с ТО.
//
// Параметры:
//  Действие - имя действия,
//  ПараметрыДействия - произвольный набор параметров, туда же присваивается возвращаемое значение функции.
//
Процедура ВыполнитьДействие(Действие,ПараметрыДействия) Экспорт
	
	Если Действие = "Подключить" Тогда
		Подключить();
		
	ИначеЕсли Действие = "Отключить" Тогда
		Отключить();
		
	Иначе
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Неизвестная команда!";
		Результат.Подробно	= "Команда """+Действие+""" не определена для "+ТО.Наименование;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет подключение ТО.
//
// Возвращаемое значение:
//  Истина - есть ошибка, ложь - нет.
//
Процедура Подключить() Экспорт
	
	Если РаботаСокнами.StartKBHook() > 1 Тогда // подгружает kbhook.dll
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Ошибка загрузки драйвера!";
		Результат.Подробно	= "Программе не удалось загрузить драйвер спец.клавиатуры";
		Возврат;
	КонецЕсли;
	
	// перехват программируемой клавиатуры
	Массив = Новый Массив;
	Если ПараметрыТО.УпрКомбинацияКлавиш = "Ctrl+Shift+Ins" Тогда
		// добавлять в порядке возрастания кодов
		Массив.Добавить( 45 );  //ins
		Массив.Добавить( 160 ); //shift
		Массив.Добавить( 162 ); //ctrl
	КонецЕсли;
	
	Массив.Добавить( ПараметрыТО.ДлинаКода );	// сколько байт после комбинации
	Массив.Добавить( 1 );						// блокировать комбинацию 0 - нет / 1 - да
	Массив.Добавить( 1 );						// генерировать событие  0 - нет / 1 - да
	
	РаботаСокнами.SetKBHookKeys( Массив );
	
	// для быстрого доступа в процессе работы запоминаем раскладку
	глТорговоеОборудование.Вставить("РаскладкаСпецКВ", ПараметрыТО.Раскладка);
	
	// обработка выхода по Esc
	Массив = Новый Массив;
	Массив.Добавить( 27 );  //Esc
	Массив.Добавить( 0 );   //сколько байт после комбинации
	Массив.Добавить( 1 );   //блокировать комбинацию 0 - нет / 1 - да
	Массив.Добавить( 1 );   //генерировать событие  0 - нет / 1 - да
	РаботаСокнами.SetKBHookKeys( Массив );
	
	глСпецКВEscОбработан = Ложь;
	
КонецПроцедуры

// Выполняет отключение ТО.
//
// Возвращаемое значение:
//  Истина - есть ошибка, ложь - нет.
//
Процедура Отключить() Экспорт
	
	Попытка 
		РаботаСокнами.StopKBHook();
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Результат = Новый Структура("Ошибка,Описание,Подробно",Ложь,"","");

#КонецЕсли
