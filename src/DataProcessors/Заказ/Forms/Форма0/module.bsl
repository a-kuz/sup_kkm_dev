
Перем НомерЗаказа, ПосадочноеМесто;	// для оптимизации обновления отображения

// < КС_ВДВ ------------------------------------------------------------ 
Перем ПравоНаИзменениеКурса;
// КС_ВДВ > ------------------------------------------------------------ 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЖИДАНИЯ

// чтобы часики тикали
//
Процедура ОбновитьДатуВремя()
	
	ЭлементыФормы.тТекущаяДатаВремя.Заголовок = Формат(ТекущаяДатаНаСервере(),"ДЛФ=ДВ");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередОткрытиемФормы(ЭтаФорма, Отказ);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередЗакрытиемФормы(ЭтаФорма, Отказ);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// периодически обновляемые надписи
	ОбновитьДатуВремя();
	ПодключитьОбработчикОжидания("ОбновитьДатуВремя", 1);
	
	// доступность кнопок
	Если глВерсия>1 И ИспользоватьЗаказТоварыДопИнф Тогда
		ЭлементыФормы.КнопкаКурс			.Доступность = ИспользоватьЗаказТоварыДопИнф И (глПараметрыРМ.ЗаказИспользоватьКурсы ИЛИ Константы.ПодтверждениеВыдачи.Получить());
	КонецЕсли; 
	
	Если РежимПредЗаказ Тогда
		ЭлементыФормы.КнопкаКурс			.Доступность = Ложь;
		ЭлементыФормы.КнопкаОплата			.Доступность = Ложь;
		ЭлементыФормы.КнопкаПречек			.Доступность = Ложь;
		ЭлементыФормы.КнопкаОтменаПречека	.Доступность = Ложь;
		ЭлементыФормы.КнопкаПечатьМарок		.Доступность = Ложь;
		ЭлементыФормы.КнопкаРазделитьЗаказ	.Доступность = Ложь;
		ЭлементыФормы.КнопкаСкидка			.Доступность = Ложь;
		ЭлементыФормы.КнопкаУдалитьСкидку	.Доступность = Ложь;
		ЭлементыФормы.КнопкаУпаковка		.Доступность = Ложь;
	КонецЕсли;
	
	ФлагПечатьQRкод = Ложь;
	//ЭлементыФормы.КнопкаНовыйЗаказ	.Видимость = НЕ ФлагПечатьQRкод;
	//ЭлементыФормы.	д		.Видимость = ФлагПечатьQRкод;
	
	// < КС_ВДВ ------------------------------------------------------------ 
	                   
	// *********************************************************************
	// Кнопка Печать марок
	
	ЭлементыФормы.КнопкаПечатьМарок.Заголовок = "СОХРАНИТЬ";
	ЭлементыФормы.КнопкаПечатьМарок.Картинка = Новый Картинка;
	
	// *********************************************************************
	// Кнопка фильтра по станции 
	
	Если РежимМонитор Тогда
		// отключаем возможность изменения фильтра строк заказа по Станции
		ЭлементыФормы.КнопкаСтанция.УстановитьДействие("Нажатие", Неопределено);
	КонецЕсли; 
	
	// *********************************************************************
	// Отключим обработчики нажатия кнопок, несущих информационную нагрузку
	// Если просто отключить их доступность, то они будут серого цвета
	
	// листание заказов - такого права нет.
	ЭлементыФормы.КнопкаПредыдущийЗаказ.УстановитьДействие("Нажатие", Неопределено);
	ЭлементыФормы.КнопкаСледующийЗаказ.УстановитьДействие("Нажатие", Неопределено);
	
	// выбор клиента - это важно. Поэтому всегда отключено несмотря на права доступа.
	//ЭлементыФормы.КнопкаКлиент.УстановитьДействие("Нажатие", Неопределено);
	
	// выбор количества гостей 
	ДоступностьКнопки = ВыполнитьПроверку("Право.ИзменениеКолваГостей", Ложь);
	Если НЕ ДоступностьКнопки Тогда
		ЭлементыФормы.КнопкаКолвоГостей.УстановитьДействие("Нажатие", Неопределено);
	КонецЕсли; 
	
	// создание нового заказа (по наличию права доступа не сделать, 
	// т.к. Хостес может создавать заказы, но из главной формы)
	//ЭлементыФормы.КнопкаНовыйЗаказ.УстановитьДействие("Нажатие", Неопределено);
	
	// *********************************************************************
	// Отключим кнопки действий в зависимости от прав доступа
	
	ОбновлениеОтображения();
	ПравоНаИзменениеКурса = ИспользоватьЗаказТоварыДопИнф И (глПараметрыРМ.ЗаказИспользоватьКурсы ИЛИ Константы.ПодтверждениеВыдачи.Получить()) И ВыполнитьПроверку("Право.ВыдачаТоваровИзЗаказа", Ложь);
	
	Если НЕ РежимПредЗаказ Тогда // при предзаказе эти кнопки отключаются выше
		
		// Выбор стола
		ДоступностьКнопки = ВыполнитьПроверку("Право.ИзменениеМеста", Ложь);
		//ЭлементыФормы.КнопкаМесто.Доступность = ДоступностьКнопки;
		//ЭлементыФормы.КнопкаМесто.Видимость   = ДоступностьКнопки;
		
		// Оплата
		ДоступностьКнопки = (глПараметрыРМ.ККМЕсть);
		ЭлементыФормы.КнопкаОплата.Доступность = ДоступностьКнопки;
		ЭлементыФормы.КнопкаОплата.Видимость   = ДоступностьКнопки;
		
		// Пречек
		ДоступностьКнопки = ВыполнитьПроверку("Право.ПечатьПресчета", Ложь);
		ЭлементыФормы.КнопкаПречек.Доступность = ДоступностьКнопки;
		//ЭлементыФормы.КнопкаПречек.Видимость   = ДоступностьКнопки;
		
		// УДАЛ. пречек
		ДоступностьКнопки = ВыполнитьПроверку("Право.ОтменаПресчета", Ложь);
		ЭлементыФормы.КнопкаОтменаПречека.Доступность = ДоступностьКнопки;
		//ЭлементыФормы.КнопкаОтменаПречека.Видимость   = ДоступностьКнопки;
		
		// Разделить заказ
		Если глПараметрыРМ.Тип <> Перечисления.ТипыРМ.Производство Тогда
		
		ДоступностьКнопки = ВыполнитьПроверку("Право.РазделениеЗаказа", Ложь);
		ЭлементыФормы.КнопкаРазделитьЗаказ.Доступность = ДоступностьКнопки;
		ЭлементыФормы.КнопкаРазделитьЗаказ.Видимость   = ДоступностьКнопки;
		КонецЕсли;
		// Скидка
		ДоступностьКнопки = ВыполнитьПроверку("Право.ВводРучнойСкидки", Ложь);
		ЭлементыФормы.КнопкаСкидка.Доступность = ДоступностьКнопки;
		//ЭлементыФормы.КнопкаСкидка.Видимость   = ДоступностьКнопки;
		
		// УДАЛ. скидку
		ДоступностьКнопки = ВыполнитьПроверку("Право.ОтменаРучнойСкидки", Ложь);
		ЭлементыФормы.КнопкаУдалитьСкидку.Доступность = ДоступностьКнопки;
		//ЭлементыФормы.КнопкаУдалитьСкидку.Видимость   = ДоступностьКнопки;
		
		// Упаковка - такого права не предусмотрено (при сохранении заказа автоматически происходит упаковка)
		//ЭлементыФормы.КнопкаУпаковка.Доступность = Ложь;
		//ЭлементыФормы.КнопкаУпаковка.Видимость = Ложь;
		
		// Используем кнопку упакавка для функции возврата пейджера 
		ЭлементыФормы.КнопкаУпаковка.Заголовок = "ПЕЙДЖЕР";
		ЭлементыФормы.КнопкаУпаковка.Картинка = Новый Картинка;
		ЭлементыФормы.КнопкаУпаковка.УстановитьДействие("Нажатие", Новый Действие("КнопкаВозвратПейджераНажатие"));
		
		ДоступностьКнопки = ВыполнитьПроверку("Право.СдачаПейджеровИзЗаказа", Ложь);
		ЭлементыФормы.КнопкаУпаковка.Доступность = ДоступностьКнопки;
		ЭлементыФормы.КнопкаУпаковка.Видимость   = ДоступностьКнопки;
		
		// КУРС / ВЫДАТЬ
		// Для кнопки будем использовать только режим выдать.
		// "Выдать" товар может пользователь, у которого есть право на выдачу из заказа
		ЭлементыФормы.КнопкаКурс.Заголовок = "ВЫДАЧА";
		ЭлементыФормы.КнопкаКурс.Доступность = ПравоНаИзменениеКурса;
		ЭлементыФормы.КнопкаКурс.Видимость   = ПравоНаИзменениеКурса;
		
	КонецЕсли; 
	// КС_ВДВ > ------------------------------------------------------------ 
	
	//----------------------------------------------------------
	ТабПолеТС = ЭлементыФормы.ТаблицаСкидок;
	ТабПолеТС.СоздатьКолонки();
	
	ТабПолеТС.Колонки.Текст.ШрифтТекста = ШрифтыСтиля.Шрифт8;
	ТабПолеТС.Колонки.Текст.Ширина		= 15;
	ТабПолеТС.Колонки.Сумма.ШрифтТекста = ШрифтыСтиля.Шрифт8ж;
	ТабПолеТС.Колонки.Сумма.Ширина		= 8;
	
	Для каждого КолонкаСкидок Из ТабПолеТС.Колонки Цикл
		Если КолонкаСкидок.Имя<>"Текст" И КолонкаСкидок.Имя<>"Сумма" Тогда
			КолонкаСкидок.Видимость = Ложь;
		КонецЕсли; 
	КонецЦикла; 
	
	//----------------------------------------------------------
	ТабПолеТК = ЭлементыФормы.ТаблицаКатегорий;
	ТабПолеТК.СоздатьКолонки();
	
	ТабПолеТК.Колонки.Категория	.ШрифтТекста = ШрифтыСтиля.Шрифт8;
	ТабПолеТК.Колонки.Категория	.Ширина		 = 15;
	ТабПолеТК.Колонки.Сумма		.ШрифтТекста = ШрифтыСтиля.Шрифт8ж;
	ТабПолеТК.Колонки.Сумма		.Ширина		 = 8;
	
	ПолучитьРекомендации(Ложь);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	АкцииСрезПоследних.Номенклатура,
	|	АкцииСрезПоследних.ВидАкции
	|ИЗ
	|	РегистрСведений.Акции.СрезПоследних(&НаДату) КАК АкцииСрезПоследних
	|");
	Запрос.УстановитьПараметр("НаДату",Заказ.Дата);
	ТаблицаАкций = Запрос.Выполнить().Выгрузить();

	// < КС_ВДВ ------------------------------------------------------------ 
	//ИнтерфейсРМ.ВыводНаИнфоДисплей("ПоказатьЗаказ", Заказ.Ссылка, ТаблицаЗаказа, СписокРекомендаций);
	ВыводЗаказаНаИнфоДисплей(Истина);
	// КС_ВДВ > ------------------------------------------------------------ 
	
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ВыводНаИнфоДисплей("УбратьЗаказ");
	
	// < КС_ВДВ ------------------------------------------------------------
	Если УстановитьРежимВыдачиЗаказа Тогда
		// Чтобы открытся монитор гостя в режиме "Марки", нужно установить 
		// режим выдачи в мониторе марок, после того, как заказ закончит
		// все действия с монитором гостя.
		
		ПараметрСообщения = Новый Структура("Заказ", Заказ.Ссылка);
		
		Оповестить("УстановитьРежимВыдачиЗаказа", ПараметрСообщения);	
	Иначе
		Оповестить("ОбновитьСтатусыПозицийЗаказа", ПараметрСообщения);
	КонецЕсли;
	// КС_ВДВ > ------------------------------------------------------------ 
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	глОтсечкаПростоя();
	ТекущийЭлемент = ЭлементыФормы.ТаблицаЗаказа;
	ЕстьРекомендации	= СписокРекомендаций <> Неопределено;
	
	Если РежимПредЗаказ Тогда
		ЭлементыФормы.тНомерЗаказа	.Заголовок = ВладелецФормы.Заголовок;
		//ЭлементыФормы.КнопкаМесто	.Заголовок = НаимПосадочногоМеста(ВладелецФормы.ПосадочноеМесто);
		ЭлементыФормы.КнопкаАвтор	.Заголовок = глПользователь.Наименование;
		ЭлементыФормы.тВремяОткрытия.Заголовок = " "+Формат(ВладелецФормы.Время1,"ДФ=ЧЧ:мм");
		ЭлементыФормы.тДатаОткрытия	.Заголовок = Формат(ВладелецФормы.Время1,"ДФ=дд.ММ.гггг");
		//Если глПараметрыРМ.ЗКП тогда
		//	ЭлементыФормы.КнопкаКлиент	.Заголовок = ?(ЗначениеЗаполнено(ВладелецФормы.Клиент), ""+ВладелецФормы.Клиент, "< НЕТ КЛИЕНТА >");
		//иначе
			ЭлементыФормы.КнопкаКлиент	.Заголовок = ?(ЗначениеЗаполнено(ВладелецФормы.НомерКартыЛояльности), ВладелецФормы.НомерКартыЛояльности, "< НЕТ КАРТЫ >");
		//КонецЕсли;
		ЭлементыФормы.КнопкаКолвоГостей	.Заголовок = Строка(ВладелецФормы.КоличествоПосетителей) + " чел.";
		
		ИтоговаяСумма = ФорматСумм( ТаблицаЗаказа.Строки.Итог("Сумма") );
		ЭлементыФормы.тШапкаКОплате	.Заголовок = "К оплате: " + ИтоговаяСумма;
		ЭлементыФормы.тСуммаВсего	.Заголовок = ИтоговаяСумма;
		ЭлементыФормы.тСуммаИтого	.Заголовок = ИтоговаяСумма;
		
		ЭлементыФормы.тСтатусЗаказа	.Заголовок = "ПРЕДВАРИТЕЛЬНЫЙ";
		ЭлементыФормы.тСтатусДата	.Заголовок = "";
		
	Иначе
		
		Если ЛимитнаяКарта И ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Открыт Тогда
			ЭлементыФормы.тШапкаКОплате	.Заголовок	= "К оплате: " + ФорматСумм(Заказ.ИтоговаяСумма - Защита.СуммаВнесеннойПредоплаты(Заказ, ЗаказДопИнф));
			//ЭлементыФормы.тСтрИнфо		.Заголовок	= "Лимит: "+ФорматСумм(Защита.ЛимитПоКарте(Заказ, ЗаказДопИнф) - Заказ.ИтоговаяСумма);
			//Если Защита.ПроверкаЛимита(Заказ, ЗаказДопИнф, ЛимитнаяКарта, Ложь) Тогда
			//	ЭлементыФормы.тСтрИнфо.ЦветТекста = ЦветаСтиля.ЦветТекста4;
			//Иначе
			//	ЭлементыФормы.тСтрИнфо.ЦветТекста = ЦветаСтиля.ЦветТекста1;
			//КонецЕсли;
			
		ИначеЕсли глВерсия >1 И ЗначениеЗаполнено(Заказ.Бронь) Тогда	
			СуммаПредоплаты = НакопленияКлиента(Заказ.Бронь.Клиент, Заказ.Бронь).СуммаБезнал;
			ЭлементыФормы.тШапкаКОплате	.Заголовок = "К оплате: " + ФорматСумм(Макс(0,Заказ.ИтоговаяСумма - СуммаПредоплаты));
			//Если СуммаПредоплаты=0 Тогда
			//	ЭлементыФормы.тСтрИнфо	.Заголовок = "Бронь № " + Заказ.Бронь.Номер;
			//	ЭлементыФормы.тСтрИнфо	.Шрифт = ШрифтыСтиля.Шрифт16ж;
			//Иначе
			//	ЭлементыФормы.тСтрИнфо	.Заголовок = "Бронь № " + Заказ.Бронь.Номер +  ", предоплата: "+ФорматСумм(СуммаПредоплаты);
			//	ЭлементыФормы.тСтрИнфо	.Шрифт = ШрифтыСтиля.Шрифт10ж;
			//КонецЕсли;
			
		Иначе
			ЭлементыФормы.тШапкаКОплате.Заголовок	= "К оплате: " + ФорматСумм(Заказ.ИтоговаяСумма);
			//ЭлементыФормы.тСтрИнфо.Заголовок		= ?(ЕстьРекомендации, "Есть рекомендации!", "Всего заказов: " + КолвоЗаказов);
			//ЭлементыФормы.тСтрИнфо.Гиперссылка		= ЕстьРекомендации;
			//ЭлементыФормы.тСтрИнфо.БегущаяСтрока	= ?(ЕстьРекомендации, РежимБегущейСтроки.Нормально, РежимБегущейСтроки.НеИспользовать);			
			
		КонецЕсли;
		
		Если НомерЗаказа <> Заказ.Номер Тогда
			НомерЗаказа = Заказ.Номер;
			ЭлементыФормы.тВремяОткрытия.Заголовок = " "+Формат(Заказ.Дата,"ДФ=ЧЧ:мм");
			ЭлементыФормы.тДатаОткрытия	.Заголовок = Формат(Заказ.Дата,"ДФ=дд.ММ.гггг");
		КонецЕсли; 
		Если ПосадочноеМесто <> Заказ.ПосадочноеМесто Тогда
			ПосадочноеМесто=Заказ.ПосадочноеМесто;
			//ЭлементыФормы.КнопкаМесто	.Заголовок = НаимПосадочногоМеста(Заказ.ПосадочноеМесто);
		КонецЕсли;
		
		// < КС_ВДВ ------------------------------------------------------------ 
		// Кнопка Станция
		ЭлементыФормы.КнопкаСтанция.Заголовок = ?(СтанцияОтбор = Неопределено, "Все Станции", СтанцияОтбор.Наименование);
		
		// Общая по текущей станции / Сумма по вновь набираемым позициям
		ИтоговаяСуммаСтанция = ТаблицаЗаказаОтбор.Строки.Итог("СуммаРеализации");
		ИтоговаяСуммаДозаказ = ИтоговаяСуммаСтанция - СтанцияОтборСуммаНач;
		
		ЭлементыФормы.тСуммаДозаказ.Заголовок = ФорматСумм(ИтоговаяСуммаДозаказ);
		ЭлементыФормы.тСуммаСтанция.Заголовок = ФорматСумм(ИтоговаяСуммаСтанция);
		
		// Надпись Пейждеры
		ЭлементыФормы.тПейджер.Заголовок = ВыданныеПейджерыСтр;
		// КС_ВДВ > ------------------------------------------------------------ 
		
		ЭлементыФормы.тНомерЗаказа		.Заголовок = "Заказ № " + УбратьВсеБуквы(Заказ.Номер) + ?(Модифицирован, "*", "");
		ЭлементыФормы.КнопкаАвтор		.Заголовок = Заказ.Автор.Наименование;
		//Если глПараметрыРМ.ЗКП тогда
		//	ЭлементыФормы.КнопкаКлиент	.Заголовок = ?(ЗначениеЗаполнено(Заказ.Клиент), ""+Заказ.Клиент, "< НЕТ КЛИЕНТА >");
		//иначе
			ЭлементыФормы.КнопкаКлиент	.Заголовок = ?(ЗначениеЗаполнено(Заказ.НомерКартыЛояльности), Заказ.НомерКартыЛояльности, "< НЕТ КАРТЫ >");
		//КонецЕсли;
		ЭлементыФормы.КнопкаКолвоГостей	.Заголовок = Строка(Заказ.КоличествоПосетителей) + " чел.";
		
		СуммаБезСкидок = ТаблицаЗаказа.Строки.Итог("Сумма");
		ИтоговаяСумма  = СуммаБезСкидок + ТаблицаСкидок.Итог("Сумма");
		// ИтоговаяСумма должна совпадать с Заказ.ИтоговаяСумма
		// здесь так выводится для визуального контроля правильности распределения скидок
		ЭлементыФормы.тСуммаВсего		.Заголовок = ФорматСумм(СуммаБезСкидок);
		ЭлементыФормы.тСуммаИтого		.Заголовок = ФорматСумм(ИтоговаяСумма);
		
		Если ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Открыт Тогда
			Если НЕ СменаОткрыта Тогда
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "ОШИБКА СМЕНЫ";
			ИначеЕсли Заблокирован Тогда
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "РЕДАКТИРУЕТСЯ";
			ИначеЕсли Заказ.ЕстьПресчет Тогда
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "ПРЕДВ. СЧЕТ";
			Иначе
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "ПРОДАЖА";
			КонецЕсли;
			
		ИначеЕсли ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Закрыт Тогда
			ЭлементыФормы.тСтатусЗаказа	.Заголовок = "ЗАКРЫТ";
			ЭлементыФормы.тСтатусДата	.Заголовок = Формат(ЗаказДопИнф.ДатаЗакрытия,"ДЛФ=ДВ");
			
		ИначеЕсли ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Удален Тогда
			ЭлементыФормы.тСтатусЗаказа	.Заголовок = "УДАЛЕН";
			ЭлементыФормы.тСтатусДата	.Заголовок = Формат(ЗаказДопИнф.ДатаЗакрытия,"ДЛФ=ДВ");
			
		КонецЕсли;
		
		Если ТекущийЭлемент.ТекущаяСтрока = Неопределено ИЛИ ТекущийЭлемент.ТекущаяСтрока.Количество = 0 Тогда
			// < КС_ВДВ ------------------------------------------------------------ 
			//ЭлементыФормы.КнопкаКурс	.Заголовок = "КУРС";
			
			Если ТекущийЭлемент.ТекущаяСтрока <> Неопределено Тогда
				Если ПодтверждениеВыдачи И ТекущийЭлемент.ТекущаяСтрока.СтатусДопИнф = СтатусГотово ИЛИ  ПодтверждениеГотовностиПриВыдачи И ТекущийЭлемент.ТекущаяСтрока.СтатусДопИнф = СтатусЗаказано Тогда
					ЭлементыФормы.КнопкаКурс.Заголовок   = "ВЫДАЧА";
					ЭлементыФормы.КнопкаКурс.Доступность = Истина; // Возможно, это специфика.	
				Иначе	
					ЭлементыФормы.КнопкаКурс.Доступность = Ложь;
				КонецЕсли;	
			Иначе
				ЭлементыФормы.КнопкаКурс.Доступность = Ложь;
			КонецЕсли;
			// КС_ВДВ > ------------------------------------------------------------ 
		Иначе
			Если ИспользоватьКурсы И (ТекущийЭлемент.ТекущаяСтрока.Статус = СтатусДозаказ ИЛИ ТекущийЭлемент.ТекущаяСтрока.Статус = СтатусОтложено) Тогда
				// < КС_ВДВ ------------------------------------------------------------ 
				//ЭлементыФормы.КнопкаКурс.Заголовок = "КУРС";
				ЭлементыФормы.КнопкаКурс.Доступность = Ложь;
				// КС_ВДВ > ------------------------------------------------------------ 
			ИначеЕсли ПодтверждениеВыдачи И ТекущийЭлемент.ТекущаяСтрока.СтатусДопИнф = СтатусГотово ИЛИ  ПодтверждениеГотовностиПриВыдачи И ТекущийЭлемент.ТекущаяСтрока.СтатусДопИнф = СтатусЗаказано Тогда
				ЭлементыФормы.КнопкаКурс.Заголовок = "ВЫДАЧА";
				// < КС_ВДВ ------------------------------------------------------------ 
				ЭлементыФормы.КнопкаКурс.Доступность = Истина; // Доступность только для выдачи
				// КС_ВДВ > ------------------------------------------------------------ 
			Иначе
				// < КС_ВДВ ------------------------------------------------------------ 
				//ЭлементыФормы.КнопкаКурс.Заголовок = "КУРС";
				ЭлементыФормы.КнопкаКурс.Доступность = Ложь;
				// КС_ВДВ > ------------------------------------------------------------ 
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;
	
	ЭлементыФормы.тПользователь.Заголовок = глПользователь.Наименование;
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	ОбработкаПодбораТовара( ЗначениеВыбора );
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	//ТекущаяФорма = глСтекОкон[0];
	Если глСтекОкон = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущаяФорма = глСтекОкон[0].Форма;
	Если НЕ( ТекущаяФорма=ЭтаФорма ИЛИ ТекущаяФорма=ФормаПодбораТоваров ) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСтатусыПозицийЗаказа" Тогда
		
		Если ТаблицаЗаказа.Строки.Найти(Параметр, "КодПодтверждения", Истина)  = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ИспользоватьЗаказТоварыДопИнф Тогда
			ПерезаполнитьСтатусыПозиций();
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ТаблицаЗаказаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтрокиЗаказа(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ТаблицаЗаказаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.Имя = "Статус" Тогда
		// < КС_ВДВ ------------------------------------------------------------ 
		//ИзменитьКурс(Истина);
		
		Если ПравоНаИзменениеКурса Тогда
			ИзменитьКурс(Истина);
		КонецЕсли; 
		// КС_ВДВ > ------------------------------------------------------------ 
	Иначе
		ИзменитьКоличество();
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаЗаказаПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущаяСтрока = Неопределено ИЛИ Элемент.ТекущаяКолонка = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	// можно использовать для выделения строк
	Если Элемент.ТекущаяКолонка.Имя = "Ном" Тогда
		//Сообщить(Элемент.ТекущаяСтрока.Наименование+ ", "+ Элемент.ТекущаяКолонка.Имя);
	КонецЕсли; 
	
	// < КС_ВДВ ------------------------------------------------------------ 
	ВыводЗаказаНаИнфоДисплей();
	// КС_ВДВ > ------------------------------------------------------------ 

КонецПроцедуры

Процедура КнопкаСтрелкаВверхНажатие(Элемент)
	
	ЭлементыФормы.ТаблицаЗаказа.ТекущаяКолонка = ЭлементыФормы.ТаблицаЗаказа.Колонки.Наименование;
	ТекущийЭлемент = ЭлементыФормы.ТаблицаЗаказа;
	WshShell.SendKeys("{UP}");
	
КонецПроцедуры

Процедура КнопкаСтрелкаВнизНажатие(Элемент)
	
	ЭлементыФормы.ТаблицаЗаказа.ТекущаяКолонка = ЭлементыФормы.ТаблицаЗаказа.Колонки.Наименование;
	ТекущийЭлемент = ЭлементыФормы.ТаблицаЗаказа;
	WshShell.SendKeys("{DOWN}");
	
КонецПроцедуры

Процедура КнопкаМенюНажатие(Элемент)
	
	ПодборТоваров();
	
КонецПроцедуры

Процедура КнопкаКоличествоНажатие(Элемент)
	
	ИзменитьКоличество();
	
КонецПроцедуры

Процедура КнопкаУдалитьНажатие(Элемент)
	
	УдалитьСтроку();
	
КонецПроцедуры

Процедура КнопкаВводПоКодуНажатие(Элемент)
	
	ВводПоКоду();
	
КонецПроцедуры

Процедура КнопкаКурсНажатие(Элемент)
	
	ИзменитьКурс(Истина);
	
КонецПроцедуры

Процедура КнопкаСпецификаНажатие(Элемент)
	
	ВыборСпецифики();
	
КонецПроцедуры

Процедура КнопкаОбщаяСпецификаНажатие(Элемент)
	
	ВыборСпецифики(Истина);
	
КонецПроцедуры

Процедура КнопкаСкидкаНажатие(Элемент)
	
	ВводРучнойСкидки();
	
КонецПроцедуры

Процедура КнопкаУдалитьСкидкуНажатие(Элемент)
	
	ОтменаРучнойСкидки();
	
КонецПроцедуры

Процедура КнопкаКлиентНажатие(Элемент)
	//Если глПараметрыРМ.ЗКП тогда
	//	ВыборКлиента();
	//иначе
		ИзменитьКартуЛояльности();
		ЭтотОбъект.Модифицирован = Истина;
	//КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаКолвоГостейНажатие(Элемент)
	
	ИзменитьКолвоГостей();
	
КонецПроцедуры

Процедура КнопкаМестоНажатие(Элемент)
	
	ИзменитьМесто();
	
КонецПроцедуры

Процедура КнопкаАвторНажатие(Элемент)
	
	ИзменитьАвтора();
	
КонецПроцедуры

Процедура КнопкаПечатьМарокНажатие(Элемент)
	
	// < КС_ВДВ ------------------------------------------------------------ 
	ЗакрылиПодборТоваров = Ложь;
	
	Если ФормаПодбораТоваров <> Неопределено Тогда
		// Сначала закроем форму подбора. Если нажали "Печать марок", то уже закончили подбирать товары.
		// К тому же, окно программы сворачивается при закрытии формы заказа.
		ФормаПодбораТоваров.Закрыть();
		ЗакрылиПодборТоваров = Истина;
	КонецЕсли; 
	
	// Назначение очередности
	Если НЕ ПередПечатьюМарок() Тогда 
		// Отказались от сохранения очередности/пейджера
		
		Если ЗакрылиПодборТоваров Тогда
			ПодборТоваров(); // Восстанавливаем форму подбора товаров	
		КонецЕсли; 
		
		Возврат;
	КонецЕсли; 
	// КС_ВДВ > ------------------------------------------------------------ 
	
	// после печати марок запись заказа должна быть в любом случае
	// < КС_ВДВ ------------------------------------------------------------ 
	//ПечатьМарок(Истина);
	//ЗаписатьЗаказ();
	
	ПечатьУспех = ПечатьМарок(Истина);
	ЗаписьУспех = ЗаписатьЗаказ();
	
	ЕстьМаркиКВыдаче = ВыполнитьРегистрациюМарок();
	
	// Если заказ был открыть из Монитора Марок,
	// то установим в нем режим выдачи с фильтром по заказу
	УстановитьРежимВыдачиЗаказа = (ЕстьМаркиКВыдаче И РежимМонитор);
	// КС_ВДВ > ------------------------------------------------------------ 
	
	Если ИспользоватьЗаказТоварыДопИнф Тогда
		ПерезаполнитьСтатусыПозиций();
	КонецЕсли;
	
	// < КС_ВДВ ------------------------------------------------------------ 
	// Выходим из заказа после печати марок, если всё прошло успешно.
	Если ПечатьУспех И ЗаписьУспех Тогда
		ИнтерфейсРМ.ВыводНаИнфоДисплей("ЗаказЗаписан", Неопределено, Неопределено, Неопределено, Неопределено);
		Если глПараметрыРМ.Тип = Перечисления.ТипыРМ.Производство тогда
			ЭтаФорма.Закрыть();
		КонецЕсли;
	КонецЕсли; 
	// КС_ВДВ > ------------------------------------------------------------ 
	
КонецПроцедуры

Процедура КнопкаОплатаНажатие(Элемент)
	
	Оплата();
	
	Если ИспользоватьЗаказТоварыДопИнф Тогда
		ПерезаполнитьСтатусыПозиций();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаПречекНажатие(Элемент)
	
	ПечатьСчета();
	
	Если ИспользоватьЗаказТоварыДопИнф Тогда
		ПерезаполнитьСтатусыПозиций();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаОтменаПречекаНажатие(Элемент)
	
	ОтменаПречека();
	
	Если ИспользоватьЗаказТоварыДопИнф Тогда
		ПерезаполнитьСтатусыПозиций();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаРазделитьЗаказНажатие(Элемент)
	
	РазделитьЗаказ();
	
КонецПроцедуры

Процедура КнопкаУпаковкаНажатие(Элемент)
	
	УпаковкаТаблицыЗаказа(Истина);
	
	// < КС_ВДВ ------------------------------------------------------------ 
	//Если ТаблицаЗаказа.Строки.Количество() <> 0 Тогда
	//	ЭлементыФормы.ТаблицаЗаказа.ТекущаяСтрока = ТаблицаЗаказа.Строки[ТаблицаЗаказа.Строки.Количество()-1];
	//КонецЕсли; 
	
	Если ТаблицаЗаказаОтбор.Строки.Количество() <> 0 Тогда
		ЭлементыФормы.ТаблицаЗаказа.ТекущаяСтрока = ТаблицаЗаказаОтбор.Строки[ТаблицаЗаказаОтбор.Строки.Количество()-1];
	КонецЕсли; 
	// КС_ВДВ > ------------------------------------------------------------ 
	
КонецПроцедуры

Процедура КнопкаПредыдущийЗаказНажатие(Элемент)
	
	ОткрытьСледующийЗаказ(-1);
	
КонецПроцедуры

Процедура КнопкаСледующийЗаказНажатие(Элемент)
	
	ОткрытьСледующийЗаказ(1);
	
КонецПроцедуры

Процедура КнопкаНовыйЗаказНажатие(Элемент)
	
	ОткрытьНовыйЗаказ();
	
КонецПроцедуры

Процедура ТаблицаСкидокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Сумма < 0 Тогда
		ОформлениеСтроки.Ячейки.Сумма.ЦветТекста = Новый Цвет(128,0,0);
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаQRкодНажатие(Элемент)
	ПечатьQRкода();
КонецПроцедуры

Процедура тСтрИнфоНажатие(Элемент)
	
	ПолучитьРекомендации();
	
КонецПроцедуры

// < КС_ВДВ ------------------------------------------------------------ 
Функция ПолучитьСуммуДозаказа()

	ТекСуммаДозаказ = 0; // Эту сумму можно получить как по ТаблицаЗаказаОтбор, так и по ТаблицаЗаказа.
	
	// Станцию не будем добавлять в отбор, т.к. Станция не может редактировать "чужие" строки.
	ПараметрыОтбораДозаказ = Новый Структура("Статус", Перечисления.СтатусыПозицийЗаказа.Дозаказ);
	МассивДозаказ = ТаблицаЗаказа.Строки.НайтиСтроки(ПараметрыОтбораДозаказ, Ложь);
	
	Для К = 0 По МассивДозаказ.Количество()-1 Цикл
		ТекСуммаДозаказ = ТекСуммаДозаказ + МассивДозаказ[К].Сумма;
	КонецЦикла; 
	
	Возврат ТекСуммаДозаказ;

КонецФункции
 
// < КС_ВДВ ------------------------------------------------------------ 
Процедура КнопкаСтанцияНажатие(Элемент)
	
	ВыборФильтраПоСтанции();
		
КонецПроцедуры // КС_ВДВ > ------------------------------------------------------------ 

// < КС_ВДВ ------------------------------------------------------------ 
Процедура ВыборФильтраПоСтанции()

	Если РежимМонитор Тогда
		Возврат; // при открытии заказа из монитора не разрешается менять станцию-фильтр
	КонецЕсли; 
	
	ТаблицаСтанций = Новый ТаблицаЗначений;
	ТаблицаСтанций.Колонки.Добавить("Станция", Новый ОписаниеТипов("СправочникСсылка.Станции"));
	
	Для К = 1 По ТаблицаЗаказа.Строки.Количество() Цикл // Добавляем пустые строки
		ТаблицаСтанций.Добавить();
	КонецЦикла; 
	
	// Загружаем в тз из девера
	МассивСтанций = ТаблицаЗаказа.Строки.ВыгрузитьКолонку("Станция");
	ТаблицаСтанций.ЗагрузитьКолонку(МассивСтанций, "Станция");
	
	// Сворачиваем и сортируем станции
	ТаблицаСтанций.Свернуть("Станция", "");
	ТаблицаСтанций.Сортировать("Станция");
	
	// Создаем массив для выбора станции
	МассивСтанций = ТаблицаСтанций.ВыгрузитьКолонку("Станция");
	МассивСтанций.Вставить(0, "По Всем Станциям");
	
	ВыбСтанция = ИнтерфейсРМ.ВыборИзСписка( МассивСтанций, , , "Выбор станции", "Показать строки по станции:" );
	Если ВыбСтанция = Неопределено Тогда
		Возврат;
	КонецЕсли; 

	СтанцияОтбор = ?(ТипЗнч(ВыбСтанция) = Тип("Строка"), Неопределено, ВыбСтанция);
	
	УстановитьФильтрПоСтанции();
	
КонецПроцедуры // < КС_ВДВ ------------------------------------------------------------ 

// < КС_ВДВ ------------------------------------------------------------ 
Процедура ВозвратПейджера()

	Результат = ксТрактир.ВыполнитьВозвратПейджера(Заказ.Ссылка, , Истина);
	
	Если Результат.Возвращен Тогда
		
		ОбновитьИнформациюОВыданныхПейджерах();	
		
	КонецЕсли; 
	
КонецПроцедуры // КС_ВДВ > ------------------------------------------------------------ 
 
// < КС_ВДВ ------------------------------------------------------------ 
Процедура КнопкаВозвратПейджераНажатие(Элемент)
	
	ВозвратПейджера();
		
КонецПроцедуры // КС_ВДВ > ------------------------------------------------------------ 

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Вставить содержимое обработчика.
КонецПроцедуры
ЗакрыватьПриВыборе = Ложь;