
Перем НомерЗаказа, ПосадочноеМесто;	// для оптимизации обновления отображения

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЖИДАНИЯ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередОткрытиемФормы(ЭтаФорма, Отказ);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередЗакрытиемФормы(ЭтаФорма, Отказ);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// доступность кнопок
	Кнопки1 = ЭлементыФормы.КоманднаяПанель1.Кнопки;
	Кнопки2 = ЭлементыФормы.КоманднаяПанель2.Кнопки;
	
	Если глВерсия=1 ИЛИ НЕ ИспользоватьЗаказТоварыДопИнф ИЛИ НЕ глПараметрыРМ.ЗаказИспользоватьКурсы Тогда
		Кнопки1.Удалить(Кнопки1.Курс);
	КонецЕсли; 
	Если глВерсия=1 Тогда
		Кнопки1.Удалить(Кнопки1.Специфика);
		Кнопки1.Удалить(Кнопки1.ОбщаяСпецифика);
	КонецЕсли; 
	
	Если РежимПредЗаказ Тогда
		Кнопки1.Удалить(Кнопки1.Курс);
		Кнопки2.Удалить(Кнопки2.Пречек);
		Кнопки2.Удалить(Кнопки2.ОтменаПречека);
		Кнопки1.Удалить(Кнопки1.ПечатьМарок);
		Кнопки2.Удалить(Кнопки2.РазделитьЗаказ);
		Кнопки2.Удалить(Кнопки2.Скидка);
		Кнопки2.Удалить(Кнопки2.УдалитьСкидку);
		Кнопки1.Удалить(Кнопки1.Упаковка);
	КонецЕсли;
	
	//----------------------------------------------------------
	ТабПолеТС = ЭлементыФормы.ТаблицаСкидок;
	ТабПолеТС.СоздатьКолонки();
	
	ТабПолеТС.Колонки.Текст.ШрифтТекста = ШрифтыСтиля.Шрифт7;
	ТабПолеТС.Колонки.Текст.Ширина		= 12;
	ТабПолеТС.Колонки.Сумма.ШрифтТекста = ШрифтыСтиля.Шрифт7;
	ТабПолеТС.Колонки.Сумма.Ширина		= 8;
	
	Для каждого КолонкаСкидок Из ТабПолеТС.Колонки Цикл
		Если КолонкаСкидок.Имя<>"Текст" И КолонкаСкидок.Имя<>"Сумма" Тогда
			КолонкаСкидок.Видимость = Ложь;
		КонецЕсли; 
	КонецЦикла; 
	
	//----------------------------------------------------------
	ТабПолеТК = ЭлементыФормы.ТаблицаКатегорий;
	ТабПолеТК.СоздатьКолонки();
	
	ТабПолеТК.Колонки.Категория	.ШрифтТекста = ШрифтыСтиля.Шрифт7;
	ТабПолеТК.Колонки.Категория	.Ширина		 = 10;
	ТабПолеТК.Колонки.Сумма		.ШрифтТекста = ШрифтыСтиля.Шрифт7;
	ТабПолеТК.Колонки.Сумма		.Ширина		 = 8;
	
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	глОтсечкаПростоя();
	//ТекущийЭлемент = ЭлементыФормы.ТаблицаЗаказа;		здесь не надо, чтоб не перепрыгивало с доп.инф обратно
	
	Если РежимПредЗаказ Тогда
		ЭлементыФормы.тНомерЗаказа	.Заголовок = ВладелецФормы.Заголовок;
		ЭлементыФормы.КнопкаМесто	.Заголовок = НаимПосадочногоМеста(ВладелецФормы.ПосадочноеМесто);
		ЭлементыФормы.КнопкаАвтор	.Заголовок = глПользователь.Наименование;
		ЭлементыФормы.тВремяОткрытия.Заголовок = " "+Формат(ВладелецФормы.Время1,"ДФ=ЧЧ:мм");
		ЭлементыФормы.тДатаОткрытия	.Заголовок = Формат(ВладелецФормы.Время1,"ДФ=дд.ММ");
		ЭлементыФормы.КнопкаКлиент	.Заголовок = ?(ЗначениеЗаполнено(ВладелецФормы.Клиент), ВладелецФормы.Клиент.Наименование, "<не указан>");
		ЭлементыФормы.КнопкаКолвоГостей	.Заголовок = Строка(ВладелецФормы.КоличествоПосетителей) + " чел.";
		
		ИтоговаяСумма = ФорматСумм( ТаблицаЗаказа.Строки.Итог("Сумма") );
		ЭлементыФормы.КнопкаОплата	.Заголовок = ИтоговаяСумма;
		ЭлементыФормы.тСуммаВсего	.Заголовок = ИтоговаяСумма;
		ЭлементыФормы.тСуммаИтого	.Заголовок = ИтоговаяСумма;
		
		ЭлементыФормы.тСтатусЗаказа	.Заголовок = "ПРЕДВАРИТЕЛЬНЫЙ";
		ЭлементыФормы.тСтатусДата	.Заголовок = "";
		
	Иначе
		
		Если НомерЗаказа <> Заказ.Номер Тогда
			НомерЗаказа = Заказ.Номер;
			ЭлементыФормы.тВремяОткрытия.Заголовок = " "+Формат(Заказ.Дата,"ДФ=ЧЧ:мм");
			ЭлементыФормы.тДатаОткрытия	.Заголовок = Формат(Заказ.Дата,"ДФ=дд.ММ");
			ЭлементыФормы.тСтрИнфо		.Заголовок = "("+КолвоЗаказов+")";
		КонецЕсли; 
		Если ПосадочноеМесто <> Заказ.ПосадочноеМесто Тогда
			ПосадочноеМесто=Заказ.ПосадочноеМесто;
			ЭлементыФормы.КнопкаМесто	.Заголовок = НаимПосадочногоМеста(Заказ.ПосадочноеМесто);
			ЭлементыФормы.тСтрИнфо		.Заголовок = "("+КолвоЗаказов+")";
		КонецЕсли;
		ЭлементыФормы.тНомерЗаказа		.Заголовок = "Заказ № " + Заказ.Номер + ?(Модифицирован, "*", "");
		ЭлементыФормы.КнопкаОплата		.Заголовок = ФорматСумм(Заказ.ИтоговаяСумма);
		ЭлементыФормы.КнопкаАвтор		.Заголовок = Заказ.Автор.Наименование;
		ЭлементыФормы.КнопкаКлиент		.Заголовок = ?(ЗначениеЗаполнено(Заказ.Клиент), Заказ.Клиент.Наименование, "<не указан>");
		ЭлементыФормы.КнопкаКолвоГостей	.Заголовок = Строка(Заказ.КоличествоПосетителей) + " чел.";
		
		СуммаБезСкидок = ТаблицаЗаказа.Строки.Итог("Сумма");
		ИтоговаяСумма  = СуммаБезСкидок + ТаблицаСкидок.Итог("Сумма");
		// ИтоговаяСумма должна совпадать с Заказ.ИтоговаяСумма
		// здесь так выводится для визуального контроля правильности распределения скидок
		ЭлементыФормы.тСуммаВсего		.Заголовок = ФорматСумм(СуммаБезСкидок);
		ЭлементыФормы.тСуммаИтого		.Заголовок = ФорматСумм(ИтоговаяСумма);
		
		Если ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Открыт Тогда
			Если НЕ СменаОткрыта Тогда
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "ОШИБКА СМЕНЫ";
			ИначеЕсли Заблокирован Тогда
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "РЕДАКТИРУЕТСЯ";
			ИначеЕсли Заказ.ЕстьПресчет Тогда
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "ПРЕДВ. СЧЕТ";
			Иначе
				ЭлементыФормы.тСтатусЗаказа.Заголовок = "ПРОДАЖА";
			КонецЕсли;
			
		ИначеЕсли ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Закрыт Тогда
			ЭлементыФормы.тСтатусЗаказа	.Заголовок = "ЗАКРЫТ " + Формат(ЗаказДопИнф.ДатаЗакрытия,"ДФ=дд.ММ") +" в "+ Формат(ЗаказДопИнф.ДатаЗакрытия,"ДФ=ЧЧ:мм");
			
		ИначеЕсли ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Удален Тогда
			ЭлементыФормы.тСтатусЗаказа	.Заголовок = "УДАЛЕН " + Формат(ЗаказДопИнф.ДатаЗакрытия,"ДФ=дд.ММ") +" в "+ Формат(ЗаказДопИнф.ДатаЗакрытия,"ДФ=ЧЧ:мм");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	ОбработкаПодбораТовара( ЗначениеВыбора );
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	//ТекущаяФорма = глСтекОкон[0];
	ТекущаяФорма = глСтекОкон[0].Форма;
	Если НЕ( ТекущаяФорма=ЭтаФорма ИЛИ ТекущаяФорма=ФормаПодбораТоваров ) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ТаблицаЗаказаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтрокиЗаказа(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ТаблицаЗаказаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.Имя = "Статус" Тогда
		ИзменитьКурс();
	Иначе
		ИзменитьКоличество();
	КонецЕсли;
		
КонецПроцедуры

Процедура КнопкаМенюНажатие(Элемент)
	
	ПодборТоваров();
	
КонецПроцедуры

Процедура КнопкаКоличествоНажатие(Элемент)
	
	ИзменитьКоличество();
	
КонецПроцедуры

Процедура КнопкаУдалитьНажатие(Элемент)
	
	УдалитьСтроку();
	
КонецПроцедуры

Процедура КнопкаВводПоКодуНажатие(Элемент)
	
	ВводПоКоду();
	
КонецПроцедуры

Процедура КнопкаКурсНажатие(Элемент)
	
	ИзменитьКурс();
	
КонецПроцедуры

Процедура КнопкаСпецификаНажатие(Элемент)
	
	ВыборСпецифики();
	
КонецПроцедуры

Процедура КнопкаОбщаяСпецификаНажатие(Элемент)
	
	ВыборСпецифики(Истина);
	
КонецПроцедуры

Процедура КнопкаСкидкаНажатие(Элемент)
	
	ВводРучнойСкидки();
	
КонецПроцедуры

Процедура КнопкаУдалитьСкидкуНажатие(Элемент)
	
	ОтменаРучнойСкидки();
	
КонецПроцедуры

Процедура КнопкаКлиентНажатие(Элемент)
	
	ВыборКлиента();
	
КонецПроцедуры

Процедура КнопкаКолвоГостейНажатие(Элемент)
	
	ИзменитьКолвоГостей();
	
КонецПроцедуры

Процедура КнопкаМестоНажатие(Элемент)
	
	ИзменитьМесто();
	
КонецПроцедуры

Процедура КнопкаАвторНажатие(Элемент)
	
	ИзменитьАвтора();
	
КонецПроцедуры

Процедура КнопкаПечатьМарокНажатие(Элемент)
	
	// после печати марок запись заказа должна быть в любом случае
	ПечатьМарок(Истина);
	ЗаписатьЗаказ();
	
КонецПроцедуры

Процедура КнопкаОплатаНажатие(Элемент)
	
	Оплата();
	
КонецПроцедуры

Процедура КнопкаПречекНажатие(Элемент)
	ПечатьСчета();
КонецПроцедуры

Процедура КнопкаОтменаПречекаНажатие(Элемент)
	ОтменаПречека();
КонецПроцедуры

Процедура КнопкаРазделитьЗаказНажатие(Элемент)
	
	РазделитьЗаказ();
	
КонецПроцедуры

Процедура КнопкаУпаковкаНажатие(Элемент)
	
	УпаковкаТаблицыЗаказа(Истина);
	
	Если ТаблицаЗаказа.Строки.Количество() <> 0 Тогда
		ЭлементыФормы.ТаблицаЗаказа.ТекущаяСтрока = ТаблицаЗаказа.Строки[ТаблицаЗаказа.Строки.Количество()-1];
	КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаПредыдущийЗаказНажатие(Элемент)
	
	ОткрытьСледующийЗаказ(-1);
	
КонецПроцедуры

Процедура КнопкаСледующийЗаказНажатие(Элемент)
	
	ОткрытьСледующийЗаказ(1);
	
КонецПроцедуры

Процедура КнопкаНовыйЗаказНажатие(Элемент)
	
	ОткрытьНовыйЗаказ();
	
КонецПроцедуры

Процедура ТаблицаСкидокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Сумма < 0 Тогда
		ОформлениеСтроки.Ячейки.Сумма.ЦветТекста = Новый Цвет(128,0,0);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель3ДопИнфо(Кнопка)
	
	ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы.ДопИнфо;
	
КонецПроцедуры

Процедура КоманднаяПанель4ВернутьсяКЗаказу(Кнопка)
	
	ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы.Заказ;
	
КонецПроцедуры




