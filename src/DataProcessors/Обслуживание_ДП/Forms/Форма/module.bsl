
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ОписаниеПрофиля) ТОгда
		Предупреждение("Данная обработка открывается только из справочника торгового оборудования!",5);
		Отказ = Истина;
		Возврат;  		
	КонецЕсли;   
	
	// заполнение списка COM, LPT и Ethernet портов
	СписокПортов = ЭлементыФормы.PortNumber.СписокВыбора;
	Для н=1 По 256 Цикл
		СписокПортов.Добавить(1000+н,"COM"+н);
	КонецЦикла;
	СписокПортов.Добавить(66,"Posiflex USB");
	СписокПортов.Добавить(101,"COM Proxy1");
	СписокПортов.Добавить(102,"COM Proxy2");
	
	// заполнение списка скоростей обмена
	СписокСкоростей = ЭлементыФормы.BaudRate.СписокВыбора;
	СписокСкоростей.Добавить(4 ,"2400 бод");
	СписокСкоростей.Добавить(5 ,"4800 бод");
	СписокСкоростей.Добавить(7 ,"9600 бод");
	СписокСкоростей.Добавить(9 ,"14400 бод");
	СписокСкоростей.Добавить(10,"19200 бод");
	СписокСкоростей.Добавить(11,"38400 бод");
	СписокСкоростей.Добавить(12,"57600 бод");
	СписокСкоростей.Добавить(13,"115200 бод");
	
	// заполнение списка битов данных
	СписокБитовДанных = ЭлементыФормы.DataBits.СписокВыбора;
	СписокБитовДанных.Добавить(3, "7 бит");
	СписокБитовДанных.Добавить(4, "8 бит");
	
	// заполнение списка четности
	СписокЧетности = ЭлементыФормы.Parity.СписокВыбора;
	СписокЧетности.Добавить(0, "Нет");
	СписокЧетности.Добавить(1, "Нечетность");
	СписокЧетности.Добавить(2, "Четность");
	СписокЧетности.Добавить(3, "Установлен");
	СписокЧетности.Добавить(4, "Сброшен");
	
	// заполнение списка стоп-битов
	СписокСтопБитов = ЭлементыФормы.StopBits.СписокВыбора;
	СписокСтопБитов.Добавить(0, "1 бит");
	СписокСтопБитов.Добавить(2, "2 бита");
	
	// заполнение списка типов бегущей строки
	СписокТиповБегущейСтроки = ЭлементыФормы.MarqueeType.СписокВыбора;
	СписокТиповБегущейСтроки.Добавить(0, "нет бегущей строки");
	СписокТиповБегущейСтроки.Добавить(1, "сдвиг строки вверх");
	СписокТиповБегущейСтроки.Добавить(2, "сдвиг строки вниз");
	СписокТиповБегущейСтроки.Добавить(3, "сдвиг строки влево");
	СписокТиповБегущейСтроки.Добавить(4, "сдвиг строки вправо");
	
	// заполнение списка форматов бегущей строки
	СписокФорматовБегущейСтроки = ЭлементыФормы.MarqueeFormat.СписокВыбора;
	СписокФорматовБегущейСтроки.Добавить(0, "по одному символу");
	СписокФорматовБегущейСтроки.Добавить(1, "сразу весь текст");
	
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Отключить();
	DRV = 0;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЭлементыФормы.DownloadFonts.Видимость = ТО.КодМодели="EPSON";
	
	ЭлементыФормы.ПанельСОМпорт.Видимость = PortNumber<>66;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Сохранение параметров и закрытие формы
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЗаполнитьЗначенияСвойств(ПараметрыТО,ЭтотОбъект);
	
	Закрыть("ОК");
	
КонецПроцедуры

Процедура ТестВывестиТекстНажатие(Элемент)
	
	Если НЕ Подключить() Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
		Возврат;
	КонецЕсли; 
	
	Результат.Ошибка = Ложь;
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("Текст1" ,СтрПолучитьСтроку(ТестСтрока,1));
	ПараметрыДействия.Вставить("Текст2" ,СтрПолучитьСтроку(ТестСтрока,2));
	
	ВыполнитьДействие("ВывестиТекст", ПараметрыДействия);
	
	Если Результат.Ошибка Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТестБегущаяСтрокаНажатие(Элемент)
	
	Если НЕ Подключить() Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
		Возврат;
	КонецЕсли; 
	
	Результат.Ошибка = Ложь;
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("Текст" ,ТестСтрока);
	
	ВыполнитьДействие("БегущаяСтрока", ПараметрыДействия);
	
	Если Результат.Ошибка Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТестОчиститьНажатие(Элемент)
	
	УдалитьВсеОкна();
	
КонецПроцедуры


