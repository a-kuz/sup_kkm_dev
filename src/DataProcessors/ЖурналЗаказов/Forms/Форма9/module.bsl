// < КС_ВДВ ------------------------------------------------------------ 
Перем ЦветПейджер;
Перем ЦветПриготовление;
Перем ЦветКВыдаче;
// КС_ВДВ > ------------------------------------------------------------ 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЖИДАНИЯ

// чтобы часики тикали
//
Процедура ОбновитьДатуВремя()
	
	ТекДата = ТекущаяДата();
	ЭлементыФормы.тДата.Заголовок	= Формат(ТекДата,"ДЛФ=Д");
	ЭлементыФормы.тВремя.Заголовок	= Формат(ТекДата,"ДЛФ=В");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередОткрытиемФормы(ЭтаФорма, Отказ);
	
	// Для сводного журнала кнопка поиска по подстроке не актуальна
	Если СводныйЖурнал Тогда
		ЭлементыФормы.ПанельКнопкиПоискаПоСтроке.Свертка = РежимСверткиЭлементаУправления.Право;
	Иначе
		ЭлементыФормы.ПанельКнопкиПоискаПоСтроке.Свертка = РежимСверткиЭлементаУправления.Нет;
		ТекущийЭлемент = ЭлементыФормы.ПодстрокаПоиска;
	КонецЕсли; 
	ЭлементыФормы.ПанельПодстрокаПоиска.Свертка = РежимСверткиЭлементаУправления.Верх;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередЗакрытиемФормы(ЭтаФорма, Отказ);
	
	// Для сводного журнала кнопка поиска по подстроке не актуальна
	Если СводныйЖурнал Тогда
		ЭлементыФормы.ПанельКнопкиПоискаПоСтроке.Свертка = РежимСверткиЭлементаУправления.Право;
	Иначе
		ЭлементыФормы.ПанельКнопкиПоискаПоСтроке.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли; 
	ЭлементыФормы.ПанельПодстрокаПоиска.Свертка = РежимСверткиЭлементаУправления.Верх;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// неизменяемые надписи
	Если РежимЗакрытых Тогда
		ЭлементыФормы.тЗаголовок.Заголовок = ?(РежимНедозакрытых, "Незарегистрирована оплата!!!", "Закрытые заказы" );
		ЭлементыФормы.КнопкаНовый.Видимость = Ложь;
		ЭлементыФормы.КнопкаУдалить.Видимость = Ложь;
	Иначе
		ЭлементыФормы.тЗаголовок.Заголовок = "Список заказов";
	КонецЕсли;
	
	Если глДоставкаОсновнойРежим Тогда
		ЭлементыФормы.КнопкаАвтор.Видимость = Ложь;
	КонецЕсли; 
	
	// < КС_ВДВ ------------------------------------------------------------ 
	// Отключаем видимость кнопок
	
	// УДАЛИТЬ
	Если РежимЗакрытых Тогда
		ЭлементыФормы.КнопкаУдалить.Видимость = Ложь;
	Иначе
		ЭлементыФормы.КнопкаУдалить.Видимость = ксТрактир.НаличиеПраваДоступа("УдалениеОткрытыхЗаказов");
	КонецЕсли;
	
	
	// ОФИЦ
	ЭлементыФормы.КнопкаАвтор.Видимость = ксТрактир.НаличиеПраваДоступа("ИзменениеАвтора");
	
	// КС_ВДВ > ------------------------------------------------------------ 
	
	// периодически обновляемые надписи
	ОбновитьДатуВремя();
	ПодключитьОбработчикОжидания("ОбновитьДатуВремя", 1);
	
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	РаботаСокнами.CloseScreenKey();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	глОтсечкаПростоя();
	// Из подстроки поиска никуда переходить не надо
	Если ТекущийЭлемент <> ЭлементыФормы.ПодстрокаПоиска Тогда
		ТекущийЭлемент = ЭлементыФормы.ЖурналЗаказов;
	КонецЕсли; 
	
	ЭлементыФормы.тПользователь.Заголовок = глПользователь.Наименование;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыходИзЗаказа" Тогда
		ОбновитьЖурнал(Параметр);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ЖурналЗаказовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если СводныйЖурнал Тогда
		Возврат;
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Пиктограмма.ОтображатьТекст  = Ложь;
	
	Если ДанныеСтроки.Пиктограмма=0 Тогда
		ОформлениеСтроки.Ячейки.Пиктограмма.ОтображатьКартинку = Ложь;
	Иначе
		ОформлениеСтроки.Ячейки.Пиктограмма.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Пиктограмма.ИндексКартинки = ДанныеСтроки.Пиктограмма-1;
	КонецЕсли; 
	
	// < КС_ВДВ ------------------------------------------------------------ 
	// Оформление доп. колонок. 
	// Доп. колонки есть только в "простой журнал всех заказов".
	// Т.е. условие: НЕ СводныйЖурнал И НЕ ДоставкаЖурнал
	
	Если НЕ ДоставкаЖурнал Тогда // На "НЕ СводныйЖурнал" уже есть проверка выше
		Если ДанныеСтроки.Пейджер > 0 Тогда
			ОформлениеСтроки.Ячейки.Пейджер.ЦветФона = ЦветПейджер;
		КонецЕсли; 
		
		Если ДанныеСтроки.ПриготовлениеПросрочено > 0 Тогда
			ОформлениеСтроки.Ячейки.Приготовление.ЦветФона = ЦветПриготовление;
		КонецЕсли; 
		
		Если ДанныеСтроки.КВыдачеПросрочено > 0 Тогда
			ОформлениеСтроки.Ячейки.КВыдаче.ЦветФона = ЦветКВыдаче;
		КонецЕсли; 
	КонецЕсли;	
	// КС_ВДВ > ------------------------------------------------------------ 
КонецПроцедуры

Процедура КнопкаВозвратНажатие(Элемент)
	
	ВозвратПоЗаказу();
	
КонецПроцедуры

Процедура КнопкаПоискНажатие(Элемент)
	
	Если НЕ ДоставкаЖурнал Тогда
		// < КС_ВДВ ------------------------------------------------------------ 
		//ПолучитьФорму("Поиск").ОткрытьМодально();
		
		ПоискЗаказаПоКартеДоступа(); // запрос на ввод карты, и далее открытие заказа
		// КС_ВДВ > ------------------------------------------------------------ 
	Иначе
		ПолучитьФорму("ПоискДоставка").ОткрытьМодально();
	КонецЕсли; 
	//Z+
	ОбновитьЖурнал();
	//Z-
КонецПроцедуры

Процедура КнопкаМестоНажатие(Элемент)
	
	ИзменитьЗаказ("ИзменитьМесто");
	
КонецПроцедуры

Процедура КнопкаАвторНажатие(Элемент)
	
	ИзменитьЗаказ("ИзменитьАвтора");
	
КонецПроцедуры

Процедура КнопкаГостиНажатие(Элемент)
	
	ИзменитьЗаказ("ИзменитьКолвоГостей");
	
КонецПроцедуры

Процедура КнопкаУдалитьНажатие(Элемент)
	
	УдалитьЗаказ();
	
КонецПроцедуры

Процедура КнопкаНовыйНажатие(Элемент)
	
	СоздатьНовыйЗаказ();
	
КонецПроцедуры

Процедура КнопкаСтрелкаВверхНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.ЖурналЗаказов;
	WshShell.SendKeys("{UP}");
	
КонецПроцедуры

Процедура КнопкаСтрелкаВнизНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.ЖурналЗаказов;
	WshShell.SendKeys("{DOWN}");
	
КонецПроцедуры

Процедура КнопкаВыбратьНажатие(Элемент)
	
	ОбработкаВыбораСтроки();
	
КонецПроцедуры

Процедура ЖурналЗаказовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораСтроки();
	// Для сводного журнала кнопка поиска по подстроке не актуальна
	Если СводныйЖурнал Тогда
		ЭлементыФормы.ПанельКнопкиПоискаПоСтроке.Свертка = РежимСверткиЭлементаУправления.Право;
	Иначе
		ЭлементыФормы.ПанельКнопкиПоискаПоСтроке.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли; 
	
КонецПроцедуры

// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ПАНЕЛИ ПОИСКА ПО ПОДСТРОКЕ

Процедура КнопкаПоискПоСтрокеНажатие(Элемент)
	
	// Видимость подстроки поиска
	Если ЭлементыФормы.ПанельПодстрокаПоиска.Свертка = РежимСверткиЭлементаУправления.Нет Тогда
		ЭлементыФормы.ПанельПодстрокаПоиска.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельПодстрокаПоиска.Свертка = РежимСверткиЭлементаУправления.Нет;
		ТекущийЭлемент = ЭлементыФормы.ПодстрокаПоиска;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодстрокаПоискаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ОбновитьЖурнал(,,Текст);
	
КонецПроцедуры

Процедура КнопкаЭкраннаяКлаваНажатие(Элемент)
	
	Перем X, Y;
	
	ИнтерфейсРМ.ЭкраннаяКлавиатура();
	
	ТекущийЭлемент = ЭлементыФормы.ПодстрокаПоиска;
	
	// переместим окно вверх, чтобы клава не перекрывала
	//hWnd = РаботаСокнами.FindMDIChildV8( Заголовок );
	//
	//РаботаСокнами.GetWndPosV8( hWnd, X, Y );
	//РаботаСокнами.УстановитьПоложениеОкна( hWnd, X, 0 );
	//РаботаСокнами.GetWndPosV8( глСтекОкон[0].hWnd, X, Y );
	//РаботаСокнами.УстановитьПоложениеОкна( глСтекОкон[0].hWnd, X, 0 );	
	
КонецПроцедуры

Процедура КнопкаОчиститьФильтрНажатие(Элемент)
	
	ПодстрокаПоиска = "";
	ОтборУстановлен = Ложь;
	ОбновитьЖурнал();
	ТекущийЭлемент = ЭлементыФормы.ПодстрокаПоиска;
	
КонецПроцедуры

Процедура ПодстрокаПоискаПриИзменении(Элемент)
	ОтборУстановлен = Истина;
КонецПроцедуры

Процедура КнопкаКопияЧекаНажатие(Элемент)
	пЗаказ = ЭлементыФормы.ЖурналЗаказов.ТекущиеДанные.ДокСсылка;
	Если пЗаказ=Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(пЗаказ) = Тип("ДокументСсылка.Заказ") Тогда
		ЗаказДопИнф = РегистрыСведений.ЗаказДопИнф.СоздатьМенеджерЗаписи();
		ЗаказДопИнф.Заказ = пЗаказ.Ссылка;
		ЗаказДопИнф.Прочитать();
		
		Если Не ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Закрыт тогда
			возврат;
		КонецЕсли;
		//-------------------------------------
		глОжидание.Начало("Выполняется печать...",
						"Идет печать заданий на сервис-принтерах.
						|Пожалуйста, подождите...");
		
		ОбработкаПечати = ИнтерфейсРМ.ПолучитьОбъектОбработки("ПечатьЗаказа");
		ОбработкаПечати.Заказ			= пЗаказ;
		ОбработкаПечати.ЗаказДопИнф		 = ЗаказДопИнф;
		ОбработкаПечати.ПротоколРасчетов = ЗаказДопИнф.ПротоколРасчетов;
		ОбработкаПечати.ФоновыйРежим	 = ложь;
		
		ПечатьОК = ОбработкаПечати.ПечатьКопииЧека();
		глОжидание.Конец();
	ИначеЕсли ТипЗнч(пЗаказ) = Тип("ДокументСсылка.Возврат") Тогда
		ЗаказДопИнф = РегистрыСведений.ЗаказДопИнф.СоздатьМенеджерЗаписи();
		ЗаказДопИнф.Заказ = пЗаказ.Заказ;
		ЗаказДопИнф.Прочитать();
		
		Если Не ЗаказДопИнф.Статус = Перечисления.СтатусыЗаказа.Закрыт тогда
			возврат;
		КонецЕсли;
		глОжидание.Начало("Выполняется печать...",
						"Идет печать заданий на сервис-принтерах.
						|Пожалуйста, подождите...");
		
		ОбработкаПечати = ИнтерфейсРМ.ПолучитьОбъектОбработки("ПечатьЗаказа");
		ОбработкаПечати.Заказ			= пЗаказ.Заказ;
		ОбработкаПечати.ЗаказДопИнф		 = ЗаказДопИнф;
		ОбработкаПечати.ПротоколРасчетов = ЗаказДопИнф.ПротоколРасчетов;
		ОбработкаПечати.ФоновыйРежим	 = ложь;
		
		ПечатьОК = ОбработкаПечати.ПечатьКопииЧекаВозврата(пЗаказ);
		глОжидание.Конец();
	КонецЕсли;
КонецПроцедуры

// < КС_ВДВ ------------------------------------------------------------ 
ЦветПейджер			= ЦветаСтиля.ЦветФона2;
ЦветПриготовление	= ЦветаСтиля.ЦветФона5;
ЦветКВыдаче			= ЦветаСтиля.ЦветФона6;
// КС_ВДВ > ------------------------------------------------------------ 