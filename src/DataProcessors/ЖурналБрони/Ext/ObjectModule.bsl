
#Если Клиент Тогда

Перем ФормаЖурнала;          // форма из которой идет работа с журналом

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Вызывается из обработчика ПередОткрытием форм этой обработки,
// выполняет инициализацию рабочего места
//
Процедура ДействияПередОткрытиемФормы(ТекущаяФорма, Отказ) Экспорт
	
	ФормаЖурнала = ТекущаяФорма;
	ФормаЖурнала.Стиль = БиблиотекаСтилей[глПараметрыРМ.ИмяСтиля];
	
	ЖурналБрони.Отбор.ПометкаУдаления.Установить(Ложь);
	ЖурналБрони.Отбор.Закрыто.Установить(Ложь);
	
	ЖурналБрони.Отбор.ВремяНачала.Значение = ТекущаяДата() - 60*60*24;
	ЖурналБрони.Отбор.ВремяНачала.ВидСравнения = ВидСравнения.БольшеИлиРавно;
	ЖурналБрони.Отбор.ВремяНачала.Использование = Истина;
	
КонецПроцедуры

// Вызывается из обработчика ПередЗакрытием форм этой обработки,
//
Процедура ДействияПередЗакрытиемФормы(ТекущаяФорма, Отказ) Экспорт
	
	ФормаЖурнала = Неопределено; // иначе объект обработки остается в памяти и работают обработчики ожидания
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Открытие формы нового заказа
//
// Параметры:
//	Параметр1	- описание параметра
//
Процедура ОткрытьБронь(ТекущийДокумент=Неопределено) Экспорт
	
	ФормаБрони = ИнтерфейсРМ.ПолучитьОбъектОбработки("РежимБрони").ПолучитьФорму();
	ФормаБрони.ТекущаяБронь = ТекущийДокумент;
	ФормаБрони.Открыть();
	
КонецПроцедуры

// По кнопке Выбрать или из обработчика Выбор табличного поля
//
Процедура ОбработкаВыбораСтроки() Экспорт
	
	СтрокаЖурнала = ФормаЖурнала.ЭлементыФормы.ЖурналБрони.ТекущаяСтрока;
	Если СтрокаЖурнала=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьБронь(СтрокаЖурнала);
	
КонецПроцедуры

// Процедура удаления заказа
//
Процедура УдалитьБронь() Экспорт
	
	СтрокаЖурнала = ФормаЖурнала.ЭлементыФормы.ЖурналБрони.ТекущаяСтрока;
	Если СтрокаЖурнала=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СуммаПредоплаты = НакопленияКлиента(СтрокаЖурнала.Клиент,СтрокаЖурнала.Ссылка).СуммаБезнал;
	Если СуммаПредоплаты > 0 Тогда
		Текст1="Есть предоплата!";
		Текст2="По этой брони есть предоплата!
				|Сначала надо ее вернуть.";
		ИнтерфейсРМ.ВопросПредупреждение("Предупреждение",Текст1,Текст2,"","ОК","");
		Возврат;
	КонецЕсли; 
	
	// можно удалять, если не передумают
	Текст1 = "Удаление брони!";
	Текст2 = "Документ будет удален!";
	Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"ОК","","Esc=Отмена")="Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	Бронь = СтрокаЖурнала.ПолучитьОбъект();
	Бронь.ПометкаУдаления = Истина;
	Если НЕ ИнтерфейсРМ.ПопыткаДействияСОбъектом( Бронь, "Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения)" ) Тогда
		Возврат;
	КонецЕсли;
	
	ИнтерфейсРМ.ЗаписьСобытия(Справочники.События.БроньУдаление, Бронь.Ссылка, Бронь.Номер, НаимПосадочногоМеста(Бронь.ПосадочныеМеста[0].ПосадочноеМесто) );
	
	ОбновитьЖурнал();
	
КонецПроцедуры

// Поиск заказа по номеру
//
Процедура НайтиБроньПоНомеру() Экспорт
	
	НомерДок = ИнтерфейсРМ.ВводЧисла("Номер брони", "Число", 6, 0 );
	Если НомерДок=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерДок = Формат(НомерДок,"ЧЦ=6;ЧВН=;ЧГ=0");
	
	Бронь = Документы.Бронь.НайтиПоНомеру(НомерДок);
	
	Если Бронь.Пустая() ИЛИ Бронь.ПометкаУдаления Тогда
		Текст1="Бронь не найдена!";
		Текст2="Бронь № "+НомерДок+" не найдена...";
		ИнтерфейсРМ.ВопросПредупреждение("Предупреждение",Текст1,Текст2,"","ОК","");
		Возврат;
	КонецЕсли;
	
	ОткрытьБронь(Бронь);
	
КонецПроцедуры

// Описание процедуры
//
Процедура ОбновитьЖурнал(ТекущийДокумент=Неопределено) Экспорт
	
	ЖурналБрони.Обновить();
	
	Если ЗначениеЗаполнено(ТекущийДокумент) Тогда
		ФормаЖурнала.ЭлементыФормы.ЖурналБрони.ТекущаяСтрока = ТекущийДокумент;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#КонецЕсли