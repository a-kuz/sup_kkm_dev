////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ФормаКнопки;
Перем ТаблицаМоделей;
Перем Раскладка;
Перем мКаталогТоваров;

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ

// Процедура загружает сохраненные параметры настройки
//
Процедура ЗагрузитьПараметрыНастройки() Экспорт
	
	Перем ТЗ;
	
	ПараметрыНастройки = ТекущаяНастройка.ПолучитьОбъект().ПолучитьСтруктуруПараметров();
	
	ПараметрыНастройки.Свойство("КаталогТоваров"		, КаталогТоваров);
	мКаталогТоваров = КаталогТоваров;
	
	ПараметрыНастройки.Свойство("Модель"				, Модель);
	ПриИзмененииМодели();
	
	ПараметрыНастройки.Свойство("КоличествоРядов"		, КоличествоРядов);
	ПараметрыНастройки.Свойство("КоличествоСтолбцов"	, КоличествоСтолбцов);
	ПараметрыНастройки.Свойство("ВысотаКнопки"			, ВысотаКнопки);
	ПараметрыНастройки.Свойство("ШиринаКнопки"			, ШиринаКнопки);
	ПараметрыНастройки.Свойство("УпрКомбинацияКлавиш"	, УпрКомбинацияКлавиш);
	ПараметрыНастройки.Свойство("ДлинаКода"				, ДлинаКода);
	
	// раскладка
	ПараметрыНастройки.Свойство("Раскладка", ТЗ);
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда	
		Раскладка.Очистить();
		Для Каждого СтрокаТаблицы Из ТЗ Цикл
			НоваяСтрока = Раскладка.Добавить();
			Адрес = АдресКнопки(СтрокаТаблицы.НомерКнопки);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			ЗагрузитьТовары(СтрокаТаблицы.МассивТоваров, Адрес);
		КонецЦикла;
	КонецЕсли;
	ВывестиРаскладку();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

// Функция возвращает структуру параметров настройки
//
Функция СформироватьПараметрыНастройки()
	
	ПараметрыНастройки = Новый Структура;
	ПараметрыНастройки.Вставить("КаталогТоваров"		, КаталогТоваров);
	ПараметрыНастройки.Вставить("Раскладка"				, СформироватьРаскладку());
	ПараметрыНастройки.Вставить("Модель"				, Модель);
	ПараметрыНастройки.Вставить("КоличествоРядов"		, КоличествоРядов);
	ПараметрыНастройки.Вставить("КоличествоСтолбцов"	, КоличествоСтолбцов);
	ПараметрыНастройки.Вставить("ВысотаКнопки"			, ВысотаКнопки);
	ПараметрыНастройки.Вставить("ШиринаКнопки"			, ШиринаКнопки);
	ПараметрыНастройки.Вставить("УпрКомбинацияКлавиш"	, УпрКомбинацияКлавиш);
	ПараметрыНастройки.Вставить("ДлинаКода"				, ДлинаКода);
	
	Возврат ПараметрыНастройки;
	
КонецФункции

// Процедура формирует таблицу Раскладки
// 
Функция СформироватьРаскладку()
	
	Раскладка.Очистить();
	Сч = 1;
	НомерКнопки = 1;
	Пока Сч <> КоличествоРядов+1 Цикл
		Сч2 = 1;
		Пока Сч2 <> КоличествоСтолбцов+1 Цикл
			Адрес	= "R"+Сч+"C"+СЧ2;
			Область = ЭлементыФормы.Таблица.Область(Адрес);
			
			НоваяСтрока = Раскладка.Добавить();
			НоваяСтрока.Текст 						= Область.Текст;
			НоваяСтрока.ЦветТекста 					= Область.ЦветТекста;
			НоваяСтрока.ЦветФона 					= Область.ЦветФона;
			НоваяСтрока.ДобавлятьВсеПозицииСразу 	= Область.ПараметрРасшифровки = "истина";
			НоваяСтрока.НомерКнопки 				= НомерКнопки;
			НоваяСтрока.МассивТоваров				= ВыбратьТовары(Адрес);
			
			НомерКнопки = НомерКнопки + 1;
			Сч2 = Сч2 + 1;
		КонецЦикла;
		Сч = Сч + 1;
	КонецЦикла;
	
	Возврат Раскладка;
	
КонецФункции

// Функция выбирает товары из ТЧ товары, соответствующие определенной кнопке
//
Функция ВыбратьТовары(Адрес)
	
	МассивТоваров = Новый Массив;
	МассивСтрок = Товары.НайтиСтроки( Новый Структура("ИмяЯчейки", Адрес) );
	
	Для Каждого Стр Из МассивСтрок Цикл
		Если ЗначениеЗаполнено(Стр.Товар) Тогда
			МассивТоваров.Добавить(Стр.Товар);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивТоваров;
КонецФункции

// Процедура загружает товары кнопки в ТЧ товары
//
Процедура ЗагрузитьТовары(МассивТоваров, ИмяКнопки)
	
	Для Каждого Стр Из МассивТоваров Цикл
		Если Стр = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.ИмяЯчейки	= ИмяКнопки;
		НоваяСтрока.Товар		= Стр;
	КонецЦикла
	
КонецПроцедуры

// Функция записывает настройки раскладки
//
Функция ЗаписатьНастройку(БезВопросов=Ложь)
	
	Если НЕ Модифицированность Тогда
		Возврат Истина;
	КонецЕсли; 
	
	Если БезВопросов Тогда
		Ответ = КодВозвратаДиалога.Да;
	Иначе
		Ответ = Вопрос("Записать текущую настройку?", РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат Ложь;
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		Настройка = ТекущаяНастройка.ПолучитьОбъект();
		Настройка.Параметры	= ЗначениеВСтрокуВнутр( СформироватьПараметрыНастройки() );
		Настройка.Записать();
		Модифицированность = Ложь;
		
	Иначе
		ЗагрузитьПараметрыНастройки();
		
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

// Процедура выполняет необходимые действия при изменении одного из параметров
//
Процедура ПриИзмененииПараметра(Элемент)
	
	Раскладка = СформироватьРаскладку();
	ВывестиРаскладку();
	
КонецПроцедуры //ПриИзмененииПараметра()

// Процедура выводит Раскладку в табличный документ
//
Процедура ВывестиРаскладку()
	
	ЭлементыФормы.Таблица.Очистить();
	ОбластьТаблицы 							= ЭлементыФормы.Таблица.Область(1,1,КоличествоРядов,КоличествоСтолбцов);
	ОбластьТаблицы.РазмещениеТекста 		= ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ОбластьТаблицы.ГоризонтальноеПоложение 	= ГоризонтальноеПоложение.Центр;
	ОбластьТаблицы.ВертикальноеПоложение	= ВертикальноеПоложение.Центр;
	ОбластьТаблицы.ВысотаСтроки 			= ВысотаКнопки*2.935;
	ОбластьТаблицы.ШиринаКолонки 			= ШиринаКнопки*0.565;
	Сч = 1;
	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
	Пока Сч <> КоличествоРядов+1 Цикл
		Область = ЭлементыФормы.Таблица.Область(Сч,1,Сч+1,КоличествоСтолбцов);
		Область.ГраницаСверху = Линия;
		Сч = Сч + 1;
	КонецЦикла;
	
	Сч = 1;
	Пока Сч <> КоличествоСтолбцов+1 Цикл
		Область = ЭлементыФормы.Таблица.Область(1,Сч, КоличествоРядов,Сч+1);
		Область.ГраницаСлева = Линия;
		Сч = Сч + 1;
	КонецЦикла;
	
	Таблица = ЭлементыФормы.Таблица;
	КоличествоЯчеек = КоличествоРядов*КоличествоСтолбцов;
	Для Каждого СтрокаТаблицы Из Раскладка Цикл
		Если Сч = КоличествоЯчеек ИЛИ КоличествоЯчеек = 0 Тогда
			Прервать;
		КонецЕсли;
		Адрес 								= АдресКнопки(СтрокаТаблицы.НомерКнопки);
		ОбластьКнопки 						= Таблица.Область(Адрес);
		ОбластьКнопки.Текст 				= СтрокаТаблицы.Текст;
		ОбластьКнопки.ЦветТекста 			= СтрокаТаблицы.ЦветТекста;
		ОбластьКнопки.ЦветФона 				= СтрокаТаблицы.ЦветФона;
		ОбластьКнопки.Шрифт 				= СтрокаТаблицы.Шрифт;
		ОбластьКнопки.ПараметрРасшифровки 	= СтрокаТаблицы.ДобавлятьВсеПозицииСразу;
		Сч = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры //ВывестиРаскладку()

// Функция получает адрес кнопки по номеру
//
Функция АдресКнопки(НомерКнопки)
	
	НомР = Цел(НомерКнопки/КоличествоСтолбцов)+1;
	НомС = НомерКнопки%КоличествоСтолбцов;
	
	Если НомС = 0 Тогда
		НомС = КоличествоСтолбцов;
		НомР = НомР-1;
	КонецЕсли;
	
	Возврат "R" + НомР + "C" + НомС;
	
КонецФункции //АдресКнопки()

// Процедура выполняет необходимые действия при изменении Модели
//
Процедура ПриИзмененииМодели()
	
	СтрокаМодели = ТаблицаМоделей.Найти(Модель);
	
	Если НЕ СтрокаМодели = Неопределено Тогда
		КоличествоРядов 	= СтрокаМодели.КолВоРядов;
		КоличествоСтолбцов 	= СтрокаМодели.КолВоСтолбцов;
		ВысотаКнопки 		= СтрокаМодели.ВысотаКнопки;
		ШиринаКнопки 		= СтрокаМодели.ШиринаКнопки;
		
		Если СтрокаМодели.Модель = "Другая..." Тогда
			ЭлементыФормы.КоличествоРядов.ТолькоПросмотр 	= Ложь;
			ЭлементыФормы.КоличествоСтолбцов.ТолькоПросмотр = Ложь;
			ЭлементыФормы.ВысотаКнопки.ТолькоПросмотр 		= Ложь;
			ЭлементыФормы.ШиринаКнопки.ТолькоПросмотр 		= Ложь;	
		Иначе
			ЭлементыФормы.КоличествоРядов.ТолькоПросмотр 	= Истина;
			ЭлементыФормы.КоличествоСтолбцов.ТолькоПросмотр = Истина;
			ЭлементыФормы.ВысотаКнопки.ТолькоПросмотр 		= Истина;
			ЭлементыФормы.ШиринаКнопки.ТолькоПросмотр 		= Истина;					
		КонецЕсли;
		
	КонецЕсли;
	
	УпрКомбинацияКлавиш = "Ctrl+Shift+Ins";
	ДлинаКода = 3;
	
	Раскладка = СформироватьРаскладку();
	ВывестиРаскладку();
	
КонецПроцедуры

// Процедура заполняет необходимые начальные настройки
//
Процедура ЗаполнитьНачальныеНастройки()
	
	КомбинацияКлавиш = Новый СписокЗначений;
	КомбинацияКлавиш.Добавить("Ctrl+Shift+Ins");
	ЭлементыФормы.УпрКомбинацияКлавиш.СписокВыбора = КомбинацияКлавиш;
	
	Раскладка = Новый ТаблицаЗначений;
	Раскладка.Колонки.Добавить("Текст");
	Раскладка.Колонки.Добавить("Шрифт");
	Раскладка.Колонки.Добавить("ЦветТекста");
	Раскладка.Колонки.Добавить("ЦветФона");
	Раскладка.Колонки.Добавить("ДобавлятьВсеПозицииСразу");
	Раскладка.Колонки.Добавить("НомерКнопки");
	Раскладка.Колонки.Добавить("МассивТоваров");
	
	ТаблицаМоделей = Новый ТаблицаЗначений;
	ТаблицаМоделей.Колонки.Добавить("Модель");
	ТаблицаМоделей.Колонки.Добавить("КолВоРядов");
	ТаблицаМоделей.Колонки.Добавить("КолВоСтолбцов");
	ТаблицаМоделей.Колонки.Добавить("ВысотаКнопки");
	ТаблицаМоделей.Колонки.Добавить("ШиринаКнопки");
	
	НоваяСтрока 				= ТаблицаМоделей.Добавить();
	НоваяСтрока.Модель 			= "KB99-105";
	НоваяСтрока.КолВоРядов 		= 7;
	НоваяСтрока.КолВоСтолбцов 	= 8;
	НоваяСтрока.ВысотаКнопки 	= 13;
	НоваяСтрока.ШиринаКнопки 	= 13;
	
	НоваяСтрока 				= ТаблицаМоделей.Добавить();
	НоваяСтрока.Модель 			= "KB99_128M";
	НоваяСтрока.КолВоРядов 		= 8;
	НоваяСтрока.КолВоСтолбцов 	= 9;
	НоваяСтрока.ВысотаКнопки 	= 13;
	НоваяСтрока.ШиринаКнопки 	= 13;
	
	НоваяСтрока 				= ТаблицаМоделей.Добавить();
	НоваяСтрока.Модель 			= "KB99_128P";
	НоваяСтрока.КолВоРядов 		= 8;
	НоваяСтрока.КолВоСтолбцов 	= 9;
	НоваяСтрока.ВысотаКнопки 	= 17;
	НоваяСтрока.ШиринаКнопки 	= 18;
	
	НоваяСтрока 				= ТаблицаМоделей.Добавить();
	НоваяСтрока.Модель 			= "Posiflex_3100";
	НоваяСтрока.КолВоРядов 		= 8;
	НоваяСтрока.КолВоСтолбцов 	= 7;
	НоваяСтрока.ВысотаКнопки 	= 13;
	НоваяСтрока.ШиринаКнопки 	= 18;
	
	НоваяСтрока 				= ТаблицаМоделей.Добавить();
	НоваяСтрока.Модель 			= "Другая...";
	НоваяСтрока.КолВоРядов 		= 10;
	НоваяСтрока.КолВоСтолбцов 	= 10;
	НоваяСтрока.ВысотаКнопки 	= 10;
	НоваяСтрока.ШиринаКнопки 	= 10;
	
	СписокМоделей = ТаблицаМоделей.ВыгрузитьКолонку("Модель");
	ЭлементыФормы.Модель.СписокВыбора.ЗагрузитьЗначения(СписокМоделей);
	
	УпрКомбинацияКлавиш = "Ctrl+Shift+Ins";
	ДлинаКода = 3;
	
КонецПроцедуры

// Функция получает номер первой строки привязки для кнопки
Функция ПолучитьНомерПервойСтрокиПривязки()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.ИмяЯчейки
	|ПОМЕСТИТЬ Таб
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таб.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Таб КАК Таб
	|ГДЕ
	|	Таб.ИмяЯчейки = &ИмяЯчейки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Товары"		, Товары);
	Запрос.УстановитьПараметр("ИмяЯчейки"	, ЭлементыФормы.Таблица.ТекущаяОбласть.Имя);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НомерСтроки;
	Иначе
		Возврат -1;
	КонецЕсли;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ЗаполнитьНачальныеНастройки();
	мКаталогТоваров = КаталогТоваров;
	ВывестиРаскладку();
	
КонецПроцедуры

// Процедура - обработчик события ПередЗакрытием формы.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = НЕ ЗаписатьНастройку();
	
КонецПроцедуры

// Процедура - обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()
	
	Доступность = ЗначениеЗаполнено(ТекущаяНастройка);
	
	ЭлементыФормы.КнопкаПереименовать.Доступность 	= Доступность;
	ЭлементыФормы.КнопкаЗаписать.Доступность 		= Доступность;
	ЭлементыФормы.КнопкаУдалить.Доступность 		= Доступность;
	ЭлементыФормы.ПанельНастройки.Доступность		= Доступность;		
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события НачалоВыбора поля ТекущаяНастройка
//
Процедура ТекущаяНастройкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗаписатьНастройку() Тогда
		Возврат;
	КонецЕсли;
	
	СписокВидов = Новый СписокЗначений;
	СписокВидов.Добавить("СпецКВ");
	Если тоВыбратьИзСпискаТО(СписокВидов, ЭтаФорма, Элемент) <> Неопределено Тогда
		Раскладка.Очистить();
		Товары.Очистить();
		ЗагрузитьПараметрыНастройки();
	КонецЕсли;
	
	ЭлементыФормы.Таблица.ТекущаяОбласть = ЭлементыФормы.Таблица.Область("R1C1");
	
КонецПроцедуры //ТекущаяНастройкаНачалоВыбора()

// Процедура - обработчик нажатия кнопки НоваяНастройка
//
Процедура КнопкаНоваяНастройкаНажатие(Элемент)
	
	Если НЕ ЗаписатьНастройку() Тогда
		Возврат;
	КонецЕсли;
	
	НазваниеНастройки = "";
	Если НЕ ВвестиСтроку(НазваниеНастройки, "Название настройки") ИЛИ ПустаяСтрока(НазваниеНастройки) Тогда
		Возврат;
	КонецЕсли; 
	
	Раскладка.Очистить();
	Товары.Очистить();
	ВывестиРаскладку();
	//Модифицированность = Ложь;
	
	Настройка = Справочники.ТорговоеОборудование.СоздатьЭлемент();
	Настройка.УстановитьНовыйКод();
	Настройка.Наименование	= НазваниеНастройки;
	Настройка.КодВида		= "СпецКВ";
	Настройка.КодМодели		= "";
	Настройка.КодВерсии		= "";
	Настройка.ТипПрофиля	= 1;
	Настройка.ИмяОбработки	= "Обслуживание_СпецКВ";
	
	Если ЭлементыФормы.Модель.СписокВыбора.Количество() > 0 Тогда
		Модель = ЭлементыФормы.Модель.СписокВыбора[0].Значение;    // подставим первую в списке модель
	КонецЕсли;
	ПриИзмененииМодели();
	Настройка.Записать();
	ТекущаяНастройка = Настройка.Ссылка;
	
	ЭлементыФормы.ПанельНастройки.ТекущаяСтраница = ЭлементыФормы.ПанельНастройки.Страницы.ПараметрыКлавиатуры;
	Модифицированность = Истина;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки Переименовать
//
Процедура КнопкаПереименоватьНажатие(Элемент)
	
	НазваниеНастройки = ТекущаяНастройка.Наименование;
	Если НЕ ВвестиСтроку(НазваниеНастройки, "Название настройки") Тогда
		Возврат;
	КонецЕсли; 
	
	Настройка = ТекущаяНастройка.ПолучитьОбъект();
	Настройка.Наименование	= НазваниеНастройки;
	Настройка.Записать();
	
	ТекущаяНастройка = Настройка.Ссылка;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки Записать
//
Процедура КнопкаЗаписатьНажатие(Элемент)
	
	Модифицированность = Истина;
	ЗаписатьНастройку(Истина);
	
КонецПроцедуры //КнопкаЗаписатьНажатие()

// Процедура - обработчик нажатия кнопки Удалить
//
Процедура КнопкаУдалитьНажатие(Элемент)
	
	Если Вопрос("Удалить текущую настройку?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли; 
	
	ТекущаяНастройка.ПолучитьОбъект().Удалить();
	ТекущаяНастройка = Неопределено;
	
	Модифицированность = Ложь;
	
КонецПроцедуры //КнопкаУдалитьНажатие()

// Процедура - обработчик нажатия кнопки Печать
//
Процедура ПечатьНажатие(Элемент)
	ЭлементыФормы.Таблица.Напечатать(Ложь);
КонецПроцедуры //ПечатьНажатие()

// Процедура - обработчик нажатия кнопки ОчиститьПривязки
//
Процедура КнопкаОчиститьПривязкиНажатие(Элемент)
	
	Если Вопрос("Очистить раскладку полностью?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли; 
	
	Раскладка.Очистить();
	Товары.Очистить();
	ВывестиРаскладку();
	Модифицированность = Истина;
	
КонецПроцедуры

// Процедура - обработчик события ПриАктивизацииОбласти табличного документа Таблица
//
Процедура ТаблицаПриАктивизацииОбласти(Элемент)
	
	ТекОбласть 					= Элемент.ТекущаяОбласть;
	ЦветФона 					= ТекОбласть.ЦветФона;
	ЦветОсновногоТекста			= ТекОбласть.ЦветТекста;
	ДобавлятьВсеПозицииСразу 	= ?(ТекОбласть.ПараметрРасшифровки = "истина", Истина, Ложь);
	ЭлементыФормы.Товары.ОтборСтрок.ИмяЯчейки.Значение 		= ТекОбласть.Имя;
	ЭлементыФормы.Товары.ОтборСтрок.ИмяЯчейки.Использование = Истина;
	Если Найти(ТекОбласть.Имя, ":") <> 0 Тогда
		ЭлементыФормы.Товары.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанельТовары.Кнопки.Подбор.Доступность = Ложь;
	Иначе
		ЭлементыФормы.Товары.ТолькоПросмотр = Ложь;
		ЭлементыФормы.КоманднаяПанельТовары.Кнопки.Подбор.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры //ТаблицаПриАктивизацииОбласти()

// Процедура - обработчик события ПриИзменении поля ввода ЦветОсновногоТекста
//
Процедура ЦветОсновногоТекстаПриИзменении(Элемент)
	ЭлементыФормы.Таблица.ТекущаяОбласть.ЦветТекста = ЦветОсновногоТекста;
КонецПроцедуры //ЦветОсновногоТекстаПриИзменении()

// Процедура - обработчик события ПриИзменении поля ввода Модель
//
Процедура МодельПриИзменении(Элемент)
	
	ПриИзмененииМодели();
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода ЦветФона
//
Процедура ЦветФонаПриИзменении(Элемент)
	ЭлементыФормы.Таблица.ТекущаяОбласть.ЦветФона = ЦветФона;
КонецПроцедуры //ЦветФонаПриИзменении()

// Процедура - обработчик события ПриИзменении поля ввода ШрифтОсновногоТекста
//
Процедура ШрифтОсновногоТекстаПриИзменении(Элемент)
	ЭлементыФормы.Таблица.ТекущаяОбласть.Шрифт = ШрифтОсновногоТекста;
КонецПроцедуры //ШрифтОсновногоТекстаПриИзменении()

// Процедура - обработчик события ПриИзменении поля ввода КаталогТоваров.
//
Процедура КаталогТоваровПриИзменении(Элемент)
	
	Если Товары.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстВопроса = "При изменении все привязки будут очищены!";
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.ОК Тогда	
		Товары.Очистить();
		Раскладка.Очистить();
		ВывестиРаскладку();
	Иначе
		КаталогТоваров = мКаталогТоваров;
	КонецЕсли;
	
КонецПроцедуры //КаталогТоваровПриИзменении()

// Процедура - обработчик события ПриИзменении флага ДобавлятьВсеПозицииСразу
//
Процедура ДобавлятьВсеПозицииСразуПриИзменении(Элемент)
	ЭлементыФормы.Таблица.ТекущаяОбласть.ПараметрРасшифровки = ДобавлятьВсеПозицииСразу;
КонецПроцедуры //ДобавлятьВсеПозицииСразуПриИзменении()

// Обработчик события ПриНачалеРедактирования табличного поля Товары
//
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ЭлементыФормы.Товары.ТекущиеДанные.ИмяЯчейки = ЭлементыФормы.Таблица.ТекущаяОбласть.Имя;
	КонецЕсли;
КонецПроцедуры //ТоварыПриНачалеРедактирования()

// Обработчик события ПриВыводеСтроки табличного поля Товары
//
Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
	Если ДанныеСтроки.Товар.ЭтоГруппа Тогда
		Если ДанныеСтроки.Товар.ПометкаУдаления Тогда
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 1;
		Иначе
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 0;
		КонецЕсли;			
	ИначеЕсли ДанныеСтроки.Товар.ПометкаУдаления Тогда
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 3;
	Иначе
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 2;
	КонецЕсли;
	
КонецПроцедуры //ТоварыПриВыводеСтроки()

// Обработчик события ОбработкаВыбора табличного поля Товары
//
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НоваяСтрока = Товары.Добавить();	
	НоваяСтрока.Товар		= ВыбранноеЗначение;
	НоваяСтрока.ИмяЯчейки	= ЭлементыФормы.Таблица.ТекущаяОбласть.Имя;
	Если НоваяСтрока.НомерСтроки = ПолучитьНомерПервойСтрокиПривязки() Тогда
		ЭлементыФормы.Таблица.ТекущаяОбласть.Текст = НоваяСтрока.Товар.Наименование;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события НачалоВыбора поля ввода Наименование
//
Процедура ТоварыНаименованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Форма = Справочники.Товары.ПолучитьФормуВыбора(,Элемент);
	Форма.ИспользоватьПереданныеНастройки = Истина;
	Форма.Отбор.Владелец.Установить(КаталогТоваров);
	Форма.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
	Форма.ЭлементыФормы.НадписьТекущийКаталог.Доступность = Ложь;
	Форма.Открыть();
	
КонецПроцедуры

// Обработчик события ПриИзменении поля ввода Наименование
//
Процедура ТоварыНаименованиеПриИзменении(Элемент)
	
	Если ЭлементыФормы.Товары.ТекущиеДанные.Товар.Владелец <> КаталогТоваров Тогда
		Сообщить("Данный товар не может быть выбран!");
		ЭлементыФормы.Товары.ТекущиеДанные.Товар = Справочники.Товары.ПустаяСсылка();
	КонецЕсли;
	
	Если ЭлементыФормы.Товары.ТекущиеДанные.НомерСтроки = ПолучитьНомерПервойСтрокиПривязки()Тогда
		ЭлементыФормы.Таблица.ТекущаяОбласть.Текст = ЭлементыФормы.Товары.ТекущиеДанные.Товар.Наименование;
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Подбор" командной панели табличного поля "Товары"
//
Процедура КоманднаяПанельТоварыПодбор(Кнопка)
	
	Форма 							= Справочники.Товары.ПолучитьФормуВыбора(,ЭлементыФормы.Товары);
	Форма.ЗакрыватьПриВыборе 		= Ложь;
	Форма.ФормаОткрытаДляВыбора 	= Истина;
	Форма.ИспользоватьПереданныеНастройки = Истина;
	Форма.Отбор.Владелец.Установить(КаталогТоваров);
	Форма.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
	Форма.ЭлементыФормы.НадписьТекущийКаталог.Доступность = Ложь;
	Форма.Открыть();
	
КонецПроцедуры //КоманднаяПанельТоварыПодбор()





