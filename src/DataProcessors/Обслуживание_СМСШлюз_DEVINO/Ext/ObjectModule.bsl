Перем URI;		             // URI пространства имен сервиса
Перем СМС_Сервис;		     // Объект для доступа к функциям смс-сервиса
Перем ПараметрыТО Экспорт;   // Параметры торгового оборудования.
Перем Результат Экспорт;     // Результат выполнения действия.

#Если ТолстыйКлиентОбычноеПриложение Тогда
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Выполняет обработку ошибок ТО.
//
// Возвращаемое значение:
//  Истина - есть ошибка, ложь - нет.
//
Функция Ошибка(Описание, Подробно, ЗаписыватьВЖурнал = Истина) Экспорт
		
	Если ЗаписыватьВЖурнал Тогда
		ЗаписьЖурналаРегистрации("Торговое оборудование.Ошибка",
								УровеньЖурналаРегистрации.Предупреждение,
								,
								ТО.Ссылка,
								Строка(Описание));
	КонецЕсли;								
								
	Результат.Ошибка	= Истина;
	Результат.Описание	= "Ошибка обмена с шлюзом смс: " + Описание;
	Результат.Подробно	= СокрЛП(Подробно);
		
	Возврат Истина;
		
КонецФункции

// Производит инициализацию торгового оборудования.
//
Процедура Инициализация() Экспорт
	
	//Если ПараметрыТО.Количество() = 0 Тогда
	//	Результат.Ошибка	= Истина;
	//	Результат.Описание	= "Для данного профиля пользователя параметры не настроены!";
	//	Результат.Подробно	= "Для данного профиля пользователя параметры не настроены!";
	//	Возврат;
	//КонецЕсли;

	Попытка
		СМС_Сервис = WSСсылки.SMS_Сервис_devinosms_com.СоздатьWSПрокси(URI, "DEVINO", "DEVINOSoap");
	Исключение
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Ошибка подключения к веб-сервису!";
		Результат.Подробно	= "Ошибка подключения к веб-сервису streamsms!";
		Возврат;
	КонецПопытки;
	
	ПрочитатьПараметр("Логин"      , "");
	ПрочитатьПараметр("Пароль"     , "");
	ПрочитатьПараметр("Отправитель", "");
		
КонецПроцедуры

// Выполняет чтение параметра ТО.
//
// Параметры:
//  ИмяПараметра        - имя параметра,
//  ЗначениеПоУмолчанию - значение по умолчанию для данного параметра.
//
// Возвращаемое значение:
//  Значение параметра или значение по умолчанию
//
Процедура ПрочитатьПараметр(ИмяПараметра, ЗначениеПоУмолчанию)
	
	Если НЕ ПараметрыТО.Свойство(ИмяПараметра) Тогда
		ПараметрыТО.Вставить(ИмяПараметра, ЗначениеПоУмолчанию);
	КонецЕсли; 
	
	ЭтотОбъект[ИмяПараметра] = ПараметрыТО[ИмяПараметра];
	
КонецПроцедуры

// Выполняет действие с ТО.
//
// Параметры:
//  Действие - имя действия,
//  ПараметрыДействия - произвольный набор параметров, туда же присваивается возвращаемое значение функции.
//
Функция ВыполнитьДействие(Действие, ПараметрыДействия) Экспорт
	
	Перем Получатели, ПерсональныеСообщения, Баланс, ОтправкаСообщенияИзРМ;
	
	Если Действие = "ОтправитьСМС" Тогда
		
		Если Не ПараметрыДействия.Свойство("Получатели", Получатели) Тогда
			Получатели = Новый ТаблицаЗначений;
		КонецЕсли;
		
		Если Не ПараметрыДействия.Свойство("ПерсональныеСообщения", ПерсональныеСообщения) Тогда
			ПерсональныеСообщения = Ложь;
		КонецЕсли;

		Если Не ПараметрыДействия.Свойство("ОтправкаСообщенияИзРМ", ОтправкаСообщенияИзРМ) Тогда
			ОтправкаСообщенияИзРМ = Ложь;
		КонецЕсли;
		
		ОтправитьСМС(Получатели, ПерсональныеСообщения, ОтправкаСообщенияИзРМ);
		
	ИначеЕсли Действие = "ПолучитьСтатусыСМС" Тогда
		
		Если Не ПараметрыДействия.Свойство("Получатели", Получатели) Тогда
			Получатели = Новый ТаблицаЗначений;
		КонецЕсли;

		ПолучитьСтатусыСМС(Получатели);
		
	ИначеЕсли Действие = "Баланс" Тогда
		
		УзнатьБаланс(Баланс);
		ПараметрыДействия = Баланс;
		
	Иначе
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Неизвестная команда!";
		Результат.Подробно	= "Команда """+Действие+""" не определена для "+ТО.Наименование;
		
	КонецЕсли;
	
	Возврат ПараметрыДействия;
	
КонецФункции

// Переводит на русский язык статус СМС
//
Функция ПоРусски(СтрокаEn)
	
	СтрокаRu = СтрокаEn;
	
	Если СтрокаEn = "Enqueued" Тогда
		СтрокаRu = "В очереди";
	ИначеЕсли СтрокаEn = "Sending" Тогда
		СтрокаRu = "Отправляется";
	ИначеЕсли СтрокаEn = "Delivered_To_Gateway" Тогда
		СтрокаRu = "Доставлено до смс-шлюза";
	ИначеЕсли СтрокаEn = "Sent" Тогда
		СтрокаRu = "Отправлено";
	ИначеЕсли СтрокаEn = "Delivered_To_Recipient" Тогда
		СтрокаRu = "Доставлено получателю";
	ИначеЕсли СтрокаEn = "Error_Invalid_Destination_Address" Тогда
		СтрокаRu = "Ошибка: неверный адрес назначения";
	ИначеЕсли СтрокаEn = "Error_Invalid_Source_Address" Тогда
		СтрокаRu = "Ошибка: неверный адрес отправителя";
	ИначеЕсли СтрокаEn = "Error_Incompatible_Destination" Тогда
		СтрокаRu = "Ошибка: несовместимый адрес назначения";
	ИначеЕсли СтрокаEn = "Error_Rejected" Тогда
		СтрокаRu = "Ошибка: отклонено";
	ИначеЕсли СтрокаEn = "Error_Expired" Тогда
		СтрокаRu = "Ошибка: истек срок действия";
	ИначеЕсли СтрокаEn = "Unknown" Тогда
		СтрокаRu = "Неизвестная ошибка";
	ИначеЕсли СтрокаEn = "Error_Not_Enough_Credits" Тогда
		СтрокаRu = "Ошибка: не достаточно кредитов";		
	ИначеЕсли СтрокаEn = "Error_Message_Rejected" Тогда
		СтрокаRu = "Ошибка: сообщение отклонено";
	ИначеЕсли СтрокаEn = "Error_SMS_User_Disabled" Тогда
		СтрокаRu = "Ошибка: смс-пользователь отключен";
	ИначеЕсли СтрокаEn = "Error_Invalid_MessageID" Тогда
		СтрокаRu = "Ошибка: неверный идентификатор сообщения";
	ИначеЕсли СтрокаEn = "Error_Invalid_Header" Тогда
		СтрокаRu = "Ошибка: недопустимый заголовок";
	ИначеЕсли СтрокаEn = "Error_Invalid_Header" Тогда
		СтрокаRu = "Ошибка: недопустимый заголовок";
	ИначеЕсли СтрокаEn = "Error_Invalid_Login" Тогда
		СтрокаRu = "Ошибка: некорректный логин";
	ИначеЕсли СтрокаEn = "Error_Invalid_Password" Тогда
		СтрокаRu = "Ошибка: некорректный пароль";
	ИначеЕсли СтрокаEn = "Error_Unauthorised_IP_Address" Тогда
		СтрокаRu = "Ошибка: несанкционированный ip-адрес";
	ИначеЕсли СтрокаEn = "Error_Invalid_Activation_Code" Тогда
		СтрокаRu = "Ошибка: неверный код активации";
	ИначеЕсли СтрокаEn = "Error_SMS_User_Not_Activated" Тогда
		СтрокаRu = "Ошибка: смс-пользователь не активен";
	ИначеЕсли СтрокаEn = "Error_Message_Queue_Full" Тогда
		СтрокаRu = "Ошибка: переполнена очередь сообщений";
	ИначеЕсли СтрокаEn = "Error_Gateway_Offline" Тогда
		СтрокаRu = "Ошибка: шлюз отключен";
	ИначеЕсли СтрокаEn = "Error_Gateway_Busy" Тогда
		СтрокаRu = "Ошибка: шлюз занят";
	ИначеЕсли СтрокаEn = "Error_Database_Offline" Тогда
		СтрокаRu = "Ошибка: база данных отключена";
	ИначеЕсли СтрокаEn = "Error_No_Messages_Selected" Тогда
		СтрокаRu = "Ошибка: не выбраны сообщения";
	ИначеЕсли СтрокаEn = "Error_Outbox_Empty" Тогда
		СтрокаRu = "Ошибка: пустое исходящее";
	КонецЕсли;	
	
	Возврат СтрокаRu;
	
КонецФункции

// Определяет количество частей конкретной СМС
//
//	Параметры:
//		ТекстСМС - (Тип:Строка) текст СМС-сообщения
//
//	Возвращаемое значение:
//		(Тип: Число) - количество частей
//
Функция КоличествоЧастейСМС(ТекстСМС)
		
	ДлинаСМС = СтрДлина(ТекстСМС);
	ДлинаОднойСМС = 160;
	                    
	Для Сч = 1 По ДлинаСМС Цикл
		ТекСимвол = Сред(ТекстСМС, Сч, 1);
		КодТекСимвола = КодСимвола(ТекСимвол);
		Если КодТекСимвола > 1039 И КодТекСимвола < 1104 Тогда
			ДлинаОднойСМС = 70;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	//КоличествоЧастей = 1;
	ОтношениеСМС = (ДлинаСМС/ДлинаОднойСМС);
	//Если ДлинаСМС > ДлинаОднойСМС Тогда
		Если ОтношениеСМС = Цел(ОтношениеСМС) Тогда
			КоличествоЧастей = Цел(ОтношениеСМС);
		Иначе
			КоличествоЧастей = Цел(ОтношениеСМС) + 1;
		КонецЕсли; 
	//КонецЕсли;
	
	Возврат КоличествоЧастей;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ РАБОТЫ С СМС-СЕРВИСОМ

// Получает текущий баланс
//
//	Возвращаемое значение:
//		(Тип: Строка) - статус выполнения функции, если "ОК" - функция выполнена удачно, в противном случае
//		возвращается описание ошибки
//
Процедура УзнатьБаланс(Баланс) Экспорт
	
	Перем Результат;
	
	Если (НЕ ЗначениеЗаполнено(Логин)) ИЛИ (НЕ ЗначениеЗаполнено(Пароль)) Тогда
		Ошибка("Необходимо указать логин и пароль", "Необходимо указать логин и пароль");
		Возврат;
	КонецЕсли;
		
	// Получение баланс
	Попытка
		СМС_Сервис.GetCreditBalance(Логин, Пароль, Результат, Баланс);
	Исключение
		Ошибка("Неудачная попытка интернет-соединения!", ОписаниеОшибки());	
		Возврат;
	КонецПопытки;
	
	// Обработка ответа от сервера
	Если Результат = "OK_Operation_Completed" Тогда
		Возврат;
	Иначе
		Ошибка(ПоРусски(Результат), Результат);		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Отправляет пакет СМС сообщений
//
//	Возвращаемое значение:
//		(Тип: Строка) - статус выполнения функции, если "ОК" - функция выполнена удачно, в противном случае
//		возвращается описание ошибки
//
Процедура ОтправитьСМС(Получатели, ПерсональныеСообщения, ОтправкаСообщенияИзРМ) Экспорт
	
	Перем Результат, ИдентификаторСообщения;
	
	Если НЕ ЗначениеЗаполнено(Отправитель) Тогда
		Отправитель = "StreamSMS";
	КонецЕсли;
	
	ОтчетОДоставке      = Ложь;
	ФлэшСообщение       = Ложь;
	ВремяЖизниСообщения = 10;
		
	Если ОтправкаСообщенияИзРМ Тогда
		глОжидание.Начало("Выполняется рассылка СМС.","
						|Пожалуйста, подождите...");
	КонецЕсли; 
					
	Если НЕ ПерсональныеСообщения Тогда
		
		ТекстСообщения = Получатели[0].ТекстСообщения;
		КоличествоЧастейСМС = КоличествоЧастейСМС(ТекстСообщения);
		Телефоны = "";
		СчТел = 0;
		Сч = 0;		
		КоличествоПолучателей = Получатели.Количество();
		НомерСтроки = 1;
		
		Для Каждого СтрокаТЧ Из Получатели Цикл
			
			Телефоны = Телефоны + СтрокаТЧ.МобТелефон + ", ";
			СчТел = СчТел + 1;
			
			Если СчТел = 2999 ИЛИ СтрокаТЧ.НомерСтроки = КоличествоПолучателей Тогда
				
				Телефоны = Лев(Телефоны, СтрДлина(Телефоны)-2);
				СчТел = 0;
				
				Попытка
					СМС_Сервис.SendTextMessage(Логин, Пароль, Телефоны, ТекстСообщения, 
												Отправитель, ОтчетОДоставке, ФлэшСообщение, 
												ВремяЖизниСообщения, Результат, ИдентификаторСообщения);
				Исключение
					Ошибка("Неудачная попытка интернет-соединения!", ОписаниеОшибки());		
					Возврат;
				КонецПопытки;
				
				Если Результат = "OK_Operation_Completed" И Не ОтправкаСообщенияИзРМ Тогда // Из рабочего места больше ничего делать не нужно	
					СписокИдентификаторовСМС = ИдентификаторСообщения.ПолучитьСписок("string");
					Для Счетчик = НомерСтроки ПО СтрокаТЧ.НомерСтроки Цикл
						Получатели[Счетчик-1].ИдентификаторСообщения = СписокИдентификаторовСМС[(Счетчик - НомерСтроки)*КоличествоЧастейСМС];
						Сч = Сч + 1;
					КонецЦикла;		
					//СтрокаТЧ.ИдентификаторСообщения = СписокИдентификаторовСМС[0];
				ИначеЕсли Не ОтправкаСообщенияИзРМ Тогда // Из рабочего места больше ничего делать не нужно
					Ошибка(ПоРусски(Результат), Результат);		
					Возврат;
				КонецЕсли;
				
				Телефоны = "";
				НомерСтроки = СтрокаТЧ.НомерСтроки;
				
			КонецЕсли;			
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаТЧ Из Получатели Цикл
						
			Попытка
				СМС_Сервис.SendTextMessage(Логин, Пароль, СтрокаТЧ.МобТелефон, СтрокаТЧ.ТекстСообщения, 
											Отправитель, ОтчетОДоставке, ФлэшСообщение, 
											ВремяЖизниСообщения, Результат, ИдентификаторСообщения);
			Исключение
                Ошибка("Неудачная попытка интернет-соединения!", ОписаниеОшибки());	
				Возврат;
			КонецПопытки;
						
			Если Результат = "OK_Operation_Completed" И Не ОтправкаСообщенияИзРМ Тогда  // Из рабочего места больше ничего делать не нужно	
				СписокИдентификаторовСМС = ИдентификаторСообщения.ПолучитьСписок("string");
				СтрокаТЧ.ИдентификаторСообщения = СписокИдентификаторовСМС[0];
			ИначеЕсли Не ОтправкаСообщенияИзРМ Тогда // Из рабочего места больше ничего делать не нужно
				Ошибка(ПоРусски(Результат), Результат);		
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОтправкаСообщенияИзРМ Тогда
		глОжидание.Конец();
	КонецЕсли;
		
	// отправка статистики
	
	Если Получатели.Количество() И Не ОтправкаСообщенияИзРМ Тогда
	
		Попытка
			Определения = Новый WSОпределения("http://websrv.softbal.spb.ru:8888/DalionStat/ws/softbalancesmsstat.1cws?wsdl", "webuser", "jCJFFxpXuEWyhMPO5of1");
				
			Прокси = Новый WSПрокси(Определения, "http://www.softbalance.ru/softbalancesmsstat", "SoftbalanceSMSStat", "SoftbalanceSMSStatSoap");
			Прокси.Пользователь = "webuser";
			Прокси.Пароль       = "jCJFFxpXuEWyhMPO5of1";

			Если глВерсия = 2 Тогда
				ProductID = 17;
			Иначе 
				ProductID = 18;
			КонецЕсли; 

			Рез = Прокси.SendSMSStatWithID(Логин, Получатели.Количество(), ProductID);
		Исключение
		КонецПопытки;
		
	КонецЕсли;
		
КонецПроцедуры

// Получает статусы СМС-сообщений
//
//	Возвращаемое значение:
//		(Тип: Строка) - статус выполнения функции, если "ОК" - функция выполнена удачно, в противном случае
//		возвращается описание ошибки
//
Процедура ПолучитьСтатусыСМС(Получатели) Экспорт
	
	Перем Результат, ДатаСМС, СтатусСМС;
	
	Для Каждого СтрокаТЧ Из Получатели Цикл
				
		// Получение ответа от сервера
		Попытка
			СМС_Сервис.GetMessageState(Логин, Пароль, СтрокаТЧ.ИдентификаторСообщения, 
										Результат, ДатаСМС, СтатусСМС);
		Исключение
			Ошибка("Неудачная попытка интернет-соединения!", ОписаниеОшибки());	
			Возврат;   
		КонецПопытки;
		
		// Обработка ответа от сервера
		Если Результат = "OK_Operation_Completed" Тогда
			СтрокаТЧ.СтатусСообщения = ПоРусски(СтатусСМС);
		Иначе
			Ошибка(ПоРусски(Результат), Результат);		
			Возврат;
		КонецЕсли;		
		
	КонецЦикла;	
	
	Возврат;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ТЕКСТ ОСНОВНОЙ ПРОГРАММЫ

Результат = Новый Структура("Ошибка,Описание,Подробно",Ложь,"","");

URI = "http://gw1.devinosms.com/WebService.asmx";


#КонецЕсли

