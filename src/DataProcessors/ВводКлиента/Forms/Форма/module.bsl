
Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна
Перем МассивСкидок;
Перем МассивБонусов;

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьСкидкиБонусы(СкидкаБонусы)
	
	МассивЗначений = ?(СкидкаБонусы="Бонусы", МассивБонусов, МассивСкидок);
	МассивЗначений.Очистить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ Ссылка ИЗ Справочник.Скидки
	|ГДЕ НЕ ПометкаУдаления 
	|"+?(глВерсия=2, "И НЕ ЭтоГруппа И Бонусная = &Бонусная",
					 "И ( (НЕ ЭтоГруппа И Бонусная = &Бонусная И ЕстьNULL(Родитель.ТипГруппы,0)=0) ИЛИ (ЭтоГруппа И ТипГруппы<>0) )" )+"
	|УПОРЯДОЧИТЬ ПО ЭтоГруппа УБЫВ, Наименование
	|");
	
	Запрос.УстановитьПараметр("Бонусная", СкидкаБонусы="Бонусы");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ИнтерфейсРМ.ПроверкаПраваДоступа(Выборка.Ссылка) Тогда
			МассивЗначений.Добавить(Выборка.Ссылка);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВыборСкидкиБонусов(СкидкаБонусы)
	
	ВыбСкидка = ИнтерфейсРМ.ВыборИзСписка( ?(СкидкаБонусы="Бонусы", МассивБонусов, МассивСкидок) );
	Если ВыбСкидка=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Клиент[СкидкаБонусы] = ВыбСкидка;
	ПоказатьСкидкуБонусы(СкидкаБонусы);
	
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура ПоказатьСкидкуБонусы(СкидкаБонусы)
	
	Если глВерсия=1 Тогда
		Возврат;
	КонецЕсли; 
	
	Скидка = Клиент[СкидкаБонусы];
	
	Если ЗначениеЗаполнено(Скидка) Тогда
		ЗначениеСкидки = ПредставлениеСкидки(Скидка);
		ЭлементыФормы["Кнопка"+СкидкаБонусы].Заголовок = Скидка.Наименование + ?(ЗначениеСкидки="", "", " ("+ЗначениеСкидки+")" );
	Иначе
		ЭлементыФормы["Кнопка"+СкидкаБонусы].Заголовок = "нет";
	КонецЕсли; 
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ВводНового Тогда
		
		// Если форма вызвана из доставки то Клиент может быть предварительно введен
		Если НЕ ЗначениеЗаполнено(Клиент.Наименование) Тогда
			Клиент = Справочники.Клиенты.СоздатьЭлемент();
			Клиент.Родитель = глПараметрыРМ.КлиентГруппаНовых;
			Клиент.Безнал = Истина;
			Клиент.ДатаРегистрации = ТекущаяДата();
		КонецЕсли;
		
		Если глПараметрыРМ.КлиентРежимВыдачиКарты = 2 Тогда
			// виртуальную карту создаем сразу
			КартаДоступа = Справочники.КартыДоступа.СоздатьЭлемент();
			КартаДоступа.УстановитьНовыйКод();
			КартаДоступа.Идентификатор = КартаДоступа.Код;
			КартаДоступа.Наименование = "Карта № "+КартаДоступа.Код;
		КонецЕсли;
		
		ЭлементыФормы.тЗаголовок.Заголовок = "Регистрация нового клиента";
		
	Иначе
		
		Если Клиент.Ссылка.Пустая() Тогда
			ИнтерфейсРМ.ВыводНаИнфоДисплей("Приглашение", Неопределено, Неопределено, Неопределено, Неопределено);
			ВыбКлиент = ИнтерфейсРМ.ИдентификацияКлиента( , Истина, Истина );
			Если ВыбКлиент=Неопределено Тогда
				ИнтерфейсРМ.ВыводНаИнфоДисплей("Реклама", Неопределено, Неопределено, Неопределено, Неопределено);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			Клиент = ВыбКлиент.ПолучитьОбъект();
		КонецЕсли; 
		
		ЭлементыФормы.тЗаголовок.Заголовок = "Клиент: "+Клиент.Наименование;
		
		Если Телефон.Пустая() Тогда
			Телефон = киОсновнойТелефон(Клиент.Ссылка);
		КонецЕсли; 
		Если Адрес.Пустая() Тогда
			Адрес = киОсновнойАдрес(Клиент.Ссылка);
		КонецЕсли; 
		
		//КартаДоступаСсылка = КартаПоПривязке(ВыбКлиент); // pr
		КартаДоступаСсылка = КартаПоПривязке(Клиент.Ссылка);
		
		Если НЕ КартаДоступаСсылка.Пустая() Тогда
			//КартаДоступа = КартаПоПривязке(ВыбКлиент).ПолучитьОбъект(); // pr
			КартаДоступа = КартаПоПривязке(Клиент.Ссылка).ПолучитьОбъект();
		КонецЕсли; 
		
		НакопленияКлиента = НакопленияКлиента(Клиент.Ссылка);
		ЭлементыФормы.ИнфНадписьОстатокНаСчете	.Заголовок = "Остаток на счете: " + ФорматСумм(НакопленияКлиента.СуммаБезнал, глРубли);
		ЭлементыФормы.ИнфНадписьСуммаБонусов	.Заголовок = "Накоплено: " + ФорматСумм(НакопленияКлиента.СуммаБонусов, глРубли);
		
		Если НЕ ИнтерфейсРМ.ПроверкаПраваДоступа(ПланыВидовХарактеристик.ПраваДоступа.ИзменениеКлиента) Тогда
			ТолькоПросмотр = Истина;
			ЭлементыФормы.КнопкаАдрес			.Доступность = Ложь;
			ЭлементыФормы.КнопкаТелефон			.Доступность = Ложь;
			ЭлементыФормы.КнопкаСкидка			.Доступность = Ложь;
			ЭлементыФормы.КнопкаБонусы			.Доступность = Ложь;
			ЭлементыФормы.КнопкаСкидкаОчистить	.Видимость = Ложь;
			ЭлементыФормы.КнопкаБонусыОчистить	.Видимость = Ложь;
			ЭлементыФормы.КнопкаЭкраннаяКлава	.Видимость = Ложь;
			
			ТекущийЭлемент = ЭлементыФормы.КнопкаЗакрыть;
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если НЕ Клиент.Фото.Пустая() Тогда
		ЭлементыФормы.Фото.Картинка = Клиент.Фото.Хранилище.Получить();
	КонецЕсли; 
	
	Если глВерсия=1 Тогда
		ЭлементыФормы.ПанельСкидки.Видимость = Ложь;
	Иначе
		ПоказатьСкидкуБонусы("Скидка");
		ПоказатьСкидкуБонусы("Бонусы");
		
		МассивСкидок = Новый Массив;
		ЗаполнитьСкидкиБонусы("Скидка");
		Если МассивСкидок.Количество() = 0 Тогда
			ЭлементыФормы.КнопкаСкидка.Доступность = Ложь;
			ЭлементыФормы.КнопкаСкидкаОчистить.Видимость = Ложь;
		КонецЕсли;
		
		МассивБонусов = Новый Массив;
		ЗаполнитьСкидкиБонусы("Бонусы");
		Если МассивБонусов.Количество() = 0 Тогда
			ЭлементыФормы.КнопкаБонусы.Доступность = Ложь;
			ЭлементыФормы.КнопкаБонусыОчистить.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ИнтерфейсРМ.ПроверкаПраваДоступа(ПланыВидовХарактеристик.ПраваДоступа.НазначениеКлиентуГлубиныКредита) Тогда
		ЭлементыФормы.ГлубинаКредита.Доступность = Ложь;
	КонецЕсли; 
	
	Если глПараметрыРМ.ЗаказКлиентВыборИзСписка Тогда
		НеПроверятьКартуДоступа = Истина;
	КонецЕсли; 
	
	ЭлементыФормы.ЧерныйСписок.Видимость = глВерсия=3;
	
	ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Основная;
	
	// чтобы убрать выделение
	WshShell.SendKeys("{End}");
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если глФлагБлокировка И Модифицированность Тогда
		
		Отказ = Истина;
		глФлагБлокировка = Ложь;
		
		БылПользователь = глПользователь;
		глПользователь = Справочники.Сотрудники.ПустаяСсылка();	// чтобы не сработала повторно автоблокировка
		глПользователь = ИнтерфейсРМ.ИдентификацияПользователя();
		
		Пока НЕ( глПользователь=БылПользователь ИЛИ ИнтерфейсРМ.ПроверкаПраваДоступа(?(ВводНового,"ВводКлиента","КарточкаКлиента"), Истина) ) Цикл
			глПользователь = ИнтерфейсРМ.ИдентификацияПользователя();
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
	РаботаСокнами.CloseScreenKey();
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если НЕ ВводДоступен() Тогда
		Возврат;
	КонецЕсли; 
	
	Если глПараметрыРМ.КлиентРежимВыдачиКарты = 2 ИЛИ ТолькоПросмотр Тогда
		// виртуальная карта не меняется
		Возврат;
	КонецЕсли;
	
	_Знач = ОбработкаВнешнихСобытий.ПолучитьДанные(Источник,Событие,Данные);
	Если НЕ ЗначениеЗаполнено(_Знач) Тогда
		Возврат;
	КонецЕсли;
	
	// физические карты привязываем только по их реальному считыванию
	КодПоиска = _Знач;
	КартаДоступаСсылка = Справочники.КартыДоступа.НайтиПоРеквизиту("Идентификатор",КодПоиска);
	
	Если КартаДоступаСсылка.Пустая() И глПараметрыРМ.КлиентРежимВыдачиКарты=0 ИЛИ КартаДоступаСсылка.ЭтоГруппа Тогда
		Текст1="Нет доступа!";
		Текст2="Карта доступа не распознана!"; 
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
		
	ИначеЕсли КартаДоступаСсылка.Пустая() Тогда
		
		КартаДоступа = Справочники.КартыДоступа.СоздатьЭлемент();
		КартаДоступа.УстановитьНовыйКод();
		КартаДоступа.Идентификатор = КодПоиска;
		КартаДоступа.Наименование = "Карта № "+КартаДоступа.Код;
		// < КС_ВДВ ------------------------------------------------------------ 
		КартаДоступа.ТипКарты = Перечисления.ТипыКартДоступа.Временная;
		//заменил на временную Пошивалов, чтобы могли регистрировать новые временные карты самостоятельно
		//до того времени пока не появятся постоянные карты
		// КС_ВДВ > ------------------------------------------------------------ 
		КартаДоступа.Записать();
		Модифицированность = Истина;
		Возврат;
		
	ИначеЕсли КартаДоступаСсылка.ПометкаУдаления Тогда
		Текст1="Нет доступа!";
		Текст2="Карта доступа помечена на удаление!";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
		
	ИначеЕсли КартаДоступаСсылка.Блокировка Тогда
		Текст1="Карта заблокирована!";
		Текст2=КартаДоступа.Комментарий;
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
		
	ИначеЕсли ЗначениеЗаполнено(КартаДоступаСсылка.Привязка) И КартаДоступаСсылка.Привязка<>Клиент.Ссылка Тогда
		Текст1="Внимание!";
		Текст2="Эта карта уже привязана к "+КартаДоступаСсылка.Привязка+"
				|Вы хотите ее переопределить?";
		Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"ОК","","Esc=Отмена")="Отмена" Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли; 
	
	КартаДоступа = КартаДоступаСсылка.ПолучитьОбъект();
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	глОтсечкаПростоя();
	
	ЭлементыФормы.тКартаДоступа.Заголовок = ?(ЗначениеЗаполнено(КартаДоступа.Код), КартаДоступа.Наименование, "Считайте карту доступа");
	
	ЭлементыФормы.КнопкаАдрес		.Заголовок = ?(ЗначениеЗаполнено(Адрес), Адрес.Представление, "< Адрес не указан >");
	ЭлементыФормы.КнопкаТелефон		.Заголовок = ?(ЗначениеЗаполнено(Телефон), Телефон.Представление, ?(ЗначениеЗаполнено(КлиентКод), КлиентКод, "< Телефон не указан >"));
	
	Если глВерсия = 3 Тогда
		ЭлементыФормы.ЧерныйСписок.Шрифт = ?(клиент.ЧерныйСписок, ШрифтыСтиля.Шрифт12ж, ШрифтыСтиля.Шрифт8);
		ЭлементыФормы.тЗаголовок.Шрифт	 = Новый Шрифт(ЭлементыФормы.тЗаголовок.Шрифт,,,,,,клиент.ЧерныйСписок);	// зачеркнутый
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаЭкраннаяКлаваНажатие(Элемент)
	
	ИнтерфейсРМ.ЭкраннаяКлавиатура();
	
	ТекущийЭлемент = ЭлементыФормы.Наименование;
	
КонецПроцедуры

Процедура ГлубинаКредитаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Сумма = ИнтерфейсРМ.ВводЧисла("Введите сумму", "Число", 12, 2);
	
	Если Сумма=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Клиент.ГлубинаКредита = Сумма;
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура КнопкаСкидкаНажатие(Элемент)
	
	ВыборСкидкиБонусов("Скидка");
	
КонецПроцедуры

Процедура КнопкаСкидкаОчиститьНажатие(Элемент)
	
	Клиент.Скидка = Неопределено;
	ПоказатьСкидкуБонусы("Скидка");
	
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура КнопкаБонусыНажатие(Элемент)
	
	ВыборСкидкиБонусов("Бонусы");
	
КонецПроцедуры

Процедура КнопкаБонусыОчиститьНажатие(Элемент)
	
	Клиент.Бонусы = Неопределено;
	ПоказатьСкидкуБонусы("Бонусы");
	
	Модифицированность = Истина;
	
КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	
	Если ТолькоПросмотр ИЛИ НЕ Модифицированность Тогда
		Закрыть();
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Клиент.Наименование) Тогда
		Если КартаДоступа.ТипКарты = Перечисления.ТипыКартДоступа.Временная Тогда
			Клиент.Наименование = "Клиент №"+Клиент.Код;
		Иначе
			Текст1="Ошибка!";
			Текст2="Введите наименование клиента!";
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
			ТекущийЭлемент = ЭлементыФормы.Наименование;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Клиент.ДатаОбновления = ТекущаяДата();
	
	Если НеПроверятьКартуДоступа И НЕ ЗначениеЗаполнено(КартаДоступа.Код) Тогда
		
		Если НЕ ИнтерфейсРМ.ПопыткаДействияСОбъектом( Клиент, "Объект.Записать()" ) Тогда
			Возврат;
		КонецЕсли; 
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(КартаДоступа.Код) Тогда
			Текст1="Ошибка!";
			Текст2="Считайте карту доступа для идентификации клиента!";
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
			Возврат;
		КонецЕсли;
		
		ПровСсылка = КартаДоступа.Ссылка;
		Если НЕ ПроверкаУникальностиРеквизитаСправочника(ПровСсылка, "Идентификатор", КартаДоступа.Идентификатор) Тогда
			Текст1="Ошибка!";
			Текст2="Идентификатор уже использован в """+ПровСсылка.Наименование+"""";
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
			Возврат;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Если НЕ ИнтерфейсРМ.ПопыткаДействияСОбъектом( Клиент, "Объект.Записать()" ) Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли; 
		
		КартаДоступа.Привязка = Клиент.Ссылка;
		
		Если НЕ ИнтерфейсРМ.ПопыткаДействияСОбъектом( КартаДоступа, "Объект.Записать()" ) Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли; 
		
		ЗафиксироватьТранзакцию();
	КонецЕсли; 
	
	ИнтерфейсРМ.ЗаписьСобытия( ?(ВводНового, Справочники.События.КлиентыВводНового, Справочники.События.КлиентыИзменение), Клиент.Ссылка, Клиент.Наименование);
	
	Закрыть("ОК");
	
КонецПроцедуры

Процедура КнопкаАдресНажатие(Элемент)
	
	ВводАдреса(ЭтаФорма, ЭлементыФормы.ДопИнформация);
	
КонецПроцедуры

Процедура КнопкаТелефонНажатие(Элемент)
	
	ВводТелефона(ЭтаФорма, ЭлементыФормы.КнопкаАдрес);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);
