
Перем ТаблицаЗадания;
Перем Сотрудник;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ОписаниеПрофиля) ТОгда
		Предупреждение("Данная обработка открывается только из справочника торгового оборудования!",5);
		Отказ = Истина;
		Возврат;  		
	КонецЕсли;   
	
	// заполнение списка COM портов
	Для н=1 По 32 Цикл
		ЭлементыФормы.PortNumber.СписокВыбора.Добавить(н, "COM"+н);
	КонецЦикла;
	
	// заполнение списка скоростей обмена
	СписокСкоростей = ЭлементыФормы.BaudRate.СписокВыбора;
	СписокСкоростей.Добавить(3 ,"1200");
	СписокСкоростей.Добавить(4 ,"2400");
	СписокСкоростей.Добавить(5 ,"4800");
	СписокСкоростей.Добавить(7 ,"9600");
	СписокСкоростей.Добавить(9 ,"14400");
	СписокСкоростей.Добавить(10,"19200");
	СписокСкоростей.Добавить(12,"38400");
	СписокСкоростей.Добавить(14,"57600");
	СписокСкоростей.Добавить(18,"115200");
	
	// заполнение списка символов в строке
	СписокСимволовВСтроке = ЭлементыФормы.СимволовВСтроке.СписокВыбора;
	СписокСимволовВСтроке.Добавить(32);
	СписокСимволовВСтроке.Добавить(36);
	СписокСимволовВСтроке.Добавить(40);
	СписокСимволовВСтроке.Добавить(44);
	СписокСимволовВСтроке.Добавить(48);
	
	// управление закладками
	Страницы = ЭлементыФормы.Панель1.Страницы;
	
	Если СокрП(ТО.КодВида) = "ФР" Тогда
		Страницы.Удалить(Страницы.ПД);
		
		// заполнение таблицы кассиров
		Для н=1 По 28 Цикл
			ТаблицаКассиров.Добавить().Кассир = "Кассир "+н;
		КонецЦикла;
		ТаблицаКассиров.Добавить().Кассир = "Админ.";
		ТаблицаКассиров.Добавить().Кассир = "Сис.админ.";
		
	ИначеЕсли СокрП(ТО.КодВида) = "ПРН" Тогда
		Страницы.Удалить(Страницы.СписокКассиров);
		Страницы.Удалить(Страницы.Время);
		Если Найти("Меркурий114Ф,Феликс3СК",СокрП(ТО.КодМодели)) = 0 Тогда
			Страницы.Удалить(Страницы.ПД);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЭлементыФормы.AccessPassword.Доступность = UseAccessPassword;
	ЭлементыФормы.ОбщийПароль.Доступность = ФлагОбщийПароль;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Сохранение параметров и закрытие формы
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	//ЗаполнитьЗначенияСвойств(ПараметрыТО,ЭтотОбъект);
	ТО.Параметры = ЗначениеВСтрокуВнутр(ПараметрыТО);
	Закрыть("ОК");
	
КонецПроцедуры

Процедура КнопкаДемоПечатьНажатие(Элемент)
	
	Если НЕ Подключить(Истина) Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
		Возврат;
	КонецЕсли;
	
	вх = Новый Структура;
	мас = Новый массив;
	мас.Добавить("аывлдылп");
	вх.Вставить("Строки",мас);
	вых = новый Массив;
	рез = ВыполнитьКоманду("ПечатьТекста",вх,вых);
	если не рез тогда
		сообщить(Вых[0]);
	КонецЕсли;
	//DRV.Mode=0;
	//DRV.SetMode();
	//DRV.PrintPurpose=1;
	//DRV.DemoPrint();
	//
	//Если Ошибка() Тогда
	//	Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	//КонецЕсли;
	
	Отключить();
	
КонецПроцедуры

Процедура КнопкаПараметрыККМНажатие(Элемент)
	
	Отключить();
	Если НЕ Подключить(Истина) Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	КонецЕсли;
	
	Отключить();
	//DRV.ShowProperties();
	Если не ТестУстройства() Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	Иначе
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	КонецЕсли;
	
	Отключить();
	
КонецПроцедуры

Процедура КнопкаОбновитьВремяНажатие(Элемент)
	
	Если НЕ Подключить(Истина) Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.тВремяККМ.Заголовок = Формат(DRV.Day,"ЧД=2;ЧВН=")+"."+Формат(DRV.Month,"ЧЦ=2;ЧВН=")+"."+Формат(DRV.Year,"ЧД=4;ЧРГ=''")+" "+
	Формат(DRV.Hour,"ЧД=2;ЧВН=")+":"+Формат(DRV.Minute,"ЧД=2;ЧВН=")+":"+Формат(DRV.Second,"ЧД=2;ЧВН=");
	
	ЭлементыФормы.тВремяСистемы.Заголовок = Формат(ТекущаяДата(), "ДЛФ=ДВ");
	
	Отключить();
	
КонецПроцедуры

Процедура КнопкаСинхронизироватьВремяНажатие(Элемент)
	
	Текст2 = "Подтвердите системные дату, время:"+Символы.ПС+Формат(ТекущаяДата(),"ДЛФ=ДВ");
	Если Вопрос(Текст2,РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Парам = Новый Структура;
	Парам.Вставить("Пароль"					, ОбщийПароль);
	Парам.Вставить("ИгнорироватьОбщийПароль", Истина);
	
	ВыполнитьДействие("СинхронизироватьВремя", Парам);
	Если Результат.Ошибка Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	КонецЕсли;
	
	КнопкаОбновитьВремяНажатие(Элемент);
	
КонецПроцедуры

Процедура СписокКассиров(Режим)
	
	Если Не Подключить(Истина) Тогда
		Предупреждение(Результат.Описание+Символы.ПС+Результат.Подробно);
		Возврат;
	КонецЕсли;
	
	Пароль="";
	Если НЕ ВвестиСтроку(Пароль,"Введите пароль системного администратора") Тогда
		Возврат;
	КонецЕсли;
	
	DRV.Mode	=4;
	DRV.Password=СокрЛП(Пароль);
	DRV.SetMode();
	Если Ошибка() Тогда
		Предупреждение(Результат.Описание+Символы.ПС+Результат.Подробно);
		Возврат;
	КонецЕсли;
	
	ИндексСтроки = 1;
	Для Каждого Кассир Из ТаблицаКассиров Цикл
		
		DRV.CaptionPurpose=ИндексСтроки+5;
		Если Режим="Прочитать" Тогда
			DRV.GetCaption();
			Кассир.Пароль = СокрЛП(DRV.Caption);
		Иначе
			DRV.Caption = ?(ПустаяСтрока(Кассир.Пароль), 0, Число(Кассир.Пароль));
			DRV.SetCaption();
		КонецЕсли;
		
		DRV.CaptionPurpose=ИндексСтроки+88;
		Если Режим="Прочитать" Тогда
			DRV.GetCaption();
			Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(DRV.Caption);
			Кассир.ФИО = Сотрудник;
		Иначе
			DRV.Caption=Кассир.ФИО.Наименование;
			DRV.SetCaption();
		КонецЕсли;
		ИндексСтроки = ИндексСтроки+1;
	КонецЦикла;
	
КонецПроцедуры

Процедура КнопкаКассирыПрочитатьНажатие(Элемент)
	
	СписокКассиров("Прочитать");	
	Отключить();
	
КонецПроцедуры

Процедура КнопкаКассирыЗагрузитьНажатие(Элемент)
	
	СписокКассиров("Загрузить");
	Отключить();
	
КонецПроцедуры

Процедура ТаблицаКассировФИОПриИзменении(Элемент)
	СтрокаТаблицы        = ЭлементыФормы.ТаблицаКассиров.ТекущаяСтрока;
	СтрокаТаблицы.Пароль = СтрокаТаблицы.ФИО.КодДоступа;
КонецПроцедуры

Процедура КнопкаКассирыОчиститьВсеНажатие(Элемент)
	Для Каждого Кассир Из ТаблицаКассиров Цикл
		Кассир.ФИО = Неопределено;
		Кассир.Пароль = "";
	КонецЦикла;	
КонецПроцедуры


Процедура PortNumberПриИзменении(Элемент)
	ПараметрыТО.PortNumber = 1000 + PortNumber;
КонецПроцедуры


Процедура BaudRateПриИзменении(Элемент)
	ПараметрыТО.BaudRate = BaudRate;
КонецПроцедуры

