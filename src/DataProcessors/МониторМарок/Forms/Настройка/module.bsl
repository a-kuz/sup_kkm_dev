
////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ

Процедура ИнициализацияПараметров()
	
	//ПроизводствоСписокБлюдОформление.Колонки.Добавить("Наименование",,,50);
	//ПроизводствоСписокБлюдОформление.Колонки.Добавить("Шрифт"	, Новый ОписаниеТипов("Шрифт"),"Шрифт",10);
	//ПроизводствоСписокБлюдОформление.Колонки.Добавить("Цвет"	, Новый ОписаниеТипов("Цвет"),"Цвет строки",10);

	//ПроизводствоСписокБлюдОформление.Добавить().Наименование = "Время приготовления блюда в норме";
	//ПроизводствоСписокБлюдОформление.Добавить().Наименование = "Внимание время приготовления блюда заканчивается";
	//ПроизводствоСписокБлюдОформление.Добавить().Наименование = "Время приготовления блюда просрочено";
	//ПроизводствоСписокБлюдОформление.Добавить().Наименование = "Отмена приготовления блюда";
	
	ЭлементыФормы.ПроизводствоСписокБлюдОформление.Колонки.Шрифт.Видимость		= Ложь;
	ЭлементыФормы.ПроизводствоСписокБлюдОформление.Колонки.ЦветТекста.Видимость	= Ложь;
    ЭлементыФормы.ПроизводствоСписокБлюдОформление.Колонки.ЦветФона.Видимость	= Ложь;
	 
КонецПроцедуры

// Описание процедуры
//
// Параметры:
//	Параметр1	- описание параметра
//
Процедура ЗагрузитьПараметрыНастройки() Экспорт
	
	Если НЕ ЗначениеЗаполнено(ТекущаяНастройка) Тогда
		ТекущаяНастройка = Неопределено;
		Возврат;
	КонецЕсли;
	
	НастройкиОбъект = ТекущаяНастройка.ПолучитьОбъект();
	
	Если НастройкиОбъект = Неопределено Тогда
		ТекущаяНастройка = Неопределено;
		Возврат;
	КонецЕсли;	
	
	ПараметрыНастройки = НастройкиОбъект.ПолучитьСтруктуруПараметров();
	
	ОбновитьРеквизитыИзПараметровНастройки();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

// Описание функции
//
// Параметры:
//	Параметр1	- описание
//
// Возвращаемое значение:
//	Тип.Вид		- описание
//
Функция СформироватьПараметрыНастройки()
	
	ПараметрыНастройки = Новый Структура;
	
	Для каждого Элемент Из ЭлементыФормы Цикл
		
		Если НЕ ЗначениеЗаполнено(Элемент.Данные) Тогда
			Продолжить;
		ИначеЕсли Элемент.Данные = "ТекущаяНастройка" Тогда
			Продолжить;
		КонецЕсли; 
		
		ПараметрыНастройки.Вставить(Элемент.Данные, Элемент.Значение);
		
	КонецЦикла; 
	
	Возврат ПараметрыНастройки;
	
КонецФункции

// Обновить реквизиты формы из ПараметровНастройки
//
Процедура ОбновитьРеквизитыИзПараметровНастройки()
	
	Для каждого Элемент Из ЭлементыФормы Цикл
		
		Если НЕ ЗначениеЗаполнено(Элемент.Данные) Тогда
			Продолжить;
		ИначеЕсли Элемент.Данные = "ТекущаяНастройка" Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ТипЗнч(Элемент) = Тип("ТабличноеПоле") Тогда
			
			ТаблицаИзПараметров = Неопределено;
			
			Если НЕ ПараметрыНастройки.Свойство(Элемент.Данные, ТаблицаИзПараметров) Тогда
				Продолжить;
			КонецЕсли;	
			
			Элемент.Значение.Очистить();
			
			Для каждого СтрИзПараметров из ТаблицаИзПараметров Цикл
				НоваяСтрокаТаблицы = Элемент.Значение.Добавить();
				Для Каждого ТекКолонка из ТаблицаИзПараметров.Колонки Цикл
					Если Элемент.Значение.Колонки.Найти(ТекКолонка.Имя) = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					НоваяСтрокаТаблицы[ТекКолонка.Имя] = СтрИзПараметров[ТекКолонка.Имя];
				КонецЦикла;
			КонецЦикла;			
			
		Иначе
			ПараметрыНастройки.Свойство(Элемент.Данные, Элемент.Значение);
		КонецЕсли;	

		// для элементов формы, значения которых выбираются из списка,
		// подставим значения по умолчанию равными первому значению из списка
		Если Элемент.Значение=Неопределено И Элемент.СписокВыбора.Количество()>0 Тогда
			Элемент.Значение = Элемент.СписокВыбора[0].Значение;
		КонецЕсли; 
		
	КонецЦикла; 	
	
КонецПроцедуры	

// Описание функции
//
// Параметры:
//	Параметр1	- описание
//
// Возвращаемое значение:
//	Тип.Вид		- описание
//
Функция ЗаписатьНастройку(БезВопросов=Ложь) Экспорт 
	
	Если НЕ Модифицированность Тогда
		Возврат Истина;
	КонецЕсли; 
	
	Если БезВопросов Тогда
		Ответ = КодВозвратаДиалога.Да;
	Иначе
		Ответ = Вопрос("Записать текущую настройку?", РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат Ложь;
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		Настройка = ТекущаяНастройка.ПолучитьОбъект();
		Настройка.Параметры	= ЗначениеВСтрокуВнутр( СформироватьПараметрыНастройки() );
		Если НЕ ЗначениеЗаполнено(Настройка.ИнформационнаяБаза) Тогда
			Настройка.ИнформационнаяБаза = ПараметрыСеанса.ТекущаяИБ;
		КонецЕсли;
		Настройка.Записать();
		Модифицированность = Ложь;
		
	//Иначе
	//	ЗагрузитьПараметрыНастройки();
		
	КонецЕсли; 
	
	ЗагрузитьПараметрыНастройки();
	
	Возврат Истина;
КонецФункции

// Описание процедуры
//
Процедура Редактировать()
	
	глРабочееМесто = Справочники.РабочиеМеста.ПустаяСсылка();
	Если ВвестиЗначение(глРабочееМесто) Тогда
		глПараметрыРМ = ЗначениеИзСтрокиВнутр(глРабочееМесто.ПараметрыРМ);
	КонецЕсли;
	
	
	ФормаМарки = ЭтаФорма.ОбработкаОбъект.ПолучитьФорму("Форма");
	ФормаМарки.ВладелецФормы		= ЭтаФорма;
	ФормаМарки.РежимНастройки		= Истина;
	ФормаМарки.ОткрытьМодально();
	
	ОбновитьРеквизитыИзПараметровНастройки();

КонецПроцедуры

// Описание процедуры
//
Процедура УстановитьЗначенияПоумолчанию() Экспорт
	
	ФормаМарки = ЭтаФорма.ОбработкаОбъект.ПолучитьФорму("Форма");

	ВремяГотовностиВнимание						= 20;
	КоличествоМарокПоГоризонтали				= 3;
	КоличествоМарокПоВертикали					= 2;
	
	НадписьЗаголовокОсновнойШрифтТекста			= Новый Шрифт(ФормаМарки.ЭлементыФормы.тНаименованиеМарки_.Шрифт, , 12);
	НадписьЗаголовокОсновнойЦветТекста			= ФормаМарки.ЭлементыФормы.тНаименованиеМарки_.ЦветТекста;
	НадписьЗаголовокДополнительныйШрифтТекста	= Новый Шрифт(ФормаМарки.ЭлементыФормы.тНаименованиеМаркиДоп_.Шрифт, , 12);
	НадписьЗаголовокДополнительныйЦветТекста	= ФормаМарки.ЭлементыФормы.тНаименованиеМаркиДоп_.ЦветТекста;
	НадписьАвторШрифтТекста						= Новый Шрифт(ФормаМарки.ЭлементыФормы.тАвтор_.Шрифт, , 8);
    НадписьАвторЦветТекста						= ФормаМарки.ЭлементыФормы.тАвтор_.ЦветТекста;
	НадписьВремяШрифтТекста						= Новый Шрифт(ФормаМарки.ЭлементыФормы.тТаймерОчереди_.Шрифт, , 16);
    НадписьВремяЦветТекста						= ФормаМарки.ЭлементыФормы.тТаймерОчереди_.ЦветТекста;

	ПроизводствоСписокБлюдОформление.Очистить();
	
	НоваяСтрока = ПроизводствоСписокБлюдОформление.Добавить();
	НоваяСтрока.Наименование					= "Время приготовления блюда в норме";
	НоваяСтрока.Шрифт							= Новый Шрифт(ФормаМарки.ЭлементыФормы.СоставМарки_.Шрифт, , 12); 
	НоваяСтрока.ЦветТекста						= ФормаМарки.ЭлементыФормы.СоставМарки_.ЦветТекста;
	НоваяСтрока.ЦветФона						= Новый Цвет(152, 251, 152);
	НоваяСтрока = ПроизводствоСписокБлюдОформление.Добавить();
	НоваяСтрока.Наименование					= "Внимание время приготовления блюда заканчивается";
	НоваяСтрока.Шрифт							= Новый Шрифт(ФормаМарки.ЭлементыФормы.СоставМарки_.Шрифт, , 12); 
	НоваяСтрока.ЦветТекста						= ФормаМарки.ЭлементыФормы.СоставМарки_.ЦветТекста;
	НоваяСтрока.ЦветФона						= Новый Цвет(255, 255, 153);
	НоваяСтрока = ПроизводствоСписокБлюдОформление.Добавить();
	НоваяСтрока.Наименование					= "Время приготовления блюда просрочено";
	НоваяСтрока.Шрифт							= Новый Шрифт(ФормаМарки.ЭлементыФормы.СоставМарки_.Шрифт, , 12); 
	НоваяСтрока.ЦветТекста						= ФормаМарки.ЭлементыФормы.СоставМарки_.ЦветТекста;
	НоваяСтрока.ЦветФона						= Новый Цвет(255, 153, 204);
	НоваяСтрока = ПроизводствоСписокБлюдОформление.Добавить();
	НоваяСтрока.Наименование					= "Отмена приготовления блюда";
	НоваяСтрока.Шрифт							= Новый Шрифт(ФормаМарки.ЭлементыФормы.СоставМарки_.Шрифт, , 12); 
	НоваяСтрока.ЦветТекста						= ФормаМарки.ЭлементыФормы.СоставМарки_.ЦветТекста;
	НоваяСтрока.ЦветФона						= Новый Цвет(255, 1, 1);
	НоваяСтрока = ПроизводствоСписокБлюдОформление.Добавить();
	НоваяСтрока.Наименование					= """Свободное"" блюдо";
	НоваяСтрока.Шрифт							= Новый Шрифт(ФормаМарки.ЭлементыФормы.СоставМарки_.Шрифт, , 12); 
	НоваяСтрока.ЦветТекста						= ФормаМарки.ЭлементыФормы.СоставМарки_.ЦветТекста;
	НоваяСтрока.ЦветФона						= Новый Цвет(255, 255, 255);

	Модифицированность = Истина;
	
КонецПроцедуры

// Создать новую настройку в справочнике торговое оборудование
//
Процедура  СоздатьНовуюНастройку(НазваниеНастройки) Экспорт 
	
	Настройка = Справочники.ТорговоеОборудование.СоздатьЭлемент();
	Настройка.УстановитьНовыйКод();
	Настройка.Наименование	= НазваниеНастройки;
	Настройка.КодВида		= "МониторМарок";
	Настройка.КодМодели		= "";
	Настройка.КодВерсии		= "";
	Настройка.ТипПрофиля	= 1;
	Настройка.ИмяОбработки	= "Обслуживание_АО";
	Настройка.Записать();

	ТекущаяНастройка = Настройка.Ссылка;
	
	УстановитьЗначенияПоумолчанию();
	
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = НЕ ЗаписатьНастройку();
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	НастройкаВыбрана = ЗначениеЗаполнено( ТекущаяНастройка );
	
	ЭлементыФормы.КнопкаПереименовать.Доступность				= НастройкаВыбрана;
	ЭлементыФормы.КнопкаЗаписать.Доступность					= НастройкаВыбрана;
	ЭлементыФормы.КнопкаУдалить.Доступность						= НастройкаВыбрана;
	ЭлементыФормы.ПанельНастройкиМарок.Доступность				= НастройкаВыбрана;
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК.Доступность	= НастройкаВыбрана;
	ЭлементыФормы.КнопкаСостоянияПоУмолчанию.Доступность		= НастройкаВыбрана;
	ЭлементыФормы.КнопкаРедактировать.Доступность				= НастройкаВыбрана;
	
	ЭлементыФормы.НадписьЗаголовокОсновной.Шрифт				= ЭлементыФормы.НадписьЗаголовокОсновнойШрифтТекста.Значение;
	ЭлементыФормы.НадписьЗаголовокОсновной.ЦветТекста			= ЭлементыФормы.НадписьЗаголовокОсновнойЦветТекста.Значение;
	ЭлементыФормы.НадписьЗаголовокДополнительный.Шрифт			= ЭлементыФормы.НадписьЗаголовокДополнительныйШрифтТекста.Значение;
	ЭлементыФормы.НадписьЗаголовокДополнительный.ЦветТекста		= ЭлементыФормы.НадписьЗаголовокДополнительныйЦветТекста.Значение;
	ЭлементыФормы.НадписьЗаголовокАвтор.Шрифт					= ЭлементыФормы.НадписьАвторШрифтТекста.Значение;
	ЭлементыФормы.НадписьЗаголовокАвтор.ЦветТекста				= ЭлементыФормы.НадписьАвторЦветТекста.Значение;
	ЭлементыФормы.НадписьЗаголовокВремя.Шрифт					= ЭлементыФормы.НадписьВремяШрифтТекста.Значение;
	ЭлементыФормы.НадписьЗаголовокВремя.ЦветТекста				= ЭлементыФормы.НадписьВремяЦветТекста.Значение;
	
	ЭлементыФормы.ПроизводствоСписокБлюдОформление.ВыделенныеСтроки.Очистить();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ТекущаяНастройкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗаписатьНастройку() Тогда
		Возврат;
	КонецЕсли;
	
	СписокВидов = Новый СписокЗначений;
	СписокВидов.Добавить("МониторМарок");
	Если тоВыбратьИзСпискаТО(СписокВидов, ЭтаФорма, Элемент) <> Неопределено Тогда
		ЗагрузитьПараметрыНастройки();
	КонецЕсли; 
	
	//ПодключитьОбработчикОжидания("ОчиститьВыделенныеСтроки", 0.1, Истина);
	
КонецПроцедуры

Процедура КнопкаНоваяНастройкаНажатие(Элемент)
	
	Если НЕ ЗаписатьНастройку() Тогда
		Возврат;
	КонецЕсли;
	
	НазваниеНастройки = "";
	Если НЕ ВвестиСтроку(НазваниеНастройки, "Название настройки") ИЛИ ПустаяСтрока(НазваниеНастройки) Тогда
		Возврат;
	КонецЕсли; 
	 
	СоздатьНовуюНастройку(НазваниеНастройки);
	
	ЗаписатьНастройку(Истина);
	
	//ПодключитьОбработчикОжидания("ОчиститьВыделенныеСтроки", 0.1, Истина);
	
КонецПроцедуры
  
Процедура КнопкаПереименоватьНажатие(Элемент)
	
	НазваниеНастройки = ТекущаяНастройка.Наименование;
	Если НЕ ВвестиСтроку(НазваниеНастройки, "Название настройки") Тогда
		Возврат;
	КонецЕсли; 
	
	Настройка = ТекущаяНастройка.ПолучитьОбъект();
	Настройка.Наименование	= НазваниеНастройки;
	Настройка.Записать();
	
	ТекущаяНастройка = Настройка.Ссылка;
	
КонецПроцедуры

Процедура КнопкаЗаписатьНажатие(Элемент)
	
	Модифицированность = Истина;
	ЗаписатьНастройку(Истина);
	
КонецПроцедуры

Процедура КнопкаУдалитьНажатие(Элемент)
	
	Если Вопрос("Удалить текущую настройку?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли; 
	
	ТекущаяНастройка.ПолучитьОбъект().Удалить();
	ТекущаяНастройка = Неопределено;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Модифицированность = Истина;
	ЗаписатьНастройку(Истина);
	Закрыть();
	
КонецПроцедуры

Процедура ПанельНастройкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ОбновлениеОтображения();
КонецПроцедуры

Процедура КнопкаРедактироватьНажатие(Элемент)
	
	Редактировать();
	
	//ПодключитьОбработчикОжидания("ОчиститьВыделенныеСтроки", 0.1, Истина);
	
	Модифицированность = Истина;
	
КонецПроцедуры
 
Процедура КнопкаСостоянияПоумолчаниюНажатие(Элемент)
	
	УстановитьЗначенияПоумолчанию();
	
	//ПодключитьОбработчикОжидания("ОчиститьВыделенныеСтроки", 0.1, Истина);
	
КонецПроцедуры

Процедура ПроизводствоСписокБлюдОформлениеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Шрифт		= ДанныеСтроки.Шрифт;
	ОформлениеСтроки.ЦветТекста	= ДанныеСтроки.ЦветТекста;
	ОформлениеСтроки.ЦветФона	= ДанныеСтроки.ЦветФона;
	
КонецПроцедуры

Процедура КоманднаяПанельШапкаМаркиШрифт(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ПроизводствоСписокБлюдОформление.ТекущаяСтрока;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Предупреждение("Не выбрана строка для редактирования.", 7, "ОШИБКА!");
		Возврат;
	КонецЕсли;	
	
	СтрокаМаркиШрифт(ТекущаяСтрока);
	
КонецПроцедуры

Процедура СтрокаМаркиШрифт(ТекущаяСтрока)
	
	ДиалогВыброа = Новый ДиалогВыбораШрифта;
	ДиалогВыброа.Шрифт	= ТекущаяСтрока.Шрифт;
	Если ДиалогВыброа.Выбрать() Тогда 
		ТекущаяСтрока.Шрифт	= ДиалогВыброа.Шрифт; 
	КонецЕсли;
	
	ЭлементыФормы.ПроизводствоСписокБлюдОформление.ВыделенныеСтроки.Очистить();	
	
КонецПроцедуры


Процедура КоманднаяПанельШапкаМаркиЦветТекста(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ПроизводствоСписокБлюдОформление.ТекущаяСтрока;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Предупреждение("Не выбрана строка для редактирования.", 7, "ОШИБКА!");
		Возврат;
	КонецЕсли;		
	
	СтрокаМаркиЦветТекста(ТекущаяСтрока);

КонецПроцедуры

Процедура СтрокаМаркиЦветТекста(ТекущаяСтрока)

	ДиалогВыброа = Новый ДиалогВыбораЦвета;
	ДиалогВыброа.Цвет	= ТекущаяСтрока.ЦветТекста;
	Если ДиалогВыброа.Выбрать() Тогда 
		ТекущаяСтрока.ЦветТекста	= ДиалогВыброа.Цвет; 
	КонецЕсли;
	
	ЭлементыФормы.ПроизводствоСписокБлюдОформление.ВыделенныеСтроки.Очистить();	

КонецПроцедуры

Процедура КоманднаяПанельШапкаМаркиЦветФона(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ПроизводствоСписокБлюдОформление.ТекущаяСтрока;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Предупреждение("Не выбрана строка для редактирования.", 7, "ОШИБКА!");
		Возврат;
	КонецЕсли;		
	
	СтрокаМаркиЦветФона(ТекущаяСтрока);

КонецПроцедуры

Процедура СтрокаМаркиЦветФона(ТекущаяСтрока)
	
	ДиалогВыброа = Новый ДиалогВыбораЦвета;
	ДиалогВыброа.Цвет	= ТекущаяСтрока.ЦветФона;
	Если ДиалогВыброа.Выбрать() Тогда 
		ТекущаяСтрока.ЦветФона	= ДиалогВыброа.Цвет; 
	КонецЕсли;
	
	ЭлементыФормы.ПроизводствоСписокБлюдОформление.ВыделенныеСтроки.Очистить();	

КонецПроцедуры

Процедура КоличествоМарокПоГоризонталиПриИзменении(Элемент)
	
	Если КоличествоМарокПоГоризонтали > 6 Тогда
		Предупреждение("Максимальное количество марок по горизонтали 6 шт.", 7);
		КоличествоМарокПоГоризонтали = 6;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоличествоМарокПоВертикалиПриИзменении(Элемент)
	
	Если КоличествоМарокПоВертикали > 4 Тогда
		Предупреждение("Максимальное количество марок по гвертикали 4 шт.", 7);
		КоличествоМарокПоВертикали = 4;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроизводствоСписокБлюдОформлениеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СписокРедактированияТаблицы	= Новый СписокЗначений;
	СписокРедактированияТаблицы.Добавить("Шрифт");
	СписокРедактированияТаблицы.Добавить("ЦветТекста", "Цвет Текста");
	СписокРедактированияТаблицы.Добавить("ЦветФона", "Цвет фона");
	
	ВыбЗнач = ВыбратьИзМеню(СписокРедактированияТаблицы);
	Если ВыбЗнач = Неопределено Тогда
		Возврат;
	КонецЕсли; 	
	
	Если ВыбЗнач.Значение = "Шрифт" Тогда
		СтрокаМаркиШрифт(ВыбраннаяСтрока);
	ИначеЕсли ВыбЗнач.Значение = "ЦветТекста" Тогда
		СтрокаМаркиЦветТекста(ВыбраннаяСтрока);
	Иначе
		СтрокаМаркиЦветФона(ВыбраннаяСтрока);
	КонецЕсли;		
	
КонецПроцедуры
	
	
//Процедура ОчиститьВыделенныеСтроки()
//	
//	ЭлементыФормы.ПроизводствоСписокБлюдОформление.ВыделенныеСтроки.Очистить();
//	
//КонецПроцедуры


ИнициализацияПараметров();
