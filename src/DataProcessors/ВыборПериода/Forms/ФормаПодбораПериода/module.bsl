
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	СтруктураВозврата = Новый Структура("ДатаС, ДатаПо, ПредставлениеПериода");
	
	СтруктураВозврата.Вставить("ДатаС", ДатаС);
	СтруктураВозврата.Вставить("ДатаПо", ДатаПо);
	СтруктураВозврата.Вставить("ПредставлениеПериода", ПредставлениеПериода);
	
	Закрыть(СтруктураВозврата);
КонецПроцедуры

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	Закрыть();
КонецПроцедуры

Процедура ДатаПриИзменении()
	Если НЕ ЗначениеЗаполнено(ДатаС) И ЗначениеЗаполнено(ДатаПо) Тогда
		ДатаС = НачалоДня(ДатаПо);
		Если ДатаС = ДатаПо Тогда
			ДатаПо = КонецДня(ДатаПо);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПо) И ЗначениеЗаполнено(ДатаС) Тогда
		ДатаПо = КонецДня(ДатаС);
		Если ДатаПо = ДатаС Тогда
			ДатаС = НачалоДня(ДатаПо);
		КонецЕсли;
	КонецЕсли;
	
	Если ДатаС>= ДатаПо Тогда
		Сообщить("Дата начала должна быть меньше даты окончания");
		ДатаС = НачалоДня(ДатаПо);
		Возврат;
	КонецЕсли;
	ПредставлениеПериода = ПредставлениеПериода(ДатаС,ДатаПо);
КонецПроцедуры

Процедура ВыборПериодаНажатие(Элемент)
	ОбработкаПериода(ДатаС, ДатаПо);
КонецПроцедуры

Процедура ОбработкаПериода(ДатаС, ДатаПО)
	НП = Новый НастройкаПериода;
	НП.ВариантНастройки = ВариантНастройкиПериода.Период;
	
	НП.УстановитьПериод(НачалоДня(ДатаС), ?(ДатаПо = '00010101', ДатаПо, КонецДня(ДатаПо)));

	Если НП.Редактировать() Тогда
		ДатаС = НП.ПолучитьДатуНачала();
		ДатаПо = НП.ПолучитьДатуОкончания();
        ПредставлениеПериода = ПредставлениеПериода(ДатаС,ДатаПо);
	КонецЕсли;

КонецПроцедуры

Процедура ДатаСНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьВремя(Элемент.Значение, Элемент);
	ДатаПриИзменении();
    ПредставлениеПериода = ПредставлениеПериода(ДатаС,ДатаПо);
КонецПроцедуры

Процедура ДатаПоНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьВремя(Элемент.Значение, Элемент);
	ДатаПриИзменении();
	ПредставлениеПериода = ПредставлениеПериода(ДатаС,ДатаПо);

КонецПроцедуры

Процедура ВыбратьВремя(ДатаВремен, ТекЭлемент, ПолныйГод = Ложь)

	НачалоРабочегоДняКонстанта 		= Дата(1,1,1);
	ОкончаниеРабочегоДняКонстанта 	= Дата(1,1,1,23,30,00);
	
	Если ДатаВремен = Дата(1,1,1) Тогда
		ДатаВремен = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	СписокВремен = Новый СписокЗначений;
	НачалоРабочегоДня = НачалоДня(ДатаВремен)+Час(НачалоРабочегоДняКонстанта)*60*60+?(Минута(НачалоРабочегоДняКонстанта) >= 30, 30, 0)*60;
	Если Минута(ОкончаниеРабочегоДняКонстанта) = 0 Тогда
		МинутРабочегоОкончанияДня = 0;
	ИначеЕсли Минута(ОкончаниеРабочегоДняКонстанта) > 30 Тогда
		МинутРабочегоОкончанияДня = 60;
	Иначе
		МинутРабочегоОкончанияДня = 30;
	КонецЕсли; 
	ОкончаниеРабочегоДня = НачалоДня(ДатаВремен)+Час(ОкончаниеРабочегоДняКонстанта)*60*60+МинутРабочегоОкончанияДня*60;

	а = 0;
	Пока 1=1 Цикл
		ВремяСписка = НачалоРабочегоДня + а*30*60;
		Если ВремяСписка > ОкончаниеРабочегоДня Тогда
			Прервать;
		КонецЕсли;
		Если ПолныйГод Тогда
			СписокВремен.Добавить(ВремяСписка, Формат(ВремяСписка,"ДФ='дд.ММ.гггг ЧЧ:мм:сс'"));
		Иначе
			СписокВремен.Добавить(ВремяСписка, Формат(ВремяСписка,"ДФ='дд.ММ.гг ЧЧ:мм:сс'"));
		КонецЕсли; 
		а = а + 1;
	КонецЦикла; 

	НачальноеЗначение = СписокВремен.НайтиПоЗначению(ДатаВремен);
	Если НачальноеЗначение = Неопределено Тогда
		ВыбранноеВремя = ЭтаФорма.ВыбратьИзСписка(СписокВремен, ТекЭлемент);
	Иначе
		ВыбранноеВремя = ЭтаФорма.ВыбратьИзСписка(СписокВремен, ТекЭлемент, НачальноеЗначение);
	КонецЕсли; 

	Если ВыбранноеВремя <> Неопределено Тогда
		ДатаВремен = ВыбранноеВремя.Значение;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДатаПоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДатаПо = КонецДня(ВыбранноеЗначение);
	ДатаПриИзменении();
	ПредставлениеПериода = ПредставлениеПериода(ДатаС,ДатаПо);
КонецПроцедуры
	



