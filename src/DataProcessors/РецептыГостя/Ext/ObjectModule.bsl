#Если Клиент Тогда

#Область ОписаниеПеременных
Перем МассивДействий Экспорт;
Перем ГлавнаяФорма Экспорт;
#КонецОбласти
	
#Область ПрограммныйИнтерфейс

Функция ВыбратьРецептГостя() 
	
	ФормаВыбора = ЭтотОбъект.ПолучитьФорму("ВыборРецептаГостя");
	Возврат ФормаВыбора.ОткрытьМодально();
	
КонецФункции

Функция СохранитьРецептГостя()
	
	ТаблицаРецепта = Товары.ВыгрузитьКолонки("Специфика,СпецификаНоменклатура,Количество");
	
	Попытка
		тпТовары = ГлавнаяФорма.ЭлементыФормы.тпТовары;
	Исключение
	    Возврат "Некорректная версия главной формы. Сообщите разработчикам!";
	КонецПопытки;
		
	Уровень = тпТовары.ТекущаяСтрока.Уровень();
	Если Уровень Тогда
		ТекДанные = тпТовары.ТекущиеДанные.Родитель;
	Иначе
		ТекДанные = тпТовары.ТекущиеДанные;
	КонецЕсли;
	Блюдо = ТекДанные.Товар;
	НомерСтрокиТовара = ТекДанные.НомерСтроки;
	
	СоставБлюда = ГлавнаяФорма.Заказ.Специфики.НайтиСтроки(Новый Структура("НомерСтрокиТовара", НомерСтрокиТовара));
	Если СоставБлюда.Количество() = 0 Тогда
		Возврат "Не определен состав рецепта гостя!";
	КонецЕсли;
	Для каждого ТекСпец Из СоставБлюда Цикл
		НовСтрока = ТаблицаРецепта.Добавить();
		НовСтрока.Специфика = ТекСпец.Специфика;
		НовСтрока.СпецификаНоменклатура = ТекСпец.Специфика.Номенклатура;
		НовСтрока.Количество = ТекСпец.Количество;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ", ТаблицаРецепта);
	Запрос.УстановитьПараметр("Блюдо", Блюдо);
	Запрос.УстановитьПараметр("ТТ", ТТ);
	Запрос.УстановитьПараметр("НомерКартыЛояльности", НомерКартыЛояльности);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ.Специфика КАК Специфика,
	|	ТЗ.Количество КАК Количество
	|ПОМЕСТИТЬ втНовыйСостав
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РецептГостяТовары.Специфика КАК Специфика,
	|	РецептГостяТовары.Количество КАК Количество,
	|	РецептГостяТовары.Ссылка КАК Рецепт
	|ПОМЕСТИТЬ втСтарыеСоставы
	|ИЗ
	|	Документ.РецептГостя.Товары КАК РецептГостяТовары
	|ГДЕ
	|	РецептГостяТовары.Ссылка.ТТ = &ТТ
	|	И РецептГостяТовары.Ссылка.Блюдо = &Блюдо
	|	И РецептГостяТовары.Ссылка.НомерКартыЛояльности = &НомерКартыЛояльности
	|	И РецептГостяТовары.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втНовыйСостав.Специфика, втСтарыеСоставы.Специфика) КАК Специфика,
	|	ЕСТЬNULL(втНовыйСостав.Количество, втСтарыеСоставы.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА втНовыйСостав.Специфика ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьВНовом,
	|	ВЫБОР
	|		КОГДА втСтарыеСоставы.Специфика ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьВСтаром,
	|	ЕСТЬNULL(втСтарыеСоставы.Рецепт, ЗНАЧЕНИЕ(Документ.РецептГостя.ПустаяСсылка)) КАК Рецепт
	|ИЗ
	|	втНовыйСостав КАК втНовыйСостав
	|		ПОЛНОЕ СОЕДИНЕНИЕ втСтарыеСоставы КАК втСтарыеСоставы
	|		ПО втНовыйСостав.Специфика = втСтарыеСоставы.Специфика
	|			И втНовыйСостав.Количество = втСтарыеСоставы.Количество
	|
	|УПОРЯДОЧИТЬ ПО
	|	Рецепт
	|ИТОГИ
	|	МИНИМУМ(ЕстьВНовом),
	|	МИНИМУМ(ЕстьВСтаром)
	|ПО
	|	Рецепт";
	ИтогиПоРецептам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ИтогиПоРецептам.Следующий() Цикл
		Если ИтогиПоРецептам.Рецепт.Пустая() Тогда
			Прервать;
		ИначеЕсли ИтогиПоРецептам.ЕстьВНовом И ИтогиПоРецептам.ЕстьВНовом Тогда
			Возврат "Идентичный рецепт уже существует: " + ИтогиПоРецептам.Рецепт.ИмяРецепта;
		КонецЕсли;	
	КонецЦикла;
	
	ДокРецепт = СоздатьНовыйРецептГостя(Блюдо, ТаблицаРецепта);
	Если ДокРецепт = Неопределено Тогда
		Возврат "Не удалось создать рецепт гостя";
	Иначе
		Возврат "Создан " + ДокРецепт.ИмяРецепта;
	КонецЕсли;
		
КонецФункции

Функция РедактироватьРецептГостя()
		
КонецФункции


Функция ВыбратьВыполнитьДействие() Экспорт 
	
	Результат = ПолучитьСтруктуруРезультата();
	ВыбранноеДействие = ИнтерфейсРМ.ВыборИзСписка(МассивДействий);
	
	Если ВыбранноеДействие = "ВыбратьРецептГостя" Тогда
		Результат.Вставить(ВыбранноеДействие, ВыбратьРецептГостя());
	ИначеЕсли ВыбранноеДействие = "РедактироватьРецептГостя" Тогда
		Результат.Вставить(ВыбранноеДействие, РедактироватьРецептГостя());
	ИначеЕсли ВыбранноеДействие = "СохранитьРецептГостя" Тогда
		Результат.Вставить(ВыбранноеДействие, СохранитьРецептГостя());
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановкаНачальныхЗначений() Экспорт 
	ИнициализацияРеквизитов();	
КонецПроцедуры

Процедура ОбновитьТовары() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ", ТТ);
	Запрос.УстановитьПараметр("НомерКартыЛояльности", НомерКартыЛояльности);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РецептГостяТовары.Ссылка.Блюдо КАК Блюдо,
	|	РецептГостяТовары.Ссылка КАК Рецепт,
	|	РецептГостяТовары.Специфика КАК Специфика,
	|	РецептГостяТовары.СпецификаНоменклатура КАК СпецификаНоменклатура,
	|	РецептГостяТовары.Количество КАК Количество
	|ИЗ
	|	Документ.РецептГостя.Товары КАК РецептГостяТовары
	|ГДЕ
	|	РецептГостяТовары.Ссылка.НомерКартыЛояльности = &НомерКартыЛояльности
	|	И РецептГостяТовары.Ссылка.ТТ = &ТТ
	|	И РецептГостяТовары.Ссылка.Проведен";
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализацияРеквизитов()
	
	МассивДействий = Новый СписокЗначений;
	МассивДействий.Добавить("ВыбратьРецептГостя", 		"Выбрать из рецептов гостя");
	МассивДействий.Добавить("РедактироватьРецептГостя", "Редактировать рецепт гостя");
	МассивДействий.Добавить("СохранитьРецептГостя", 	"Сохранить текущий рецепт");
	
	ГлавнаяФорма = Неопределено;
	
КонецПроцедуры

//
Функция ПолучитьСтруктуруРезультата()
	
	Возврат Новый Структура(СтрСоединить(МассивДействий.ВыгрузитьЗначения(), ","));
	
КонецФункции

Функция СоздатьНовыйРецептГостя(Блюдо, ТаблицаРецепта)
	
	ДокОбъект = Документы.РецептГостя.СоздатьДокумент();
	ДокОбъект.Автор = глПользователь;
	ДокОбъект.Блюдо = Блюдо;
	ДокОбъект.Дата = ТекущаяДата();
	ДокОбъект.ДокументОснование = ГлавнаяФорма.Заказ.Ссылка;
	ДокОбъект.НомерКартыЛояльности = НомерКартыЛояльности;
	ДокОбъект.ТТ = ТТ;
	
	ДокОбъект.Товары.Загрузить(ТаблицаРецепта);
	Попытка
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Возврат ДокОбъект.Ссылка;
	Исключение
	    Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

#КонецОбласти


#КонецЕсли