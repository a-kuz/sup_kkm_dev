
#Если Клиент Тогда

Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна

Перем ТипЗначения	Экспорт;   // тип значения
Перем Длина			Экспорт;   // длина
Перем Точность		Экспорт;   // точность
Перем Кратность		Экспорт;   // кратность

Перем ТипПоляВвода	Экспорт;
Перем ФлагОткрытия	Экспорт;
Перем ФлагДроби		Экспорт;
Перем ДробнаяЧасть	Экспорт;

Перем ФормаВвода;

Перем ТаблицаПоиска Экспорт;
Перем AutohotkeyDll Экспорт;
// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
	
КонецПроцедуры

Процедура ЗаполнитьТовары(Товары) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 15
	|	ВыбранныеТовары.Товар КАК Товар,
	|	ПРЕДСТАВЛЕНИЕ(ВыбранныеТовары.Товар) КАК Представление,
	|	ЦеныСрезПоследних.Цена КАК Цена,
	|	МАКСИМУМ(ШтрихКоды.ШтрихКод) КАК ШтрихКод,
	|	МАКСИМУМ(ШтрихКоды.ШтрихКод) КАК ШК
	|ИЗ
	|	РегистрСведений.Цены.СрезПоследних(&ТекущаяДата, ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.Розничная)) КАК ЦеныСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВыбранныеТовары КАК ВыбранныеТовары
	|		ПО ЦеныСрезПоследних.Товар = ВыбранныеТовары.Товар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихКоды КАК ШтрихКоды
	|		ПО ЦеныСрезПоследних.Товар = ШтрихКоды.Товар
	|ГДЕ
	|	ВыбранныеТовары.РабочееМесто = &РабочееМесто
	|	И ВыбранныеТовары.Товар.ЕстьВПродаже
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбранныеТовары.Товар,
	|	ЦеныСрезПоследних.Цена,
	|	ВыбранныеТовары.ДатаВыбора
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыбранныеТовары.ДатаВыбора УБЫВ");
	Запрос.УстановитьПараметр("РабочееМесто", глРабочееМесто);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаНаСервере());
	ТЗ = Запрос.Выполнить().Выгрузить();
	Для Каждого Т Из ТЗ Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(),Т);
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Вызывается из обработчика ПередОткрытием форм этой обработки,
// выполняет инициализацию рабочего места
//
Процедура ДействияПередОткрытиемФормы(ТекущаяФорма, Отказ) Экспорт
	
	ФормаВвода = ТекущаяФорма;
	
	ТипПоляВвода = ПолучитьОписаниеТиповСтроки( 12 );
	
	ФормаВвода.ЭлементыФормы.ЗначениеВвода.ОграничениеТипа = ТипПоляВвода;
	ФормаВвода.ЭлементыФормы.ЗначениеВвода.Значение = ТипПоляВвода.ПривестиЗначение(ЗначениеВвода);
	
	ТаблицаПоиска = ОбщегоНазначенияПовтИсп.СформироватьТаблицуПоискаСПЛУ(Константы.ДатаОбновленияПризнакаНаличияВПродаже.Получить());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура Сброс() Экспорт
	
	ЗначениеВвода	= ТипПоляВвода.ПривестиЗначение();
	
	глОтсечкаПростоя();
	
КонецПроцедуры

Процедура Точка() Экспорт
	
	Если ФлагОткрытия Тогда
		Сброс();
		ФлагОткрытия = Ложь;
	КонецЕсли;
	
	
	
КонецПроцедуры
 
Процедура ОК() Экспорт
	
	МЗ = РегистрыСведений.ВыбранныеТовары.СоздатьМенеджерЗаписи();
	МЗ.РабочееМесто = глРабочееМесто;
	МЗ.Товар = Товар;
	МЗ.ДатаВыбора = ТекущаяДатаНаСервере();
	МЗ.Записать(Истина);
	Результат = Новый Структура("Товар, ШК", Товар, ШК);
	ФормаВвода.Закрыть(Результат);
	
КонецПроцедуры

#Область ОфлайнРежим

Процедура Печать(Вес) Экспорт 
	
	МЗ = РегистрыСведений.ВыбранныеТовары.СоздатьМенеджерЗаписи();
	МЗ.РабочееМесто = глРабочееМесто;
	МЗ.Товар = Товар;
	МЗ.ДатаВыбора = ТекущаяДатаНаСервере();
	МЗ.Записать(Истина);
	
	Если ЗначениеЗаполнено(Товар) Тогда
		Если НЕ Товар.ЗапросКоличества Тогда
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Неверное количество", "Количество для данного товара не может быть дробным","","ОК","");	
			Возврат;
		КонецЕсли;
		Если НЕ ПустаяСтрока(глПараметрыРМ.ИмяПринтераВесы) Тогда
			НапечататьЦенник(Товар, ШтрихкодСВесом(ШК, Вес), Вес);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ШтрихкодСВесом(Знач ШК, Знач Вес)
	
	ШК = Лев(ШК,7) + Прав("00000" + Формат(Вес*1000,"ЧН=0; ЧГ=0"),5);
	ШК = ШК + КонтрольныйСимвол(ШК);
	Возврат ШК;
	
КонецФункции
Функция КонтрольныйСимвол(ШК)

	
	Результат   = "";
	Сумма       = 0;
	Коэффициент = 1;
	
	Для Индекс = 1 По 12 Цикл
		ВремКодСимвола = КодСимвола(ШК, Индекс);
		Сумма       = Сумма + Коэффициент * (ВремКодСимвола - 48);
		Коэффициент = 4 - Коэффициент;
	КонецЦикла;
	Сумма     = (10 - Сумма % 10) % 10;
	Результат = Символ(Сумма + 48);
	
	Возврат Результат;
	
КонецФункции 
Процедура НапечататьЦенник(ВыбТов, ШК, Вес)
	Таб = Новый ТабличныйДокумент;
	макет = Обработки.ГлавнаяФормаСтанцияСканирования.ПолучитьМакет("Макет");
	ОбластьЭтикетка = макет.ПолучитьОбласть("Строка|Колонка");
	ОбластьЭтикетка.Параметры.Масса = Вес;
	Цена = ЦенаТовара(ВыбТов).Цена;
	ОбластьЭтикетка.Параметры.Цена = Цена;
	ОбластьЭтикетка.Параметры.Сумма = Окр(Число(Цена)*Вес,2);
	ОбластьЭтикетка.Параметры.ДатаВремя = ТекущаяДата();
	ОбластьЭтикетка.Параметры.наименование = ВыбТов.наименование;
	ОбластьЭтикетка.Параметры.Состав = ВыбТов.Номенклатура.ИнформацияДляВесов;//Товар["Состав"];
	ОбластьЭтикетка.Параметры.Фирма = глРабочееМесто.Фирма.НаименованиеЮридическогоЛица;
	ОбластьЭтикетка.Параметры.Адрес = глРабочееМесто.Фирма.Адрес;
	ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодов","КартинкаШтрихкода",ТипВнешнейКомпоненты.Native);
	ВнешняяШК = Новый("AddIn.КартинкаШтрихкода.Barcode");
	Если не ВнешняяШК.ГрафикаУстановлена ТОгда
		ЗаписьЖурналаРегистрации("Ошибка выполнения.Ошибка формирования ШК", УровеньЖурналаРегистрации.Ошибка,,,);
		Возврат;
	КонецЕсли;
	Если ВнешняяШК.НайтиШрифт("Tahoma") Тогда
		ВнешняяШК.Шрифт = "Tahoma";
	Иначе
		// Шрифт Tahoma в системе отсутствует.
		// Обойдем все доступные компоненте шрифты.
		Для Сч = 0 По ВнешняяШК.КоличествоШрифтов -1 Цикл
			// Получим очередной шрифт, доступный компоненте.
			ТекущийШрифт = ВнешняяШК.ШрифтПоИндексу(Сч);
			// Если шрифт доступен
			Если ТекущийШрифт <> Неопределено Тогда
				// Они и будет шрифтом для формирования штрихкода.
				ВнешняяШК.Шрифт = ТекущийШрифт;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ВнешняяШК.РазмерШрифта = 12;
	ВнешняяШК.Ширина = 260;//ОбластьЭтикетка.Рисунки.Штрихкод.Ширина*2;  было 250
	ВнешняяШК.Высота = 90;//ОбластьЭтикетка.Рисунки.Штрихкод.Высота*3;   было 61
	ВнешняяШК.АвтоТип = Ложь;
	ВнешняяШК.ТипКода = 1;
	ВнешняяШК.ОтображатьТекст = Истина;
	//шк = Лев(шк,7) + Прав("00000" + Формат(Вес*1000,"ЧН=0; ЧГ=0"),5);
	ВнешняяШК.ЗначениеКода = ШК;// + КонтрольныйСимвол(ШК);
	
	Если ВнешняяШК.Ширина < ВнешняяШК.МинимальнаяШиринаКода Тогда
		ВнешняяШК.Ширина = ВнешняяШК.МинимальнаяШиринаКода;
	КонецЕсли;
	Если ВнешняяШК.Высота < ВнешняяШК.МинимальнаяВысотаКода Тогда
		ВнешняяШК.Высота = ВнешняяШК.МинимальнаяВысотаКода;
	КонецЕсли;
	
	ОбластьЭтикетка.рисунки.Штрихкод.Картинка = Новый Картинка(ВнешняяШК.ПолучитьШтрихкод());
	Таб.Вывести(ОбластьЭтикетка);
	Таб.ИмяПринтера = глПараметрыРМ.ИмяПринтераВесы;//"TSC TDP-225";
	Таб.АвтоМасштаб = Истина;
	таб.ПолеСверху = 0;  // было 3
	таб.ПолеСлева = 0;
	таб.ПолеСнизу = 0;
	таб.ПолеСправа = 0;
	таб.Напечатать();
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);
Попытка
	AutohotkeyDll = РаботаСокнами.AHK(,"ПоискТовара");
Исключение
КонецПопытки;


#КонецЕсли
