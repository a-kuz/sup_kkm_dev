
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЖИДАНИЯ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередОткрытиемФормы(ЭтаФорма, Отказ);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередЗакрытиемФормы(ЭтаФорма, Отказ);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// заставка
	ЭлементыФормы.ПолеКартинкиЗаставка.Картинка = БиблиотекаКартинок["ЗаставкаГлавнойФормыКПК"];
	
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	// из-за плана зала ВводДоступен() не всегда срабатывает
	Если глСтекОкон.Количество()=1 Тогда
		ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаНовыйЗаказНажатие(Элемент)
	
	СоздатьНовыйЗаказ();
	
КонецПроцедуры

Процедура КнопкаСписокЗаказовНажатие(Элемент)
	
	ОткрытьСписокЗаказов();
	
КонецПроцедуры

Процедура КнопкаРежимАдминистратораНажатие(Элемент)
	
	ОткрытьРежимАдминистратора();
	
КонецПроцедуры

Процедура КнопкаАвторизацияНажатие(Элемент)
	
	Авторизация( Истина );
	
КонецПроцедуры

Процедура КнопкаЗаблокироватьНажатие(Элемент)
	
	Заблокировать();
	
КонецПроцедуры

Процедура КнопкаПланЗалаНазадНажатие(Элемент)
	
	ПереключитьПланЗала(-1);
	ПоказатьПланЗала();
	
КонецПроцедуры

Процедура КнопкаПланЗалаВпередНажатие(Элемент)
	
	ПереключитьПланЗала(1);
	ПоказатьПланЗала();
	
КонецПроцедуры

