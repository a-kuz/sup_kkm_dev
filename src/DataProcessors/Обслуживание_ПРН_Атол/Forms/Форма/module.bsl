
Перем ТаблицаЗадания;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ОписаниеПрофиля) ТОгда
		Предупреждение("Данная обработка открывается только из справочника торгового оборудования!",5);
		Отказ = Истина;
		Возврат;  		
	КонецЕсли;   
	
	// заполнение списка COM, LPT и Ethernet портов
	СписокПортов = ЭлементыФормы.PortNumber.СписокВыбора;
	Для н=1 По 32 Цикл
		СписокПортов.Добавить(н,"COM"+н);
	КонецЦикла;
	Для н=33 По 36 Цикл
		СписокПортов.Добавить(н,"LPT "+(н-32));
	КонецЦикла;
	СписокПортов.Добавить(99,"TCP/IP (клиент)");
	
	// заполнение списка скоростей обмена
	СписокСкоростей = ЭлементыФормы.BaudRate.СписокВыбора;
	СписокСкоростей.Добавить(3 ,"1200");
	СписокСкоростей.Добавить(4 ,"2400");
	СписокСкоростей.Добавить(5 ,"4800");
	СписокСкоростей.Добавить(7 ,"9600");
	СписокСкоростей.Добавить(10,"19200");
	СписокСкоростей.Добавить(12,"38400");
	СписокСкоростей.Добавить(14,"57600");
	СписокСкоростей.Добавить(18,"115200");
	
	// заполнение списка скоростей обмена
	СписокКонтроль = ЭлементыФормы.FlowControl.СписокВыбора;
	СписокКонтроль.Добавить(0 ,"нет");
	СписокКонтроль.Добавить(1 ,"RTS/CTS");
	
	// заполнение списка наборов символов
	Таб = ПолучитьМакет("НаборыСимволов");
	Для НомСтр=1 По Таб.ВысотаТаблицы Цикл
		Значение = Таб.Область(НомСтр,1).Текст;
		ЭлементыФормы.CharSet.СписокВыбора.Добавить(НомСтр-1,Значение);
	КонецЦикла;
	
	// заполнение списка кодовых страниц
	Таб = ПолучитьМакет("Кодировки");
	Для НомСтр=1 По Таб.ВысотаТаблицы Цикл
		Значение		=Число(Таб.Область(НомСтр,1).Текст);
		Представление	=СокрП(Таб.Область(НомСтр,2).Текст);
		ЭлементыФормы.CodePage.СписокВыбора.Добавить(Значение,Представление);
	КонецЦикла;
	
	// заполнение списка параметров отрезки
	СписокПараметровОтрезки = ЭлементыФормы.CutValue.СписокВыбора;
	СписокПараметровОтрезки.Добавить(0,"Не поддерживается");
	СписокПараметровОтрезки.Добавить(1,"Полная отрезка");
	СписокПараметровОтрезки.Добавить(2,"Частичная отрезка");
	СписокПараметровОтрезки.Добавить(3,"Полная отрезка с промоткой");
	СписокПараметровОтрезки.Добавить(4,"Частичная отрезка с промоткой");
	
	Если ЗначениеЗаполнено(DRV.CapStationSlip) Тогда
		// выброс подкладного документа
		НаправленияВыбросаПД = ЭлементыФормы.SlipValue.СписокВыбора;
		НаправленияВыбросаПД.Добавить(3,"Назад");
		НаправленияВыбросаПД.Добавить(4,"Вперед");
	Иначе
		Страницы = ЭлементыФормы.Панель1.Страницы;
		Страницы.Удалить(Страницы.ПД);
	КонецЕсли;
	
	// для печати теста
	ТаблицаЗадания = Новый ТаблицаЗначений;
	ТаблицаЗадания.Колонки.Добавить("Данные");
	ТаблицаЗадания.Колонки.Добавить("ТипДанных");
	ТаблицаЗадания.Колонки.Добавить("Параметры");
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Флаг = PortNumber <= 32;
	ЭлементыФормы.BaudRate				.Доступность = Флаг;
	ЭлементыФормы.НадписьСкорость		.Доступность = Флаг;
	ЭлементыФормы.FlowControl			.Доступность = Флаг;
	ЭлементыФормы.НадписьКонтрольПотока	.Доступность = Флаг;
	
	Флаг = PortNumber=99;
	ЭлементыФормы.IPAddress		.Доступность = Флаг;
	ЭлементыФормы.IPPort		.Доступность = Флаг;
	ЭлементыФормы.НадписьIPадрес.Доступность = Флаг;
	ЭлементыФормы.НадписьIPпорт	.Доступность = Флаг;
	
	ЭлементыФормы.НадписьКолвоСтрокЗадания.Заголовок = " Объектов в задании: " + ТаблицаЗадания.Количество();
	
	Если НЕ ВнешнийСигнал Тогда
		ЭлементыФормы.НадписьТестСигналДлительность.Заголовок = "Длительность:";
	Иначе
		ЭлементыФормы.НадписьТестСигналДлительность.Заголовок = "Кол-во повторов:";
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Сохранение параметров и закрытие формы
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЗаполнитьЗначенияСвойств(ПараметрыТО,ЭтотОбъект);
	
	Закрыть("ОК");
	
КонецПроцедуры

Процедура ПечатьТестаНажатие(Элемент)
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ТаблицаЗадания"	, ТаблицаЗадания);
	
	// посылка задания на печать
	ВыполнитьДействие("Печать", ПараметрыПечати);
	
	// выводим результат
	Если Результат.Ошибка Тогда
		Предупреждение(Результат.Описание + Символы.ПС + Результат.Подробно);
	Иначе
		Предупреждение("ОК!",3);
	КонецЕсли;
	
	ВыполнитьДействие("Отключить");
	
КонецПроцедуры

Процедура ОчиститьЗаданиеНажатие(Элемент)
	
	ТаблицаЗадания.Очистить();
	
КонецПроцедуры

Процедура ТестСтрокаДобавитьНажатие(Элемент)
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ТестСтрока;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = ТестВыравнивание+","+
	?(ТестСтрокаЖирный			,"Жирный"		,"")+","+
	?(ТестСтрокаДвойнаяВысота	,"ДвойнаяВысота","")+","+
	?(ТестСтрокаДвойнаяШирина	,"ДвойнаяШирина","")+","+
	?(ТестСтрокаПодчеркнутый	,"Подчеркнутый"	,"")+","+
	?(ТестПереводСтроки			,"ПереводСтроки","");
	
КонецПроцедуры

Процедура ТестКартинкаДобавитьНажатие(Элемент)
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ТестКартинка;
	Задание.ТипДанных = "Картинка";
	Задание.Параметры = ТестКартинкаВыравнивание+","+ТестКартинкаПоворот;
	
КонецПроцедуры

Процедура ТестСигналДобавитьНажатие(Элемент)
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ТестСигналДлительность;
	Задание.ТипДанных = "Сигнал";
	Задание.Параметры = "";	// не используется
	
КонецПроцедуры

Процедура ТестКартинкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	ФильтрДиалога = "Картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf";
	Диалог = РаботаСФайлами.ПолучитьДиалогВыбораФайлов(,,ФильтрДиалога);
           
	Если Диалог.Выбрать() Тогда
		Элемент.Значение = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

Процедура ТестКартинкаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ПустаяСтрока(Элемент.Значение) Тогда
		Возврат;
	ИначеЕсли РаботаСФайлами.ПроверитьСуществованиеФайла(Элемент.Значение,,Ложь) Тогда
		ЗапуститьПриложение(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры
