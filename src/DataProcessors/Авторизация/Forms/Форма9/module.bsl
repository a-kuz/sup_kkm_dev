
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередОткрытиемФормы(ЭтаФорма, Отказ);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
		
	Если ЗапретОтмены Тогда
		РазрешитьЗакрытие = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьСменуКассы()) Или Час(ТекущаяДата())<16 Тогда
		Высота = 585;
	КонецЕсли;
	
	Если ЗапретБыстрогоВыбора Тогда
		СкрытьСотрудников();
	Иначе
		ОбновитьСписокПоследних();
	КонецЕсли;                    	
	
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
КонецПроцедуры

Процедура СкрытьСотрудников() Экспорт
	Для Инд = 1 По 4 Цикл
		ВидимостьКнопки = Ложь;
		УстановитьВидимостьДоступностьКнопки("Сотрудник"+Инд,ВидимостьКнопки);
	КонецЦикла;
	
	ЭлементыФормы.Лого.Видимость = Истина
	//Ширина = 327;
	//ЭлементыФормы.НадписьЗаголовок.Ширина = 327;
КонецПроцедуры

Процедура ОбновитьСписокПоследних() Экспорт
	
	Для Инд = 1 По 4 Цикл
		ВидимостьКнопки = глПоследниеСотрудники.Количество()>=Инд;
		УстановитьВидимостьДоступностьКнопки("Сотрудник"+Инд,ВидимостьКнопки);
		Если ВидимостьКнопки Тогда
			ЭлементыФормы["Сотрудник"+Инд].Заголовок = глПоследниеСотрудники[Инд-1];
		КонецЕсли;
	КонецЦикла;
	
	
	Если глПоследниеСотрудники.Количество() Тогда
		Ширина = 787;
		ЭлементыФормы.НадписьЗаголовок.Ширина = 787;
		ЭлементыФормы.Лого.Видимость = Ложь;
	Иначе
		//Ширина = 327;
		//ЭлементыФормы.НадписьЗаголовок.Ширина = 327;
		ЭлементыФормы.Лого.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьВидимостьДоступностьКнопки(ИмяКнопки, Доступность, Акцент = 0, Свойство = "Видимость") Экспорт
	Кнопка = ЭлементыФормы[ИмяКнопки];
	МассивТеней = Массив(ЭлементыФормы[ИмяКнопки+"Тень"]);	
	
	ЦветКнопки = ?(Акцент, Метаданные.ЭлементыСтиля.Акцент.Значение, Метаданные.ЭлементыСтиля.ЦветТемы.Значение);
	ЦветФонаНеактивнойКнопки = Метаданные.ЭлементыСтиля.НеактивнаяКнопка.Значение;
	ЦветТекстаНеактивнойКнопки = Метаданные.ЭлементыСтиля.НеактивныйЭлемент.Значение;
	
	Кнопка[Свойство] = Доступность;
	Кнопка.ЦветФонаКнопки 	=  ?(Доступность, ЦветКнопки, ЦветФонаНеактивнойКнопки);
	Кнопка.ЦветТекстаКнопки =  ?(Доступность, WebЦвета.Белый, 	ЦветТекстаНеактивнойКнопки);
	Кнопка.ЦветРамки = Кнопка.ЦветФонаКнопки;
	
	
	Если Не Доступность Тогда
		элЛево = 1;
		элШирина = 300;
		
	Иначе
		элЛево = 350;	
	КонецЕсли;
	теньЛево = элЛево + 3;
	
	Кнопка.Лево = элЛево;
	Кнопка.Ширина = элШирина;
	
	Для каждого Тень Из МассивТеней Цикл
		Тень.Лево = элЛево+3;
		Тень.Ширина = элШирина;
		Тень.Видимость = Доступность;
		
	КонецЦикла; 
				
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	//Если НЕ ВводДоступен() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//_Знач = ОбработкаВнешнихСобытий.ПолучитьДанные(Источник,Событие,Данные);
	//
	//КартаДоступа = ОбщегоНазначенияПовтИсп.НайтиПоРеквизиту("Справочник.КартыДоступа", "Идентификатор",_Знач);
	//
	//Если ЗначениеЗаполнено(КартаДоступа) Тогда
	//	//:КартаДоступа=Справочники.КартыДоступа.ПустаяСсылка();
	//	Привязка = КартаДоступа.Привязка;
	//	Если ТипЗнч(Привязка) = Тип("СправочникСсылка.Сотрудники") и ЗначениеЗаполнено(Привязка) Тогда
	//		Закрыть( КартаДоступа.Привязка.КодДоступа );
	//	Иначе
	//		ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Карта доступа", "Карта доступа не привязана ни к одному сотруднику!","","ОК","");
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

Процедура ВыводОшибки_Ожидание() Экспорт 
	ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Карта доступа", "Карта доступа не привязана ни к одному сотруднику!","","ОК","", , , 5);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаОКНажатие(Элемент)
	
	ОК();
	
КонецПроцедуры

Процедура КнопкаТочкаНажатие(Элемент)
	
	Точка();
	
КонецПроцедуры

Процедура КнопкаСбросНажатие(Элемент)
	
	Сброс();
	
КонецПроцедуры

Процедура Кнопка0Нажатие(Элемент)
	
	НажатиеКнопки("0");
	
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	НажатиеКнопки("1");
	
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	
	НажатиеКнопки("2");
	
КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	
	НажатиеКнопки("3");
	
КонецПроцедуры

Процедура Кнопка4Нажатие(Элемент)
	
	НажатиеКнопки("4");
	
КонецПроцедуры

Процедура Кнопка5Нажатие(Элемент)
	
	НажатиеКнопки("5");
	
КонецПроцедуры

Процедура Кнопка6Нажатие(Элемент)
	
	НажатиеКнопки("6");
	
КонецПроцедуры

Процедура Кнопка7Нажатие(Элемент)
	
	НажатиеКнопки("7");
	
КонецПроцедуры

Процедура Кнопка8Нажатие(Элемент)
	
	НажатиеКнопки("8");
	
КонецПроцедуры

Процедура Кнопка9Нажатие(Элемент)
	
	НажатиеКнопки("9");
	
КонецПроцедуры

Процедура ОтменаНажатие(Элемент)
	Закрыть();
КонецПроцедуры

Процедура КнопкаВыключитьКассуНажатие(Элемент)
	
	Закрыть("ВыходОС");

КонецПроцедуры

Процедура СотрудникНажатие(Элемент)
	Индекс = Число(Прав(Элемент.Имя, 1)) - 1;
	Закрыть(глПоследниеСотрудники[Индекс].КодДоступа);
КонецПроцедуры

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота, ", Ложь, 85,55);
ЭлементыФормы.КнопкаВыключитьКассу.Заголовок = "   " + Шрифты.ПолучитьСимвол("power_off");

Если ЗначениеЗаполнено(Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьСменуКассы()) Или Час(ТекущаяДата())<16 Тогда
	ЭлементыФормы.НадписьВыключитьКассу.Видимость = 0;
	ЭлементыФормы.КнопкаВыключитьКассу.Видимость = 0;	
	
	ЭлементыФормы.НадписьВыключитьКассу.Верх = 1;
	ЭлементыФормы.КнопкаВыключитьКассу.Верх = 1;	
	Высота = 585;
Иначе
	Высота = 608;
КонецЕсли;


