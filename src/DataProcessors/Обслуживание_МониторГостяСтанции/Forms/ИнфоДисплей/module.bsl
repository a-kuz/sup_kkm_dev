
//*******************************************************************************
//* ПанельКонтент: страница ВыдачаЗаказ должна быть первой (перед ПриемЗаказа)! *
//* Иначе почему-то появляются полосы прокрутки в режиме выдачи.                *
//*******************************************************************************


Перем ТекНомерСтрокиЗаказа; // номер текущей строки заказа
Перем ТекНомерСтрокиТабДок; // номер строки таб.документа, которая сделана текущей 

Процедура ПоказатьСледующуюКартинку_Ожидание()
	ПоказатьСледующуюКартинку();
	//Если РазрешитьСменуКартинок = 0 тогда возврат; КонецЕсли;
	//Если РазрешитьСменуКартинок = 2 тогда //пропускаем одну смену 
	//	РазрешитьСменуКартинок = 1;
	//	возврат; 
	//КонецЕсли;
	//НомерТекущейКартинки = НомерТекущейКартинки + 1;
	//Если НомерТекущейКартинки >= СписокКартинок.Количество() тогда
	//	НомерТекущейКартинки = 0;
	//КонецЕсли;
	//DRV.ЭлементыФормы.ПолеКартинки.Картинка		= СписокКартинок[НомерТекущейКартинки].Хранилище.Получить();
	//DRV.ЭлементыФормы.тНаименование.Картинка	= СписокКартинок[НомерТекущейКартинки].Хранилище.Получить();
	
КонецПроцедуры

Процедура УстановитьПоложениеОкна() Экспорт
	Попытка
		А = РаботаСокнами.AHK();
		Скрипт = "
		|#NoTrayIcon
		|Winget, hwnd, id, %Заголовок
		|if (hwnd)
		|{
		|	X := A_ScreenWidth-4
		|	W := 804
		|	H := 620
		|	WinMove, ahk_id %hwnd%, , X, -20,%W%,%H%			
		|	WinSet, Region, 9-20, ahk_id %hwnd%
		|}
		|";
		Скрипт = СтрЗаменить(Скрипт, "%Заголовок", Заголовок);
		А.ahktextDll(Скрипт);
		
		//A_ = РаботаСокнами.AHK();            
		//Скрипт = "
		//|#NoTrayIcon
		//|WinGet, hwnd, id, Информационный дисплей
		//|ControlGetPos, X, Y, W, H, V8FormElement3, ahk_id %hwnd%
		//|X := X + 4
		//|W := W - 9
		//|;WinSet, Region, %X%-%Y% W%W% H%H%, ahk_id %hwnd%
		//|SysGet, MonitorCount, MonitorCount
		//|IF (MonitorCount < 2) 
		//|{
		//| WinSet, Region, 1-1 W20 H20, ahk_id %hwnd%
		//|}";
		//A_.ahktextdll(Скрипт);
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

//
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы.Информационная;
	Если глПараметрыРМ = Неопределено Тогда
		Возврат;
	КонецЕсли;	
		
КонецПроцедуры

//
//
Процедура ПриОткрытии()
	
	ОбновитьТаймер();
	
	ПодключитьОбработчикОжидания("ОбновитьТаймер", 1);
	Если не Изображение.Пустая() тогда
		DRV.ЭлементыФормы.ПолеКартинки.Картинка		= СписокКартинок[НомерТекущейКартинки].Хранилище.Получить();
		DRV.ЭлементыФормы.тНаименование.Картинка	= СписокКартинок[НомерТекущейКартинки].Хранилище.Получить();
		РазрешитьСменуКартинок = 1;
		ПодключитьОбработчикОжидания("ПоказатьСледующуюКартинку_Ожидание", 5);
	КонецЕсли;
	
	//// Установить картинку рекламную
	//Если НЕ Изображение.Пустая() Тогда
	//	ЭлементыФормы.ПолеКартинки.Картинка		= Изображение.Хранилище.Получить();
	//	ЭлементыФормы.тНаименование.Картинка	= Изображение.Хранилище.Получить();
	//КонецЕсли;
	
	ЭлементыФормы.тНаименование.Заголовок		= Строка(глРабочееМесто);
	
	ЭлементыФормы.НадписьСтанция.Заголовок  = "Сумма по станции:";
	ЭлементыФормы.тСуммаДозаказ.Видимость   = Истина;
	ЭлементыФормы.НадписьДозаказ.Видимость  = Истина;
	
	ЭлементыФормы.тСуммаДозаказ.Заголовок   = Строка(ФорматСумм(0));
	ЭлементыФормы.тСуммаПоСтанции.Заголовок = Строка(ФорматСумм(0));
	ЭлементыФормы.тСуммаКОплате.Заголовок   = Строка(ФорматСумм(0));
	
	ТекНомерСтрокиЗаказа = 0;
	ТекНомерСтрокиТабДок = 0;
	
	ПодключитьОбработчикОжидания("УстановитьПоложениеОкна",2,1);
	
КонецПроцедуры

//
//
Процедура ПриЗакрытии()
	
КонецПроцедуры

// Вывести таблицу заказа на ИнфоДисплей
//
Процедура ЗаполнитьТаблицуЗаказа() 
		
	ТабличныйДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ФиксацияСверху = 1;
	//ТабличныйДокумент.ОтображатьЗаголовки = Истина;
	
	Макет = ЭтотОбъект.ПолучитьМакет(РежимВывода+"800х600");
	
	// Сообщить("Высота="+ТабличныйДокумент.Высота+", ширина="+ТабличныйДокумент.Ширина);
	// Фактический размер табл.документа 490*779
	ВысотаЗаголовка	= 1/23.1; // 23.1 - столько строк заголовка влезет по высоте
	ВысотаТовара 	= 1/17.4;
	ВысотаСпецифики	= 1/28.6;
	
	ОбластьМакетаЗаголовок		= Макет.ПолучитьОбласть("Заголовок|ВидимаяОбласть");
	// Товар
	ОбластьМакетаТовар1			= Макет.ПолучитьОбласть("СтрокаТовара1|ВидимаяОбласть");
	ОбластьМакетаТовар2			= Макет.ПолучитьОбласть("СтрокаТовара2|ВидимаяОбласть");
	ОбластьМакетаТоварРед 		= Макет.ПолучитьОбласть("СтрокаТовараРед|ВидимаяОбласть");
	// Специфики
	ОбластьМакетаСпецифика1		= Макет.ПолучитьОбласть("СтрокаСпецифики1|ВидимаяОбласть");
	ОбластьМакетаСпецифика2		= Макет.ПолучитьОбласть("СтрокаСпецифики2|ВидимаяОбласть");
    ОбластьМакетаСпецификаРед	= Макет.ПолучитьОбласть("СтрокаСпецификиРед|ВидимаяОбласть");
	
	Если СуммаПоСтанцииНач <> 0 Тогда
		// это дозаказ - новые строки выделяем другим цветом
		ОбластьМакетаТоварНов1		= Макет.ПолучитьОбласть("СтрокаТовараНов1|ВидимаяОбласть");
		ОбластьМакетаТоварНов2		= Макет.ПолучитьОбласть("СтрокаТовараНов2|ВидимаяОбласть");
		
		ОбластьМакетаСпецификаНов1	= Макет.ПолучитьОбласть("СтрокаСпецификиНов1|ВидимаяОбласть");
		ОбластьМакетаСпецификаНов2	= Макет.ПолучитьОбласть("СтрокаСпецификиНов2|ВидимаяОбласть");
	Иначе
		// это первые товары в заказе - выделять строки не нужно
		ОбластьМакетаТоварНов1		= ОбластьМакетаТовар1;
		ОбластьМакетаТоварНов2		= ОбластьМакетаТовар2;
		
		ОбластьМакетаСпецификаНов1	= ОбластьМакетаСпецифика1;
		ОбластьМакетаСпецификаНов2	= ОбластьМакетаСпецифика2;
	КонецЕсли; 
	
	ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
	
	Кл = 0;
	СтатДозаказ	= Перечисления.СтатусыПозицийЗаказа.Дозаказ;
	ТекСтанция = ?(глПараметрыРМ.тип = Перечисления.ТипыРМ.Производство,глРабочееМесто.Станция,Справочники.Станции.ПустаяСсылка());
	ФильтрПоСтанции = ЗначениеЗаполнено(ТекСтанция);
	НовНомерСтрокиТабДок = 0;
	СуммаПоСтанции = 0;
	
	// Высота строк заказов в таб. документе.
	// Одна строка заказа состоит из нескольких строк таб.документа: строка товара + строка(и) специфик
	// "НомерНижнейСтроки" - номер самой последней строки таб. документа, относящейся к товару.
	// "Высота" - высота всей строки в долях от общей высоты таблицы.
	РазметкаСтрок = Новый ТаблицаЗначений;
	РазметкаСтрок.Колонки.Добавить("НомерНижнейСтроки");
	РазметкаСтрок.Колонки.Добавить("Высота");
	
	СтрокиТоваров = ТаблицаЗаказа.Строки;
	
	// Проверим: будет ли выведена текущая строка заказа
	Если (1 <= НомерСтрокиЗаказа) И (НомерСтрокиЗаказа <= СтрокиТоваров.Количество()) Тогда
		СтрокаЗаказа = СтрокиТоваров[НомерСтрокиЗаказа-1];
		
		Если (ФильтрПоСтанции И СтрокаЗаказа.Станция <> ТекСтанция) ИЛИ (СтрокаЗаказа.Количество = 0) Тогда
			// строка не будет выведена; сделаем текущей "прошлую" строку
			НомерСтрокиЗаказа = Мин(ТекНомерСтрокиЗаказа, СтрокиТоваров.Количество());
		КонецЕсли;		
	КонецЕсли; 
	
	Для Каждого СтрокаЗаказа Из СтрокиТоваров Цикл
		
		// Показываем строки только текущей станции
		Если ФильтрПоСтанции И СтрокаЗаказа.Станция <> ТекСтанция Тогда
			Продолжить;
		КонецЕсли;		
		
		СуммаПоСтанции = СуммаПоСтанции + СтрокаЗаказа.СуммаРеализации; 
		
		НомерТекущей = СтрокиТоваров.Индекс(СтрокаЗаказа) + 1;
		
		// Удаленные не показываем
		Если СтрокаЗаказа.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;		
		
		Кл = Кл + 1;
		Четная = (Кл % 2 = 0);
		
		Если НомерТекущей = НомерСтрокиЗаказа Тогда
			ОбластьСтрока 		= ОбластьМакетаТоварРед;
			ОбластьСпецифика 	= ОбластьМакетаСпецификаРед;
			
		ИначеЕсли СтрокаЗаказа.Статус = СтатДозаказ Тогда
			// Новые строки
			Если Четная Тогда
				ОбластьСтрока 		= ОбластьМакетаТоварНов2;
				ОбластьСпецифика 	= ОбластьМакетаСпецификаНов2;
			Иначе
				ОбластьСтрока 		= ОбластьМакетаТоварНов1;
				ОбластьСпецифика 	= ОбластьМакетаСпецификаНов1;
			КонецЕсли; 
		Иначе
			// Старые строки
			Если Четная Тогда
				ОбластьСтрока 		= ОбластьМакетаТовар2;
				ОбластьСпецифика 	= ОбластьМакетаСпецифика2;
			Иначе
				ОбластьСтрока 		= ОбластьМакетаТовар1;
				ОбластьСпецифика 	= ОбластьМакетаСпецифика1;
			КонецЕсли; 
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Заполнить(СтрокаЗаказа);
		ОбластьСтрока.Параметры.Кл = ?(РежимВывода = "Заказ", Кл, СтрокаЗаказа.Очередность);
		
		ТабличныйДокумент.Вывести(ОбластьСтрока); 
		
		СтрокаРазметки = РазметкаСтрок.Добавить();
		СтрокаРазметки.НомерНижнейСтроки = ТабличныйДокумент.ВысотаТаблицы;
		СтрокаРазметки.Высота = ВысотаТовара;
		
		Если НомерТекущей = НомерСтрокиЗаказа Тогда
			НовНомерСтрокиТабДок = ТабличныйДокумент.ВысотаТаблицы;
		КонецЕсли;
		
		// Если есть специфики добавляем
		Если ЗначениеЗаполнено(СтрокаЗаказа.Строки) Тогда
			МассивСтрок = ПолучитьМассивСтрокСпецифик(СтрокаЗаказа, 90);
			
			Для К = 0 По МассивСтрок.Количество() - 1 Цикл
				ОбластьСпецифика.Параметры.Наименование = МассивСтрок[К];
				ТабличныйДокумент.Вывести(ОбластьСпецифика); 
			КонецЦикла; 
			
			СтрокаРазметки.НомерНижнейСтроки = ТабличныйДокумент.ВысотаТаблицы;
			СтрокаРазметки.Высота = СтрокаРазметки.Высота + (ВысотаСпецифики * МассивСтрок.Количество());
			
			Если НомерТекущей = НомерСтрокиЗаказа Тогда
				НовНомерСтрокиТабДок = ТабличныйДокумент.ВысотаТаблицы;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЦикла;
	
	// Номер текущей строки таб.документа не должен быть больше высоты выведенной таблицы. 
	// Высота может уменьшиться при удалении строк в заказе.
	ТекНомерСтрокиТабДок = Мин(ТекНомерСтрокиТабДок, ТабличныйДокумент.ВысотаТаблицы);
	
	Если НовНомерСтрокиТабДок = 0 Тогда
		НовНомерСтрокиТабДок = ТабличныйДокумент.ВысотаТаблицы;
		
	ИначеЕсли НовНомерСтрокиТабДок > ТабличныйДокумент.ВысотаТаблицы Тогда	
		НовНомерСтрокиТабДок = ТабличныйДокумент.ВысотаТаблицы;
	КонецЕсли; 

	
	// *** Итоги ***
	Сумма	= ТаблицаЗаказа.Строки.Итог("Сумма");
	Итого	= ТаблицаЗаказа.Строки.Итог("СуммаРеализации");
	ЭлементыФормы.НадписьСтанция.Заголовок  = "Сумма по станции:";
	ЭлементыФормы.тСуммаДозаказ.Видимость   = Истина;
	ЭлементыФормы.НадписьДозаказ.Видимость  = Истина;
	ЭлементыФормы.тСуммаДозаказ.Заголовок   = Строка(ФорматСумм(СуммаПоСтанции - СуммаПоСтанцииНач));
	ЭлементыФормы.тСуммаПоСтанции.Заголовок = Строка(ФорматСумм(СуммаПоСтанции));
	ЭлементыФормы.тСуммаКОплате.Заголовок   = Строка(ФорматСумм(Итого));

	
	// *** Опеределение строки, которую необходимо сделать текущей ***
	// Таблица полностью замещается. Текущая активная область не сохраняется.
	
	ВысотаСтраницы    = 1 - ВысотаЗаголовка;	
	
	НачСтрокаСтраницы = ОпределитьГраницуСтраницы(РазметкаСтрок, ВысотаСтраницы, ТекНомерСтрокиТабДок, Ложь);
	Если НачСтрокаСтраницы = Неопределено Тогда
		НачСтрокаСтраницы = 1;
	КонецЕсли; 
	
	Если НомерСтрокиЗаказа = ТекНомерСтрокиЗаказа Тогда
		// Строка товара не изменилась => Делаем текущей ту же самую строку, что была в прошлый раз.
		Если (НачСтрокаСтраницы <= НовНомерСтрокиТабДок) И (НовНомерСтрокиТабДок <= ТекНомерСтрокиТабДок) Тогда
			УстановитьТекущуюСтрокуЗаказа(ТекНомерСтрокиТабДок);
		Иначе
			// изменилась высота текущей страницы так, что строка вышла за её пределы => Найдём новую конечную строку.
			КонСтрокаСтраницы = ОпределитьГраницуСтраницы(РазметкаСтрок, ВысотаСтраницы, НовНомерСтрокиТабДок, Истина);
			Если КонСтрокаСтраницы <> Неопределено Тогда
				НовНомерСтрокиТабДок = КонСтрокаСтраницы;
			КонецЕсли; 
			
			УстановитьТекущуюСтрокуЗаказа(НовНомерСтрокиТабДок);
			ТекНомерСтрокиТабДок = НовНомерСтрокиТабДок;
		КонецЕсли; 
		
	ИначеЕсли (НачСтрокаСтраницы <= НовНомерСтрокиТабДок) И (НовНомерСтрокиТабДок <= ТекНомерСтрокиТабДок) Тогда	
		// Строка останется в пределах текущей страницы, если сделаем текущей ту же самую строку, что была в прошлый раз.
		УстановитьТекущуюСтрокуЗаказа(ТекНомерСтрокиТабДок);
		
	ИначеЕсли НомерСтрокиЗаказа < ТекНомерСтрокиЗаказа Тогда
		// Сдвиг текущей строки вверх => Нужно от новой строки отсчитать вниз строки до самой последней строки, 
		// которая ещё будет влезать на экран. Делаем последнюю строку текущей.
		КонСтрокаСтраницы = ОпределитьГраницуСтраницы(РазметкаСтрок, ВысотаСтраницы, НовНомерСтрокиТабДок, Истина);
		Если КонСтрокаСтраницы <> Неопределено Тогда
			НовНомерСтрокиТабДок = КонСтрокаСтраницы;
		КонецЕсли; 
		
		УстановитьТекущуюСтрокуЗаказа(НовНомерСтрокиТабДок);
		ТекНомерСтрокиТабДок = НовНомерСтрокиТабДок;
		
	Иначе
		// Сдвиг текущей строки вниз => Делаем текущей саму строку.
		УстановитьТекущуюСтрокуЗаказа(НовНомерСтрокиТабДок);
		ТекНомерСтрокиТабДок = НовНомерСтрокиТабДок;
	КонецЕсли; 
	
	ТекНомерСтрокиЗаказа = НомерСтрокиЗаказа;
	
КонецПроцедуры

// < КС_ВДВ ------------------------------------------------------------ 
Процедура УстановитьТекущуюСтрокуЗаказа(НомерСтрокиТД)

	Если НомерСтрокиТД = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ТабличныйДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	
	ТекНомер = Мин(НомерСтрокиТД, ТабличныйДокумент.ВысотаТаблицы);
	
	ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область("R"+НомерСтрокиТД+"C1");	

КонецПроцедуры // КС_ВДВ > ------------------------------------------------------------ 

// < КС_ВДВ ------------------------------------------------------------ 
Функция ОпределитьГраницуСтраницы(ТабРазметка, Знач ВысотаСтраницы, ВыбСтрока, ИскатьВниз)

	ГраницаСтраницы = Неопределено;
	
	СтрокаРазметки = ТабРазметка.Найти(ВыбСтрока, "НомерНижнейСтроки");

	Если СтрокаРазметки <> Неопределено Тогда
		ВысотаТек = 0;
		Индекс = ТабРазметка.Индекс(СтрокаРазметки);
		МаксИндекс = ТабРазметка.Количество() - 1;
		
		Пока (0 <= Индекс) И (Индекс <= МаксИндекс) Цикл
			СтрокаРазметки = ТабРазметка[Индекс];
			
			ВысотаТек = ВысотаТек + СтрокаРазметки.Высота;
			
			Если ВысотаТек >= ВысотаСтраницы Тогда
				Прервать;
			КонецЕсли; 
			
			ГраницаСтраницы = СтрокаРазметки.НомерНижнейСтроки;
			
		    Индекс = ?(ИскатьВниз, Индекс + 1, Индекс - 1);
		КонецЦикла; 
	КонецЕсли; 
	
	Возврат ГраницаСтраницы;
	
КонецФункции // КС_ВДВ > ------------------------------------------------------------ 

// < КС_ВДВ ------------------------------------------------------------ 
// Вывести таблицы марок на ИнфоДисплей
//
Процедура ЗаполнитьТаблицуВыдачи(ВывестиМаркиПриготовление=Ложь) 
		
	ТекСтанция = глРабочееМесто.Станция;
	
	Если ВывестиМаркиПриготовление Тогда
		
		// ПРИГОТОВЛЕНИЕ
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Подача КАК Подача,
		|	Товары.Товар КАК Товар,
		|   Товары.идСтроки Как ИдСтроки,
		|	Товары.Количество КАК Количество,
		|	Специфики.Специфика,
		|	Товары.БудетВыдано КАК БудетВыдано
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказТоварыДопИнф.Подача КАК Подача,
		|		ЗаказТоварыДопИнф.Товар КАК Товар,
		|		ЗаказТоварыДопИнф.Количество КАК Количество,
		|		ЗаказТоварыДопИнф.ИдСтроки КАК ИдСтроки,
		|		0 КАК БудетВыдано
		|	ИЗ
		|		РегистрСведений.ЗаказТоварыДопИнф КАК ЗаказТоварыДопИнф
		|	ГДЕ
		|		ЗаказТоварыДопИнф.Заказ = &Заказ
		|		И ЗаказТоварыДопИнф.Станция = &Станция
		|		И ЗаказТоварыДопИнф.Статус = &Статус
		|		И ЗаказТоварыДопИнф.Количество > 0
		|		И ЗаказТоварыДопИнф.Товар ССЫЛКА Справочник.Товары
		|		И ЗаказТоварыДопИнф.ВремяГотово = ДАТАВРЕМЯ(1, 1, 1)) КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЗаказТоварыДопИнф.Товар КАК Специфика,
		|			ЗаказТоварыДопИнф.ИдСтрокиВладельца КАК ИдСтрокиВладельца
		|		ИЗ
		|			РегистрСведений.ЗаказТоварыДопИнф КАК ЗаказТоварыДопИнф
		|		ГДЕ
		|			ЗаказТоварыДопИнф.Заказ = &Заказ
		|			И ЗаказТоварыДопИнф.Станция = &Станция
		|			И ЗаказТоварыДопИнф.Статус = &Статус
		|			И ЗаказТоварыДопИнф.Количество > 0
		|			И ЗаказТоварыДопИнф.Товар ССЫЛКА Справочник.Специфики
		|			И ЗаказТоварыДопИнф.ВремяГотово = ДАТАВРЕМЯ(1, 1, 1)) КАК Специфики
		|		ПО Товары.ИдСтроки = Специфики.ИдСтрокиВладельца
		|
		|УПОРЯДОЧИТЬ ПО
		|	Подача,
		|	Товар
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(БудетВыдано)
		|ПО
		|	Подача,
		|	ИдСтроки,
		|	Товар
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("ДатаНачала",	ТекущаяДата()-60*60*12); // за последние 12 часов
		Запрос.УстановитьПараметр("Заказ",		Заказ);
		Запрос.УстановитьПараметр("Станция",	ТекСтанция);
		Запрос.УстановитьПараметр("Статус",		Перечисления.СтатусыПозицийЗаказа.Заказано);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ЗаполнитьТаблицуМарок(ЭлементыФормы.ПолеПриготовление, РезультатЗапроса);
	КонецЕсли; 
	
	// К ВЫДАЧЕ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Подача КАК Подача,
	|	Товары.Товар КАК Товар,
	|   Товары.идСтроки Как ИдСтроки,
	|	Товары.Количество КАК Количество,
	|	Специфики.Специфика,
	|	Товары.БудетВыдано КАК БудетВыдано
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказТоварыДопИнф.Подача КАК Подача,
	|		ЗаказТоварыДопИнф.Товар КАК Товар,
	|		ЗаказТоварыДопИнф.Количество КАК Количество,
	|		ЗаказТоварыДопИнф.ИдСтроки КАК ИдСтроки,
	|		ВЫБОР
	|			КОГДА ЗаказТоварыДопИнф.КодПодтверждения В (&КодыПодтв)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК БудетВыдано
	|	ИЗ
	|		РегистрСведений.ЗаказТоварыДопИнф КАК ЗаказТоварыДопИнф
	|	ГДЕ
	|		ЗаказТоварыДопИнф.Заказ = &Заказ
	|		И ЗаказТоварыДопИнф.Станция = &Станция
	|		И ЗаказТоварыДопИнф.Статус = &Статус
	|		И ЗаказТоварыДопИнф.Количество > 0
	|		И ЗаказТоварыДопИнф.Товар ССЫЛКА Справочник.Товары
	|		И ЗаказТоварыДопИнф.ВремяГотово > &ДатаНачала) КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗаказТоварыДопИнф.Товар КАК Специфика,
	|			ЗаказТоварыДопИнф.ИдСтрокиВладельца КАК ИдСтрокиВладельца
	|		ИЗ
	|			РегистрСведений.ЗаказТоварыДопИнф КАК ЗаказТоварыДопИнф
	|		ГДЕ
	|			ЗаказТоварыДопИнф.Заказ = &Заказ
	|			И ЗаказТоварыДопИнф.Станция = &Станция
	|			И ЗаказТоварыДопИнф.Статус = &Статус
	|			И ЗаказТоварыДопИнф.Количество > 0
	|			И ЗаказТоварыДопИнф.Товар ССЫЛКА Справочник.Специфики
	|			И ЗаказТоварыДопИнф.ВремяГотово > &ДатаНачала) КАК Специфики
	|		ПО Товары.ИдСтроки = Специфики.ИдСтрокиВладельца
	|
	|УПОРЯДОЧИТЬ ПО
	|	Подача,
	|	Товар
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	СУММА(БудетВыдано)
	|ПО
	|	Подача,
	|	ИдСтроки,
	|	Товар
	|АВТОУПОРЯДОЧИВАНИЕ";
		
	Запрос.УстановитьПараметр("ДатаНачала",	ТекущаяДата()-60*60*12); // за последние 12 часов
	Запрос.УстановитьПараметр("Заказ",		Заказ);
	Запрос.УстановитьПараметр("Станция",	ТекСтанция);
	Запрос.УстановитьПараметр("Статус",		Перечисления.СтатусыПозицийЗаказа.Готово);
	Запрос.УстановитьПараметр("КодыПодтв",	СписокКодовПодтверждений.ВыгрузитьЗначения());
	                                       
	РезультатЗапроса = Запрос.Выполнить();
	
	ЗаполнитьТаблицуМарок(ЭлементыФормы.ПолеКВыдаче, РезультатЗапроса);
	
КонецПроцедуры // КС_ВДВ > ------------------------------------------------------------ 

// < КС_ВДВ ------------------------------------------------------------ 
// Вывести результат запроса по маркам
Процедура ЗаполнитьТаблицуМарок(ТабличныйДокумент, РезультатЗапроса)

	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ФиксацияСверху = 1;
	
	Макет = ЭтотОбъект.ПолучитьМакет("Марки800х600");

	Выд = ?(ТабличныйДокумент.Имя = "ПолеКВыдаче", "Выд", "");
	
	ОбластьМакетаЗаголовок		= Макет.ПолучитьОбласть("Заголовок|ВидимаяОбласть");
	// Товар
	ОбластьМакетаТовар1			= Макет.ПолучитьОбласть("СтрокаТовара"+Выд+"1|ВидимаяОбласть");
	ОбластьМакетаТовар2			= Макет.ПолучитьОбласть("СтрокаТовара"+Выд+"2|ВидимаяОбласть");
	ОбластьМакетаТоварРед 		= Макет.ПолучитьОбласть("СтрокаТовараРед|ВидимаяОбласть");
	// Специфики
	ОбластьМакетаСпецифика1		= Макет.ПолучитьОбласть("СтрокаСпецифики"+Выд+"1|ВидимаяОбласть");
	ОбластьМакетаСпецифика2		= Макет.ПолучитьОбласть("СтрокаСпецифики"+Выд+"2|ВидимаяОбласть");
    ОбластьМакетаСпецификаРед	= Макет.ПолучитьОбласть("СтрокаСпецификиРед|ВидимаяОбласть");
	
	ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	Кл = 0;
	ПоследняяСтрокаВыдачи = 0;
	
	ВыборкаПодача = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПодача.Следующий() Цикл
		
		Подача = ВыборкаПодача.Подача;
		
		ВыборкаСтроки = ВыборкаПодача.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
		ВыборкаТовары = ВыборкаСтроки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаТовары.Следующий() Цикл
			
			Кл = Кл + 1;
			Четная = (Кл % 2 = 0);
			
			Если ВыборкаТовары.БудетВыдано > 0 Тогда
			    ОбластьСтрока 		= ОбластьМакетаТоварРед;
				ОбластьСпецифика 	= ОбластьМакетаСпецификаРед;
				
			ИначеЕсли Четная Тогда
				ОбластьСтрока 		= ОбластьМакетаТовар2;
				ОбластьСпецифика 	= ОбластьМакетаСпецифика2;
				
			Иначе
				ОбластьСтрока 		= ОбластьМакетаТовар1;
				ОбластьСпецифика 	= ОбластьМакетаСпецифика1;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
			//ОбластьСтрока.Параметры.Подача = Подача;	
			ТабличныйДокумент.Вывести(ОбластьСтрока); 
			
			Специфики = "";
			
			ВыборкаСпецифики = ВыборкаТовары.Выбрать();
			Пока ВыборкаСпецифики.Следующий() Цикл
				Специфика = ВыборкаСпецифики.Специфика;
				
				Если ЗначениеЗаполнено(Специфика) Тогда
					Специфики = Специфики + ?(ПустаяСтрока(Специфики), "", ", ") + ВыборкаСпецифики.Специфика;	
				КонецЕсли; 
			КонецЦикла;

			Если НЕ ПустаяСтрока(Специфики) Тогда
				ОбластьСпецифика.Параметры.Специфики = Специфики;	
				ТабличныйДокумент.Вывести(ОбластьСпецифика); 
			КонецЕсли; 
			
			Если ВыборкаТовары.БудетВыдано > 0 Тогда
				ПоследняяСтрокаВыдачи = ТабличныйДокумент.ВысотаТаблицы;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла; 
	КонецЦикла; 
	
	НомерСтрокиТабДок = ?(ПоследняяСтрокаВыдачи > 0, ПоследняяСтрокаВыдачи, ТабличныйДокумент.ВысотаТаблицы);
	ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область("R"+НомерСтрокиТабДок+"C1");	
	
КонецПроцедуры // КС_ВДВ > ------------------------------------------------------------ 

//Z+
Процедура ЗаполнитьТаблицуСпецифик()
	ТабличныйДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ФиксацияСверху = 1;
	
	Макет = ЭтотОбъект.ПолучитьМакет("Специфика800х600");

	
	ОбластьМакетаЗаголовок		= Макет.ПолучитьОбласть("Заголовок|ВидимаяОбласть");
	// Товар
	ОбластьМакетаТовар1			= Макет.ПолучитьОбласть("СтрокаТовара1|ВидимаяОбласть");
	ОбластьМакетаТовар2			= Макет.ПолучитьОбласть("СтрокаТовараНов2|ВидимаяОбласть");
	ОбластьМакетаТоварРед 		= Макет.ПолучитьОбласть("СтрокаТовараРед|ВидимаяОбласть");
	// Специфики
	ОбластьМакетаСпецифика1		= Макет.ПолучитьОбласть("СтрокаСпецифики1|ВидимаяОбласть");
	ОбластьМакетаСпецифика2		= Макет.ПолучитьОбласть("СтрокаСпецификиНов2|ВидимаяОбласть");
    ОбластьМакетаСпецификаРед	= Макет.ПолучитьОбласть("СтрокаСпецификиРед|ВидимаяОбласть");
	
	ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
	
	Если ТаблицаСпецифик.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 
	ОбластьМакетаТовар2.Параметры.Наименование=Товар.Наименование;
	ОбластьМакетаТовар2.Параметры.Количество=1;
	ОбластьМакетаТовар2.Параметры.Цена=СуммаПоСтанцииНач;
	ОбластьМакетаТовар2.Параметры.Сумма=СуммаПоСтанцииНач;
	ТабличныйДокумент.Вывести(ОбластьМакетаТовар2);
	
	Кл = 0;
	ПоследняяСтрокаВыдачи = 0;
	//Гр="";
	СуммаСпецифик=0;
	ТаблицаСпецифик.Сортировать("ПорядокВыбора");	
	Для Каждого Спец из ТаблицаСпецифик Цикл	
		Если Спец.УдельныйВес=0 Тогда
			Продолжить;
		КонецЕсли;	
		ОбластьСтрока 		= ОбластьМакетаТовар1;
		ОбластьСпецифика 	= ОбластьМакетаСпецифика1;
		ОбластьСтрока.Параметры.Наименование=Спец.Специфика.Наименование;
		ОбластьСтрока.Параметры.Количество=Спец.УдельныйВес;
		ОбластьСтрока.Параметры.Цена=Спец.Цена;
		ОбластьСтрока.Параметры.Сумма=Спец.Сумма;
		СуммаСпецифик = СуммаСпецифик + Спец.Сумма;
		ТабличныйДокумент.Вывести(ОбластьСтрока); 
	КонецЦикла; 
	
	НомерСтрокиТабДок = ?(ПоследняяСтрокаВыдачи > 0, ПоследняяСтрокаВыдачи, ТабличныйДокумент.ВысотаТаблицы);
	ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область("R"+НомерСтрокиТабДок+"C1");	
	мСтрокиТекТовара = Этотобъект.ТаблицаЗаказа.Строки.НайтиСтроки(Новый СТруктура("Товар,Сумма",Товар,0));
	Если мСтрокиТекТовара.Количество() Тогда
		ЦенаТовара = мСтрокиТекТовара.Получить(0).Цена;
	Иначе
		ЦенаТовара = 0;
	КонецЕсли;
	
	ОбластьТоварЦена = ТабличныйДокумент.Область("R2C7");
	ОбластьТоварСумма = ТабличныйДокумент.Область("R2C9");
	ОбластьТоварЦена.Текст = ЦенаТовара;
	ОбластьТоварСумма.Текст = ЦенаТовара+СуммаСпецифик;
	
	Итого	= ТаблицаЗаказа.Строки.Итог("СуммаРеализации");
	
	ЭлементыФормы.НадписьСтанция.Заголовок  = "За блюдо:";
	ЭлементыФормы.тСуммаДозаказ.Видимость   = Ложь;
	ЭлементыФормы.НадписьДозаказ.Видимость  = Ложь;
	ЭлементыФормы.тСуммаДозаказ.Заголовок   = Строка(ФорматСумм(0));
	ЭлементыФормы.тСуммаПоСтанции.Заголовок = ФорматСумм(ЦенаТовара+СуммаСпецифик);
	ЭлементыФормы.тСуммаКОплате.Заголовок   = ФорматСумм(ТаблицаСпецифик.Итог("Сумма")+Итого);
	
КонецПроцедуры
//Z-

// Получить в строку все специфики к товару
//
Функция  ПолучитьПереченьСпецифик(СтрокиСпецифик, ТекНаименование = "")
	
	Для Каждого СтрокаСпецифики Из СтрокиСпецифик.Строки Цикл
		ТекНаименование = ТекНаименование + ?(ЗначениеЗаполнено(ТекНаименование), ", " , "")+ СтрокаСпецифики.Наименование;
		Если ЗначениеЗаполнено(СтрокаСпецифики.Строки) Тогда
			ПолучитьПереченьСпецифик(СтрокаСпецифики, ТекНаименование);
		КонецЕсли;
   КонецЦикла;	
   
   Возврат ТекНаименование;
   
КонецФункции

// < КС_ВДВ ------------------------------------------------------------ 
Процедура  ЗаполнитьМассивСпецифик(СтрокиСпецифик, МассивСпецифик)
	
	Для Каждого СтрокаСпецифики Из СтрокиСпецифик.Строки Цикл
		МассивСпецифик.Добавить(""+СтрокаСпецифики.Товар+?(СтрокаСпецифики.Цена = 0,""," ( +"+СтрокаСпецифики.Цена+"р.)"));
		
		Если ЗначениеЗаполнено(СтрокаСпецифики.Строки) Тогда
			ЗаполнитьМассивСпецифик(СтрокаСпецифики, МассивСпецифик);
		КонецЕсли;
   КонецЦикла;	
   
КонецПроцедуры // КС_ВДВ > ------------------------------------------------------------ 

// < КС_ВДВ ------------------------------------------------------------ 
Функция  ПолучитьМассивСтрокСпецифик(СтрокиСпецифик, МаксДлинаСтроки)
	
	МассивСпецифик = Новый Массив;
	ЗаполнитьМассивСпецифик(СтрокиСпецифик, МассивСпецифик);
	
	ТекСтрока = "";
	МассивСтрокСпецифик = Новый Массив;
	
	Для К = 0 По МассивСпецифик.Количество() - 1 Цикл
		СтрСпецифика = МассивСпецифик[К];
		
		ТекСтрока2 = ТекСтрока + ?(ПустаяСтрока(ТекСтрока), "", ", ") + СтрСпецифика;
		
		Если СтрДлина(ТекСтрока2) >= МаксДлинаСтроки Тогда
			МассивСтрокСпецифик.Добавить(ТекСтрока);	
			ТекСтрока = СтрСпецифика;
		Иначе
			ТекСтрока = ТекСтрока2;
		КонецЕсли; 
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(ТекСтрока) Тогда
		МассивСтрокСпецифик.Добавить(ТекСтрока);
	КонецЕсли; 
	
   Возврат МассивСтрокСпецифик;
   
КонецФункции // КС_ВДВ > ------------------------------------------------------------ 

// Спозиционировать форму дисплея на втором экране
//
Процедура РазвернутьОкноИнфоДисплея()
	Перем X,Y;
	ТекущаяФормаhWnd = 1;
	//РаботаСокнами.GetWndSizeV8(ТекущаяФормаhWnd, X, Y);
	// Открываем форму на втором экране (слева)
	//РаботаСокнами.УстановитьПоложениеОкна(Заголовок, 1599, 0);
	//РаботаСокнами.УстановитьРазмерДочернегоОкна(ТекущаяФормаhWnd, 800, 600);
	// Разворачиваем во весь второй экран
	//Если глПараметрыРМ.БлокировкаПереднийПлан Тогда //ИЛИ (глпараметрырм.ШиринаОкна1С< 1400) 
	//    РаботаСокнами.УстановитьПоложениеОкна(Заголовок, 1921, 0, 800, 600);
	//	РаботаСокнами.МаксимизироватьДочернее(Заголовок);	
	//Иначе
	//	
	//	РаботаСокнами.УстановитьПоложениеОкна(Заголовок, 1921, 0, 800, 600);

	//
	//КонецЕсли; 
	
	
	//ПодключитьОбработчикОжидания("УстановитьРазмерыИнфоДисплея", 0.1, Истина);	
	
КонецПроцедуры

// Установить размер формы
// Установить активную страницу рекламы
// Установить фокус на РМ
//
Процедура УстановитьРазмерыИнфоДисплея()
	
	Перем X, Y;
	// Получаем координаты левого верхнего угла
	РаботаСокнами.GetWndPosV8(ТекущаяФормаhWnd, X, Y );
	

	// Изменяем зазмер если не во весь экран
	Если РазмерОкнаИнфоДисплея <> 0 Тогда
		Если РазмерОкнаИнфоДисплея = 2 Тогда
			//РаботаСокнами.SetWndPosV8(ТекущаяФормаhWnd, X + 1, Y + 1);
			РаботаСокнами.УстановитьРазмерДочернегоОкна(ТекущаяФормаhWnd, 1025, 768);
		ИначеЕсли РазмерОкнаИнфоДисплея = 1 Тогда
			РаботаСокнами.SetWndPosV8(ТекущаяФормаhWnd, X + 1, Y + 1);
			РаботаСокнами.УстановитьРазмерДочернегоОкна(ТекущаяФормаhWnd, 800, 600);
		КонецЕсли;
	Иначе
		РаботаСокнами.МаксимизироватьДочернее(Заголовок);
	КонецЕсли;	
	
	// Активируем рекламную страницу
	АктивироватьСтраницуЗаказа(Ложь);
	
	// установка фокуса обратно на РМ
	//WshShell.AppActivate(?(ТекущийЯзыкСистемы()="en","1C:Enterprise", "1С:Предприятие") + " - " + ПолучитьЗаголовокСистемы() );
	
КонецПроцедуры

// Свернуть форму ИнфоДисплея (не используется)
//
Процедура СвернутьИнфоДисплей()
	
	РаботаСокнами.MinimizeV8( ТекущаяФормаhWnd );
	
КонецПроцедуры

// чтобы часики тикали
//
Процедура ОбновитьТаймер()
	
	ТекВремя = ТекущаяДата();
	ЭлементыФормы.тВремя.Заголовок	= Формат(ТекВремя,"ДЛФ=В");
	
КонецПроцедуры

// перелистывание между заказом и рекламой
//
Процедура АктивироватьСтраницуЗаказа(ПоказатьЗаказ = Истина) Экспорт
	
	Если СброситьНастройки ИЛИ (НЕ ЗначениеЗаполнено(ТаблицаЗаказа)) Тогда
		ТекНомерСтрокиЗаказа = 0;
		ТекНомерСтрокиТабДок = 0;
	КонецЕсли; 
	
	ЭлементыФормы.ПанельОсновная.Страницы.Заказ.Видимость			= ПоказатьЗаказ;
	ЭлементыФормы.ПанельОсновная.Страницы.Информационная.Видимость	= НЕ ПоказатьЗаказ;
	
	Если ПоказатьЗаказ Тогда
		ЭлементыФормы.ПанельКонтент.Страницы.ПриемЗаказа.Видимость  = НЕ (РежимВывода = "Марки");	
		ЭлементыФормы.ПанельКонтент.Страницы.ВыдачаЗаказа.Видимость = (РежимВывода = "Марки");	
	КонецЕсли; 
	Если ПоказатьЗаказ Тогда
		Если РежимВывода = "Марки" Тогда
		    ЗаполнитьТаблицуВыдачи(СброситьНастройки);
//Z+			
		ИначеЕсли РежимВывода = "Специфика" Тогда
			ЗаполнитьТаблицуСпецифик();
//Z-			
		Иначе
			ЗаполнитьТаблицуЗаказа();
		КонецЕсли; 
	КонецЕсли; 
	
	
КонецПроцедуры	

Процедура ПолеКартинкиНажатие(Элемент)
	//АктивироватьСтраницуЗаказа(ИСтина);
КонецПроцедуры

ТекНомерСтрокиЗаказа = 0;
ТекНомерСтрокиТабДок = 0;
