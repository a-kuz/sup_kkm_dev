
#Если Клиент Тогда

Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна

Перем ТипЗначения	Экспорт;   // тип значения
Перем Длина			Экспорт;   // длина
Перем Точность		Экспорт;   // точность
Перем Кратность		Экспорт;   // кратность
Перем РежимПароля   Экспорт;

Перем ТипПоляВвода	Экспорт;
Перем ФлагОткрытия	Экспорт;
Перем ФлагДроби		Экспорт;
Перем ДробнаяЧасть	Экспорт;

Перем ЗапретОтмены Экспорт;

Перем ФормаВвода Экспорт;
Перем ФормаВыбора Экспорт;
Перем ПараметрОповещения Экспорт;
// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
	ФлагОткрытия	= Ложь;
	ЗапретОтмены 	= Ложь;
	ФормаВыбора = Неопределено;
	ПараметрОповещения = Неопределено;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Вызывается из обработчика ПередОткрытием форм этой обработки,
// выполняет инициализацию рабочего места
//
Процедура ДействияПередОткрытиемФормы(ТекущаяФорма, Отказ) Экспорт
	
	ФормаВвода = ТекущаяФорма;
	ФормаВвода.ЭлементыФормы.ЗначениеВвода.ЦветТекстаПоля = Новый Цвет(107,107,107);


	Если ТипЗначения = "Пароль" Тогда
		ТипЗначения		= "Строка";
		РежимПароля = Истина;
		Длина			= ?(ЗначениеЗаполнено(Длина),Длина,4);
		ЗначениеВвода	= "";
		
		Если глПараметрыРМ.ИнтерфейсТип > 2 Тогда
			
			ФормаВвода.ЭлементыФормы.ЗначениеВвода.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
			ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт = Новый Шрифт(ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт,"Segoe UI",48);
		КонецЕсли;
		//ФормаВвода.ЭлементыФормы.ЗначениеВвода.РежимПароля = Истина;
	Иначе
		ФормаВвода.ЭлементыФормы.ЗначениеВвода.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
		Если глПараметрыРМ.ИнтерфейсТип >= 8 Тогда
			ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт = Новый Шрифт(ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт,"Segoe UI",48);
		Иначе
			ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт = Новый Шрифт(ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт,"Segoe UI",18);
		КонецЕсли;
		
		РежимПароля = Ложь;
	КонецЕсли; 
	
	//ФормаВвода.ЭлементыФормы.ЗначениеВвода.РежимПароля = РежимПароля;

	Если ЗначениеЗаполнено(Маска) Тогда
		ФормаВвода.ЭлементыФормы.ЗначениеВвода.Маска = Маска;
		ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт = Новый Шрифт(ФормаВвода.ЭлементыФормы.ЗначениеВвода.Шрифт,"Consolas",28);
	Иначе
		ФормаВвода.ЭлементыФормы.ЗначениеВвода.Маска = "";
	КонецЕсли;
	
	Если ТипЗначения = "Строка" Тогда
		ТипПоляВвода = ПолучитьОписаниеТиповСтроки( Длина );
	Иначе
		ТипПоляВвода = ПолучитьОписаниеТиповЧисла( Длина, Точность, Истина );
	КонецЕсли; 
	
	
	ЗначениеВвода = ТипПоляВвода.ПривестиЗначение(ЗначениеВвода);
	Если РежимПароля Тогда
		Если Длина = 4 Тогда
			стрЗначениеВвода = "▫▫▫▫";     
		КонецЕсли;                    		
	Иначе
		//ФормаВвода.ЭлементыФормы.ЗначениеВвода.ОграничениеТипа = ТипПоляВвода;
		стрЗначениеВвода = Формат(ЗначениеВвода, "ЧРД=.; ЧГ=0");
	КонецЕсли;
	

	
	ФлагОткрытия	= Истина;
	ФлагДроби		= Ложь;
	ДробнаяЧасть	= 0.1;	
	
	Если Не ЗначениеЗаполнено(ШаблонОкончанияВвода) и Не ЗначениеЗаполнено(ШаблонВвода) Тогда
		Если СтрНайти(НРег(ФормаВвода.Заголовок), "считайте карту к") Тогда
			ШаблонВвода = "^(7$|77|5$|52)\d{0,8}$";
			ШаблонОкончанияВвода = "^(77|52)\d{8}$";
		КонецЕсли;
	КонецЕсли;	
	
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура Сброс() Экспорт
	
	ФлагДроби		= Ложь;
	ДробнаяЧасть	= 0.1;
	ЗначениеВвода	= ТипПоляВвода.ПривестиЗначение();
	Если РежимПароля И Длина = 4 Тогда
		стрЗначениеВвода = "▫▫▫▫";
	Иначе 
		стрЗначениеВвода = "";		
	КонецЕсли;
	
	глОтсечкаПростоя();
	
КонецПроцедуры

Процедура НажатиеКнопки(СтрКнопки) Экспорт
	
	
 	Если ФлагОткрытия Тогда
		Сброс();
		ФлагОткрытия = Ложь;
	КонецЕсли;
	
	RegExp = ирПлатформа.RegExp;	
	Если ТипЗначения = "Число" Тогда
		стр = стрЗначениеВвода + СтрКнопки;
		Pattern = "^\d*(\.\d{0,&Точность}$|$)";
		Pattern = СтрЗаменить(Pattern, "&Точность", Точность);
		RegExp.Pattern = Pattern;
		Если RegExp.Test(Стр) Тогда
			стрЗначениеВвода = стр;
		КонецЕсли;
		Возврат;
	ИначеЕсли ТипЗначения = "Строка" Тогда	
		Если РежимПароля Тогда
			НовЗнач = СтрЗаменить(СтрЗаменить(СтрЗаменить(ЗначениеВвода," ",""),"-",""),")","");
		Иначе
			НовЗнач = СтрЗаменить(СтрЗаменить(СтрЗаменить(ФормаВвода.ЭлементыФормы.ЗначениеВвода.Значение," ",""),"-",""),")","");
		КонецЕсли;
		
	КонецЕсли;	

	Если ТипЗначения="Строка" Тогда
		НовЗнач = НовЗнач + СтрКнопки;
		ЭлементыФормы = ФормаВвода.ЭлементыФормы;
		Если ЗначениеЗаполнено(ШаблонОкончанияВвода) Тогда
			RegExp.Pattern = ШаблонОкончанияВвода;
			Если RegExp.Test(НовЗнач) Тогда
				ЭлементыФормы.ЗначениеВвода.ЦветТекстаПоля = Новый Цвет(0,177,0);
			Иначе
				RegExp.Pattern = ШаблонВвода;
				Если RegExp.Test(НовЗнач) Тогда
					ЭлементыФормы.ЗначениеВвода.ЦветТекстаПоля = Новый Цвет(50,50,50);
				Иначе
					ЭлементыФормы.ЗначениеВвода.ЦветТекстаПоля = Метаданные.ЭлементыСтиля.Акцент.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли НЕ ФлагДроби ИЛИ Точность=0 Тогда
		НовЗнач = НовЗнач * ?(СтрКнопки="00",100,10) + Число(СтрКнопки);	
	Иначе
		НовЗнач = НовЗнач + Число(СтрКнопки) * ДробнаяЧасть;
		ДробнаяЧасть = ДробнаяЧасть * 0.1;
	КонецЕсли;
	
	Если ТипПоляВвода.ПривестиЗначение(НовЗнач) = НовЗнач Тогда
		ЗначениеВвода = НовЗнач;
	КонецЕсли;
	
	Если РежимПароля Тогда
		стрЗначениеВвода = Лев("▪▪▪▪▪▪▪▪▪▪",СтрДлина(ЗначениеВвода)) + Лев("▫▫▫▫▫▫▫▫▫▫", Длина-СтрДлина(ЗначениеВвода));
	ИначеЕсли ТипЗначения="Число" Тогда
		стрЗначениеВвода = Формат(ЗначениеВвода, "ЧРД=.; ЧГ=0");
	Иначе
		стрЗначениеВвода = стрЗначениеВвода+СтрКнопки;
	КонецЕсли;
		
	Если Длина = СтрДлина(ЗначениеВвода) И РежимПароля Тогда
		ОК();
	КонецЕсли;
	
	глОтсечкаПростоя();
	
КонецПроцедуры

Процедура Точка() Экспорт
	
	Если ФлагОткрытия Тогда
		Сброс();
		ФлагОткрытия = Ложь;
	КонецЕсли;
	
	ФлагДроби = Истина;
	Если не стрНайти(стрЗначениеВвода,".") Тогда
		Если ПустаяСтрока(стрЗначениеВвода) Тогда
			стрЗначениеВвода = "0";
		КонецЕсли;
		стрЗначениеВвода = стрЗначениеВвода + ".";
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОК() Экспорт
	
	Если ТипЗначения="Число" И Кратность>0 Тогда
		
		ПровЗнач = ЗначениеВвода / Кратность;
		Если Цел(ПровЗнач)<>ПровЗнач Тогда
			
			Текст1="Ошибка ввода";
			Текст2="Значение должно быть кратно "+Кратность+" !";
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2, "", "ОК", "");
			
			ФлагОткрытия = Истина;	
			ФормаВвода.ТекущийЭлемент = ФормаВвода.ЭлементыФормы.ЗначениеВвода;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	//:ФормаВвода = ПолучитьФорму();
	Если Не ЗначениеЗаполнено(стрЗначениеВвода) И ЗначениеЗаполнено(ЗначениеВвода) Тогда
		Если ФормаВвода.МодальныйРежим Тогда
			ФормаВвода.Закрыть( ЗначениеВвода );
		Иначе
			Оповестить("ВводКоличестваГостей", Новый Структура("ПараметрОповещения, МассивПомеченных, ЗначениеВвода", ПараметрОповещения, ФормаВыбора.МассивПомеченных, ЗначениеВвода));	
			ФормаВвода.Закрыть();
		КонецЕсли;
		
		Возврат;		
	КонецЕсли;
	
	//RegExp = ирПлатформа.RegExp;
	//
	//RegExp.Pattern = ".*[\+\*\/\-]+.*";
	//Matches = RegExp.Execute(стрЗначениеВвода);
	//Если Matches.Count >= 1 Тогда
	//	стрЗначениеВвода = Вычислить(стрЗначениеВвода);
	//	ЗначениеВвода = Число(стрЗначениеВвода);		
	//	стрЗначениеВвода = Формат(ЗначениеВвода, "ЧРД=.; ЧГ=0");
	//	Возврат;
	//Иначе
	//	//Если ТипЗначения="Строка" Тогда
	//	//	НовЗнач = НовЗнач + СтрКнопки;
	//	//ИначеЕсли НЕ ФлагДроби ИЛИ Точность=0 Тогда
	//	//	НовЗнач = НовЗнач * ?(СтрКнопки="00",100,10) + Число(СтрКнопки);	
	//	//Иначе
	//	//	НовЗнач = НовЗнач + Число(СтрКнопки) * ДробнаяЧасть;
	//	//	ДробнаяЧасть = ДробнаяЧасть * 0.1;
	//	//КонецЕсли;
	//	
		Если ТипЗначения = "Число" Тогда
			Попытка
				ЗначениеВвода = Число(стрЗначениеВвода);
			Исключение
				ЗначениеВвода = 0;
			КонецПопытки;
		ИначеЕсли Не РежимПароля Тогда
			ЗначениеВвода = стрЗначениеВвода;
		КонецЕсли;

		Если ФормаВвода.МодальныйРежим Тогда
			ФормаВвода.Закрыть( ЗначениеВвода );
		Иначе
			Оповестить("ВводКоличестваГостей", Новый Структура("ПараметрОповещения, МассивПомеченных, ЗначениеВвода", ПараметрОповещения, ФормаВыбора.МассивПомеченных, ЗначениеВвода));	
			ФормаВвода.Закрыть();
		КонецЕсли;

	//КонецЕсли;
КонецПроцедуры

Процедура Плюс() Экспорт
	Оператор("+");
КонецПроцедуры

Процедура Минус() Экспорт
	Оператор("-");
КонецПроцедуры

Процедура Умножить() Экспорт
	Оператор("*");
КонецПроцедуры

Процедура Разделить() Экспорт
	Оператор("/");
КонецПроцедуры

Процедура Оператор(Оператор)
	Если СтрНайти("+-*/", Прав(СокрП(стрЗначениеВвода),1)) Тогда
		стрЗначениеВвода = Прав(стрЗначениеВвода, СтрДлина(СокрП(стрЗначениеВвода))-1);
	КонецЕсли;
	стрЗначениеВвода = стрЗначениеВвода + Оператор;
КонецПроцедуры





////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);


#КонецЕсли
РежимПароля = Ложь;
