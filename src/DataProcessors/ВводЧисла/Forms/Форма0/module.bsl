
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ДействияПередОткрытиемФормы(ЭтаФорма, Отказ);
	
	// если это не ввод количества весового товара, то убираем кнопки работы с весами
	Если НЕ ( ТипЗначения="Число" И Кратность=0.001 И глПараметрыРМ.ВесыЕсть ) Тогда
		ЭлементыФормы.ПанельВесы.Свертка = РежимСверткиЭлементаУправления.Лево;
		//Высота = Высота - (ЭлементыФормы.ПанельВесы.Высота + 1);
	ИначеЕсли глПараметрыРМ.ВесыЗапретРучногоВвода Тогда
		ЭлементыФормы.ЗначениеВвода.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ТипЗначения="Число" Тогда
		ЭлементыФормы.ЗначениеВвода.Формат = СтрШаблон("ЧЦ=%1;ЧДЦ=%2;ЧГ=0", Длина,Точность);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	
	Если ФормаВыбора <> Неопределено Тогда
		ПараметрыОкна.Лево = глПараметрыРМ.ЭкранШирина / 2 - Ширина / 2 + 2;
		ПараметрыОкна.Верх = глПараметрыРМ.ЭкранВысота / 2 - Высота / 2 - 21;
		ПараметрыОкна.Центр = Ложь;
		//ПараметрыОкна.обрезать = Истина;

		ПодключитьОбработчикОжидания("ОткрытьФормуВыбора",0.2, 1);
		
	КонецЕсли;
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
КонецПроцедуры

Процедура ОткрытьФормуВыбора() Экспорт
	ФормаВыбора.Открыть();
КонецПроцедуры


Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если НЕ ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	_Знач = ОбработкаВнешнихСобытий.ПолучитьДанные(Источник,Событие,Данные);
	
	Если ЗначениеЗаполнено(_Знач) Тогда
		Закрыть( "Идентификатор_"+_Знач );
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаОКНажатие(Элемент)
	
	ОК();
	
КонецПроцедуры

Процедура КнопкаТочкаНажатие(Элемент)
	
	Точка();
	
КонецПроцедуры

Процедура КнопкаСбросНажатие(Элемент)
	
	Сброс();
	
КонецПроцедуры

Процедура Кнопка0Нажатие(Элемент)
	
	НажатиеКнопки("0");
	
КонецПроцедуры

Процедура Кнопка00Нажатие(Элемент)
	
	НажатиеКнопки("00");
	
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	НажатиеКнопки("1");
	
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	
	НажатиеКнопки("2");
	
КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	
	НажатиеКнопки("3");
	
КонецПроцедуры

Процедура Кнопка4Нажатие(Элемент)
	
	НажатиеКнопки("4");
	
КонецПроцедуры

Процедура Кнопка5Нажатие(Элемент)
	
	НажатиеКнопки("5");
	
КонецПроцедуры

Процедура Кнопка6Нажатие(Элемент)
	
	НажатиеКнопки("6");
	
КонецПроцедуры

Процедура Кнопка7Нажатие(Элемент)
	
	НажатиеКнопки("7");
	
КонецПроцедуры

Процедура Кнопка8Нажатие(Элемент)
	
	НажатиеКнопки("8");
	
КонецПроцедуры

Процедура Кнопка9Нажатие(Элемент)
	
	НажатиеКнопки("9");
	
КонецПроцедуры

Процедура КнопкаВесНажатие(Элемент)
	
	ПолучитьВес();
	
КонецПроцедуры

Процедура КнопкаТараНажатие(Элемент)
	
	Если НЕ КомандаВесов("УстановитьТару").Ошибка Тогда
		ПолучитьВес();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаВесыНольНажатие(Элемент)
	
	Если НЕ КомандаВесов("УстановитьНоль").Ошибка Тогда
    	Сброс();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьВес()  
	
	Результат = КомандаВесов("ПолучитьВес");
	
	Если НЕ Результат.Ошибка Тогда
		ЗначениеВвода = Результат.Вес;
	КонецЕсли;
	
КонецПроцедуры

Функция КомандаВесов(Команда)
	
	Весы = глПараметрыРМ.Весы;
	Результат = Весы.ПолучитьОбъект().ВыполнитьДействие(Команда);
	
	Если Результат.Ошибка Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка", Результат.Описание, Результат.Подробно, "","ОК","");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Процедура КнопкаОтменаНажатие(Элемент)
	Закрыть();
КонецПроцедуры

РазрешитьСоединятьОкно = Ложь;       
РазрешитьСостояниеПрячущееся = Ложь;
РазрешитьСостояниеОбычное =Ложь;
СостояниеОкна = ВариантСостоянияОкна.Свободное;
ПоложениеОкна = ВариантПоложенияОкна.Центрировать;