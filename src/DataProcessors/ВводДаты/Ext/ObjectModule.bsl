
#Если Клиент Тогда
Перем ТипПоляВвода;
	
Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна
Перем ФлагОткрытия	Экспорт;
Перем ФормаВвода;

// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
// Вызывается каждый раз при обращении к объекту обработки.
// Здесь надо прописать сброс переменных в начальные значения
// Реквизиты и табличные части уже сброшены
Процедура УстановкаНачальныхЗначений() Экспорт
	
	ФлагОткрытия	= Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Вызывается из обработчика ПередОткрытием форм этой обработки,
// выполняет инициализацию рабочего места
//
Процедура ДействияПередОткрытиемФормы(ТекущаяФорма, Отказ) Экспорт
	
	ФормаВвода = ТекущаяФорма;
	
	ФлагОткрытия	= Истина;
	
	ТипПоляВвода = Новый ОписаниеТипов("Дата");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура Сброс() Экспорт
	ФормаВвода.ЭлементыФормы.ЗначениеВвода.ЦветТекстаПоля = Новый Цвет(0,0,0);
	стрЗначениеВвода = "";
	ЗначениеВвода = "";
	ФормаВвода.ДоступностьКнопок();
	глОтсечкаПростоя();
	
КонецПроцедуры

Процедура НажатиеКнопки(СтрКнопки) Экспорт
	
	Если ФлагОткрытия Тогда
		Сброс();
		ФлагОткрытия = Ложь;
	КонецЕсли;
	
	НовЗнач = СокрЛП(стрЗначениеВвода);
	НовЗнач = СтрЗаменить(НовЗнач, "_","");
	
	Если СтрДлина(НовЗнач) = 2 Тогда
		НовЗнач = НовЗнач + ".";
	КонецЕсли;
	
	Если СтрДлина(НовЗнач) = 5 Тогда
		НовЗнач = НовЗнач + ".";
	КонецЕсли;
	
	Попытка
		НовЗнач = НовЗнач + Число(СтрКнопки);	
	Исключение
	КонецПопытки;
	
	
	стрЗначениеВвода = НовЗнач;
	
	стрЗначениеВвода = СтрЗаменить(стрЗначениеВвода," ","_");
	Если ТипПоляВвода.ПривестиЗначение(НовЗнач) = НовЗнач Тогда
		ЗначениеВвода = НовЗнач;
	КонецЕсли; 
	
	глОтсечкаПростоя();
	ФормаВвода.ДоступностьКнопок();
	ФормаВвода.ПодключитьОбработчикОжидания("ПодсветкаНесоответсвующейСтроки",0.1,1);
	//ФормаВвода.ПодсветкаНесоответсвующейСтроки();
КонецПроцедуры


 
Процедура ОК() Экспорт
		
	ПриводимоеЗначение = ФормаВвода.ЭлементыФормы.ЗначениеВвода.Значение;
	ПриводимоеЗначение = СтрЗаменить(ПриводимоеЗначение,".","");
	ПриводимоеЗначение = СтрЗаменить(ПриводимоеЗначение,"_","");
	ПриводимоеЗначение = СтрЗаменить(ПриводимоеЗначение," ","");
	ПриводимоеЗначение = сред(ПриводимоеЗначение,5,4) + сред(ПриводимоеЗначение,3,2) + сред(ПриводимоеЗначение,1,2);
	ЗначениеВвода = ТипПоляВвода.ПривестиЗначение(ПриводимоеЗначение);
			
	ФормаВвода.Закрыть( ЗначениеВвода );
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);

#КонецЕсли
