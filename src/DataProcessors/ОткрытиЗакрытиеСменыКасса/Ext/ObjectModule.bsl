&НаКлиенте
Функция ОткрытьСмену() Экспорт
	глПараметрыРМ = глПараметрыРМ;
	ДокСмены = Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьСменуКассы();
	Если не ДокСмены.Пустая() Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка открытия смены","Смена уже открыта!","Смена № " + ДокСмены.НомерСмены + " от " + Формат(ДокСмены.Дата,"ДЛФ=DD"),"","ОК","");
		Возврат ложь;
	КонецЕсли;
	
	СменаТТ = ИнтерфейсРМ.ТекущаяСмена();
	Если СменаТТ.Пустая() Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка открытия смены","Смена ТТ не открыта!","","","ОК","");
		Возврат ложь;
	КонецЕсли;
	Если НачалоДня(СменаТТ.Дата) <> НачалоДня(ТекущаяДатаНаСервере()) Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка открытия смены","Предыдущая смена ТТ не закрыта!","","","ОК","");
		Возврат ложь;
	КонецЕсли;
	
	ККМ=глПараметрыРМ.ККМ.ПолучитьОбъект();
	Обработка_ККМ=Обработка_ККМ;
	ИнициализацияТО(ККМ,Обработка_ККМ,глПараметрыРМ);
	ВхПараметры = новый Структура;
	ВыхПараметры = новый Структура;
	ВхПараметры.Вставить("Кассир",Строка(глПользователь));
	
	Попытка
		Ответ = Обработка_ККМ.ВыполнитьКоманду("ОткрытьСмену",ВхПараметры,ВыхПараметры);
	Исключение
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
		Возврат Ложь;
	КонецПопытки;
	
	
	Если не Ответ Тогда
		Если ВыхПараметры.Свойство("ОписаниеОшибки") Тогда
			ТекстОшибки = "";
			ОписаниеОшибки = ВыхПараметры.ОписаниеОшибки;
			Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
				 ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
			КонецЦикла;
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка Открытия смены",ТекстОшибки,"","","ОК","");
		КонецЕсли;
	КонецЕсли;
	
	Если глПараметрыРМ.ККМЕстьДоп тогда
		Попытка
			ККМ1 = глПараметрыРМ.ККМСписокДоп[0].ПолучитьОбъект();
			Обработка_ККМ1 = Неопределено;
			ИнициализацияТО(ККМ1, Обработка_ККМ1, глПараметрыРМ);
			ВхПараметры = новый Структура;
			ВыхПараметры = новый Структура;
			ВхПараметры.Вставить("Кассир",Строка(глПользователь));
			
			Попытка
				Ответ = Обработка_ККМ1.ВыполнитьКоманду("ОткрытьСмену",ВхПараметры,ВыхПараметры);
			Исключение
				ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
				Возврат Ложь;
			КонецПопытки;
			
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	// он формируется в команде - открыть смену
	//// формирование документа Открытие смены Касса
	//Если Ответ Тогда
	//	Если Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьСменуКассы().Пустая() Тогда
	//		ОткрытиеСмены = Документы.Касса_ОткрытиеСмены.СоздатьДокумент();
	//		ОткрытиеСмены.Автор = глПользователь;
	//		ОткрытиеСмены.Дата = ТекущаяДатаНаСервере();
	//		ОткрытиеСмены.СменаТТ = СменаТТ;
	//		ОткрытиеСмены.Касса = глПараметрыРМ.ККМ;
	//		ОткрытиеСмены.КассаНомер = глПараметрыРМ.ККМ.КодСуп;
	//		ОткрытиеСмены.КассаЗаводскойНомер = глПараметрыРМ.ККМ.ЗаводскойНомер;
	//		ОткрытиеСмены.НомерСмены = ВыхПараметры.НомерСмены;
	//		ОткрытиеСмены.НомерДокумента = ВыхПараметры.НомерЧека;
	//		ОткрытиеСмены.РабочееМесто = глРабочееМесто;
	//		
	//		Если ИнтерфейсРМ.ПопыткаДействияСОбъектом(ОткрытиеСмены,"Объект.Записать(РежимЗаписиДокумента.Проведение)") Тогда
	//			Если ЭтоПерваяКассоваяСмена() Тогда
	//				Попытка
	//					УправлениеСерверамиПриложений.СоздатьЛокальнуюФайловуюБазу();	
	//				Исключение
	//					ЗарегистрироватьСобытие("Резервирование.Ошибка создания локальной базы", УровеньЖурналаРегистрации.Ошибка, , ОткрытиеСмены.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	//				КонецПопытки;
	//			КонецЕсли;
	//		КонецЕсли;
	//					
	//	КонецЕсли;
	//КонецЕсли;
		
	Возврат Ответ;
	
КонецФункции

&НаКлиенте
Функция ЗакрытьСмену() Экспорт 
	
	Если ПроцедурыОбменаДанными.ОпределитьЭтаИнформационнаяБазаФайловая() Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка закрытия смены","В аварийном режиме работы закрытие смены запрещено!","","","ОК","");
		Возврат ложь;
	КонецЕсли;

	СменаТТ = ИнтерфейсРМ.ТекущаяСмена();
	Если СменаТТ.Пустая() Тогда
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка закрытия смены","Смена ТТ не открыта!","","","ОК","");
		Возврат ложь;
	КонецЕсли;
	
	Если глПараметрыРМ.ККМЕстьДоп тогда
		Попытка
			Для ИндККМ = 1 по глПараметрыРМ.ККМСписокДоп.Количество() + 1 Цикл
				Если ИндККМ = 1 Тогда
					ККМ=глПараметрыРМ.ККМ.ПолучитьОбъект();
				Иначе
					ККМ = глПараметрыРМ.ККМСписокДоп[0].ПолучитьОбъект();
				КонецЕсли;
				Обработка_ККМ=Обработка_ККМ;
				ИнициализацияТО(ККМ,Обработка_ККМ,глПараметрыРМ);
				
	
				ПростоЗакрыть = Ложь;
				СменаКасса = Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьСменуКассы();
				Если СменаКасса.Пустая() Тогда
					// добавим проверку на смену из ФН если это он
					Если СтрНайти(Врег(ккм.ИмяОбработки),"ФР_АТОЛ1") <> 0 Тогда
						ВхПар = Новый структура;
						ВыхПар = Новый Структура;
						Ответ = Обработка_ККМ.ВыполнитьКоманду("ПолучитьТекущееСостояние",ВхПар,ВыхПар);
						Если Ответ Тогда
							Если ВыхПар.Свойство("СменаОткрыта") и ВыхПар.СменаОткрыта Тогда
								// получим последнюю открытую смену по ККМ
								СменаКасса = Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьПоследнююНеЗакрытуюСменуПоНомеру(глПараметрыРМ.ККМ.КодСуп,ВыхПар.НомерСмены);
								Если не СменаКасса.пустая() ТОгда
									ПростоЗакрыть = Истина;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					Иначе
						ИнтерфейсРМ.ВопросПредупреждение("Ошибка закрытия смены","Кассовая смена не открыта!","","","ОК","");
						Возврат ложь;
					КонецЕсли;
				КонецЕсли;
		
	
				Если ИндККМ = 1 и ИнтерфейсРМ.ВопросПредупреждение("Вопрос", "Закрытие смены ККТ", "Выполнить закрытие смены?", "Да","","Esc=Нет") <> "Да" Тогда
					Возврат ложь;
				КонецЕсли;
				//Если не СменаКасса.Пустая() и ПроверитьНаличиеДенегВКассе(СменаКасса) Тогда
				//	ИнтерфейсРМ.ВопросПредупреждение("Ошибка Закрытия смены","В кассе есть остаток денежных средств.","Перед закрытием смены сделайте изъятие","","ОК","");
				//	Возврат Ложь;
				//КонецЕсли;
				//ПроверитьИУдалитьПустыеЗаказы();
				Если ИндККМ = 1 Тогда
					Попытка
						ОбъектТерминал = глПараметрыРМ.ПлатежнаяСистема.ПолучитьОбъект();
						Обработка_ПС = Обработка_ПС;
						РезультатИнит = ИнициализацияТО(ОбъектТерминал, Обработка_ПС, глПараметрыРМ);
						ОтветПС = Истина;
						ОтветККТ = Истина;
					Исключение
						Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос", "Ошибка платежного терминала" , "Продолжить выполнение?", "Да","","Esc=Нет") <> "Да" Тогда
							Возврат ложь;
						КонецЕсли;
						ОтветПС = Ложь;
					КонецПопытки;
					ВхПараметры = новый Структура;
					ВыхПараметры = Новый Массив;
					
	
					Попытка
						ОтветПС = Обработка_ПС.ВыполнитьКоманду("ИтогиДняПоКартам",ВхПараметры, ВыхПараметры);
						
						Если не ОтветПС Тогда
							Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос", "Ошибка платежного терминала |" + ВыхПараметры[0] , "Продолжить выполнение?", "Да","","Esc=Нет") <> "Да" Тогда
								Возврат ложь;
							КонецЕсли;
						Иначе
							Если ОтветПС Тогда
								Строки = ВыхПараметры[0].Строки;
								
								
								// сформируем записи в ext по закрытию смены по банку
								Коннект = sql.ПодключитьсяКloyality_ext();
								Если Коннект = Неопределено Тогда
									ЗарегистрироватьСобытие("Подключение к базе", УровеньЖурналаРегистрации.Ошибка,,,"ошибка подключения к серверу при записи Банковской смены");
								Иначе			
									ТекстЗапроса = "
									|begin
									|Insert into [Loyality_ext].[dbo].[БанковскиеСмены]
									|			(Дата
									|			,ТТ
									|			,[НомерККМ]
									|			,[СлипЗакрытия]
									|			,[Сумма])
									|Values
									|			('&ДатаДок'
									|			,&КодТТ
									|			,&НомерККМ
									|			,'&СлипЗакрытия'
									|			,&Сумма)
									|end";
									
									ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДатаДок",Формат(ТекущаяДата(),"ДФ='yyyyMMdd HH:mm:ss'; ДП='40010101 00:00:00'"));
									ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&КодТТ",формат(глРабочееМесто.Фирма.КодТТ,"ЧН=0; ЧГ=0"));
									ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&НомерККМ",Формат(глПараметрыРМ.ККМ.КодСуп,"ЧН=0; ЧГ=0"));
									СуммаИтого = 0;
									ТекстСлип = "";
									ТипБлока = 0;
									Для инд = 0 по Строки.Количество() - 1 Цикл
										СтрокаТекста = Строки[инд];
										СтрокаТекста = СтрЗаменить(СтрокаТекста,"""","""""");
										СтрокаТекста = СтрЗаменить(СтрокаТекста,"'","""""");
										ТекстСлип = ТекстСлип + СтрокаТекста + Символы.ПС;
										Если СтрНайти(ВРег(СтрокаТекста),"ОПЛАТА") <> 0 Тогда
											ТипБлока = 1;
										ИначеЕсли СтрНайти(ВРег(СтрокаТекста),"ВОЗВРАТ") <> 0 Тогда
											ТипБлока = -1;
										ИначеЕсли СтрНайти(ВРег(СтрокаТекста),"ОТМЕНА") <> 0 Тогда
											ТипБлока = 0;
										КонецЕсли;
										Если СтрНайти(ВРег(СтрокаТекста),"ВСЕГО ОПЕРАЦИЙ:") <> 0 Тогда
											Попытка
												СтрокаТекстаСумма = Строки[инд + 1];
												СуммаОп = Число(СокрЛП(СтрЗаменить(ВРег(СтрокаТекстаСумма),"НА СУММУ:","")));
											Исключение
												СуммаОп = 0;
											КонецПопытки;
											СуммаИтого = СуммаИтого + ТипБлока * СуммаОп;
										КонецЕсли;
									КонецЦикла;
									ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&СлипЗакрытия",ТекстСлип);
									ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Сумма",формат(СуммаИтого,"ЧРД=.; ЧН=0; ЧГ=0"));
									
									
									Отказ = Ложь;
									ТекстОшибки = "";
									SQL.ВыполнитьЗапрос(Коннект, ТекстЗапроса, Отказ, ТекстОшибки);
									Если Отказ Тогда 
										ЗарегистрироватьСобытие("Запись закрытия смены по СБ", УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
									КонецЕсли;
								КонецЕсли;
								
								ВхПараметры = новый Структура;
								ВхПараметры.Вставить("Строки",Строки);
								ВыхПараметры = новый Структура;
								ОтветККТ = Обработка_ККМ.ВыполнитьКоманду("ПечатьТекста",ВхПараметры,ВыхПараметры);
								Если не ОтветККТ Тогда
									Если ВыхПараметры.Свойство("Описаниеошибки") Тогда
										ТекстОшибки = "";
										ОписаниеОшибки = ВыхПараметры.ОписаниеОшибки;
										Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
											ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
										КонецЦикла;
										Если СтрНайти(ТекстОшибки,"Отчет с гашением прерван. Вход в режим невозможен") = 0 Тогда
											Если СтрНайти(ТекстОшибки,"Смена превысила 24 часа") = 0 Тогда
												ИнтерфейсРМ.ВопросПредупреждение("Ошибка Закрытия смены",ТекстОшибки,"","","ОК","");
												Возврат Ложь;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
					Исключение
						Если ИнтерфейсРМ.ВопросПредупреждение("Вопрос", "Ошибка платежного терминала" , "Продолжить выполнение?", "Да","","Esc=Нет") <> "Да" Тогда
							Возврат ложь;
						КонецЕсли;
						ОтветПС = Ложь;
					КонецПопытки;
				КонецЕсли;
				ВхПараметры = новый Структура;
				ВыхПараметры = новый Структура;
				
				// запомним номер смены
				Попытка 
					Ответ = Обработка_ККМ.ВыполнитьКоманду("ПолучитьТекущееСостояние",ВхПараметры,ВыхПараметры);
				Исключение
					ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
					Возврат Ложь;
				КонецПопытки;
				
				Если не Ответ Тогда
					Если ВыхПараметры.Свойство("ОписаниеОшибки") Тогда
						ТекстОшибки = "";
						ОписаниеОшибки = ВыхПараметры.ОписаниеОшибки;
						Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
							ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
						КонецЦикла;
						ИнтерфейсРМ.ВопросПредупреждение("Ошибка Закрытия смены",ТекстОшибки,"","","ОК","");
					КонецЕсли;
					Возврат ложь;
				Иначе
					НомерСмены = ВыхПараметры.НомерСмены;
				КонецЕсли;
		
	
				ВхПараметры = новый Структура;
				ВыхПараметры = новый Структура;
				ВхПараметры.Вставить("Кассир",Строка(глПользователь));
				
				Попытка
					ОтветЗ = Обработка_ККМ.ВыполнитьКоманду("ЗакрытьСмену",ВхПараметры,ВыхПараметры);
				Исключение
					ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
					Возврат Ложь;
				КонецПопытки;
				
				Если не ОтветЗ Тогда
					Если ВыхПараметры.Свойство("ОписаниеОшибки") Тогда
						ТекстОшибки = "";
						ОписаниеОшибки = ВыхПараметры.ОписаниеОшибки;
						Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
							ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
						КонецЦикла;
						ИнтерфейсРМ.ВопросПредупреждение("Ошибка Закрытия смены",ТекстОшибки,"","","ОК","");
					КонецЕсли;
				КонецЕсли;
	
	
				ВхПараметры1 = новый Структура;
				ВыхПараметры1 = новый Структура;
				НомерСмены1 = НомерСмены;
				ИдетПечатьОтчета = ложь;
				
				Попытка 
					Ответ = Обработка_ККМ.ВыполнитьКоманду("ПолучитьТекущееСостояние",ВхПараметры1,ВыхПараметры1);
				Исключение
					ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
					Возврат Ложь;
				КонецПопытки;
				
				Если не Ответ Тогда
					Если ВыхПараметры1.Свойство("ОписаниеОшибки") Тогда
						ТекстОшибки = "";
						ОписаниеОшибки = ВыхПараметры1.ОписаниеОшибки;
						Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
							ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
						КонецЦикла;
						ИнтерфейсРМ.ВопросПредупреждение("Ошибка Закрытия смены",ТекстОшибки,"","","ОК","");
					КонецЕсли;
					Возврат ложь;
				Иначе
					НомерСмены1 = ВыхПараметры1.НомерСмены;
					ИдетПечатьОтчета = ВыхПараметры1.НомерДокумента = 0;
				КонецЕсли;
	
	
				// формирование документа Закрытия смены Касса
				Если ОтветЗ Тогда
					ЗакрытиеСмены = Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьДокументЗакрытияСмены(СменаКасса).ПолучитьОбъект();//Документы.Касса_ЗакрытиеСмены.СоздатьДокумент();
					ЗакрытиеСмены.Автор = глПользователь;
					ЗакрытиеСмены.Дата = ТекущаяДатаНаСервере();
					ЗакрытиеСмены.СменаТТ =  СменаТТ;
					ЗакрытиеСмены.СменаКассы = СменаКасса;
					ЗакрытиеСмены.ПараметрыСмены = Новый ХранилищеЗначения(ВыхПараметры);
					ЗакрытиеСмены.РабочееМесто = глРабочееМесто;
					ЗакрытиеСмены.Совпало = ПроверитьСуммы(ВыхПараметры,глРабочееМесто,СменаКасса);
					
					ИнтерфейсРМ.ПопыткаДействияСОбъектом(ЗакрытиеСмены,"Объект.Записать(РежимЗаписиДокумента.Запись)");
					Если не ИнтерфейсРМ.ПопыткаДействияСОбъектом(ЗакрытиеСмены,"Объект.Записать(РежимЗаписиДокумента.Проведение)") Тогда
						//Ответ = Ложь;
					КонецЕсли;
					Если глПараметрыРМ.Свойство("НомерТекущегоЧека") Тогда
						глПараметрыРМ.НомерТекущегоЧека = 1;
					КонецЕсли;
				КонецЕсли;
	
				Если (НомерСмены < НомерСмены1 или ИдетПечатьОтчета) и не ОтветЗ Тогда // смена в ФН закрылась и нет параметров по смене
					ВхПараметры1 = новый Структура;
					ВыхПараметры1 = новый Структура;
					Попытка 
						Ответ = Обработка_ККМ.ВыполнитьКоманду("ПолучитьПараметрыСмены",ВхПараметры1,ВыхПараметры1);
					Исключение
						ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
						Возврат Ложь;
					КонецПопытки;
					Если ответ Тогда
						ЗакрытиеСмены = Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьДокументЗакрытияСмены(СменаКасса).ПолучитьОбъект();//Документы.Касса_ЗакрытиеСмены.СоздатьДокумент();
						ЗакрытиеСмены.Автор = глПользователь;
						ЗакрытиеСмены.Дата = ТекущаяДатаНаСервере();
						ЗакрытиеСмены.СменаТТ =  СменаТТ;
						ЗакрытиеСмены.СменаКассы = СменаКасса;
						ЗакрытиеСмены.ПараметрыСмены = Новый ХранилищеЗначения(ВыхПараметры1);
						ЗакрытиеСмены.РабочееМесто = глРабочееМесто;
						ЗакрытиеСмены.Совпало = ПроверитьСуммы(ВыхПараметры1,глРабочееМесто,СменаКасса);
						
						ИнтерфейсРМ.ПопыткаДействияСОбъектом(ЗакрытиеСмены,"Объект.Записать(РежимЗаписиДокумента.Запись)");
						Если не ИнтерфейсРМ.ПопыткаДействияСОбъектом(ЗакрытиеСмены,"Объект.Записать(РежимЗаписиДокумента.Проведение)") Тогда
							//Ответ = Ложь;
						КонецЕсли;
						Если глПараметрыРМ.Свойство("НомерТекущегоЧека") Тогда
							глПараметрыРМ.НомерТекущегоЧека = 1;
						КонецЕсли;
						
					Иначе
						Если ВыхПараметры1.Свойство("ОписаниеОшибки") Тогда
							ТекстОшибки = "";
							ОписаниеОшибки = ВыхПараметры1.ОписаниеОшибки;
							Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
								ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
							КонецЦикла;
							ИнтерфейсРМ.ВопросПредупреждение("Ошибка получения параметров Закрытия смены",ТекстОшибки,"","","ОК","");
						КонецЕсли;
						Возврат ложь;
					КонецЕсли;
				КонецЕсли;
	
	
				Попытка
					Ответ = Обработка_ККМ.ВыполнитьКоманду("ОткрытьДенежныйЯщик",ВхПараметры,ВыхПараметры);
				Исключение
					ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
					Возврат Ложь;
				КонецПопытки;
	
				Если не Ответ Тогда
					Если ВыхПараметры.Свойство("ОписаниеОшибки") Тогда
						ТекстОшибки = "";
						ОписаниеОшибки = ВыхПараметры.ОписаниеОшибки;
						Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
							ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
						КонецЦикла;
						ИнтерфейсРМ.ВопросПредупреждение("Ошибка открытия денежного ящика",ТекстОшибки,"","","ОК","");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
	КонецЕсли;		
	Возврат Ответ;
КонецФункции

Функция ПроверитьНаличиеДенегВКассе(СменаКасса)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ДенежныеОперации.Сумма) КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.ДенежныеОперации КАК ДенежныеОперации
	               |ГДЕ
	               |	ДенежныеОперации.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) И КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
	               |	И ВЫБОР
	               |			КОГДА ДенежныеОперации.Регистратор ССЫЛКА Документ.ПротоколРасчетов
	               |				ТОГДА ДенежныеОперации.Регистратор.КассоваяСмена.НомерСмены = &НомерСмены
	               |			ИНАЧЕ ДенежныеОперации.Регистратор.СменаКассы.НомерСмены = &НомерСмены
	               |		КОНЕЦ
	               |	И ДенежныеОперации.ККМ = &ККМ";
	Запрос.УстановитьПараметр("Период",ТекущаяДатаНаСервере());
	//Запрос.УстановитьПараметр("РабочееМесто",глРабочееМесто);
	Запрос.УстановитьПараметр("ККМ",СменаКасса.Касса);
	Запрос.УстановитьПараметр("НомерСмены",СменаКасса.НомерСмены);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат ложь;
	Иначе
		Выборка.Следующий();
		Если Выборка.Сумма <> 0 Тогда
			Возврат Истина;
		Иначе
			Возврат ложь;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Процедура ПроверитьИУдалитьПустыеЗаказы()
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ЗаказТовары.Ссылка.Ссылка, ЗНАЧЕНИЕ(Документ.Заказ.ПустаяСсылка)) КАК Ссылка,
	               |	КОЛИЧЕСТВО(ЗаказТовары.НомерСтроки) КАК НомерСтроки
	               |ИЗ
	               |	РегистрСведений.ЗаказДопИнф КАК ЗаказДопИнф
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Заказ.Товары КАК ЗаказТовары
	               |		ПО ЗаказДопИнф.Заказ = ЗаказТовары.Ссылка
	               |			И (ЗаказДопИнф.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказа.Открыт))
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ЗаказДопИнф.Заказ.Дата, ДЕНЬ) = &ТекДата
	               |	И ЗаказДопИнф.Заказ.РабочееМесто = &РабочееМесто
	               |	И НЕ ЗаказДопИнф.Заказ.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказТовары.Ссылка.Ссылка
	               |
	               |ИМЕЮЩИЕ
	               |	КОЛИЧЕСТВО(ЗаказТовары.НомерСтроки) = 0";
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДатаНаСервере()));
	глРабочееМесто=глРабочееМесто;
	Запрос.УстановитьПараметр("РабочееМесто",глРабочееМесто);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ссылка.пустая() Тогда 
			Продолжить;
		КонецЕсли;
		Рег = РегистрыСведений.ЗаказДопИнф.СоздатьМенеджерЗаписи();
		Рег.Заказ = Выборка.Ссылка;
		Рег.Прочитать();
		Рег.Статус = Перечисления.СтатусыЗаказа.Закрыт;
		Рег.Записать();
		Док = Выборка.ссылка.получитьобъект();
		Док.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
КонецПроцедуры

Функция ПроверитьСуммы(ПараметрыВх, РабочееМесто,СменаКасса)
	номерСмены = ПараметрыВх.НомерСмены;
	СуммаНал = ПараметрыВх.СуммаПриходНал- ПараметрыВх.СуммаВозвратПриходаНал;
	СуммаБНал = ПараметрыВх.СуммаПриходБНал - ПараметрыВх.СуммаВозвратПриходаБНал;
	Сравнилось = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(влож.Нал), 0) КАК Нал,
	               |	ЕСТЬNULL(СУММА(влож.БНал), 0) КАК БНал
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПротоколРасчетовПротокол.ВариантОплаты = ЗНАЧЕНИЕ(Справочник.ВариантыОплаты.Наличные)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ПротоколРасчетовПротокол.Ссылка.Заказ ССЫЛКА Документ.Заказ
	               |								ТОГДА ПротоколРасчетовПротокол.СуммаФакт
	               |							ИНАЧЕ -1 * ПротоколРасчетовПротокол.СуммаФакт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0) КАК Нал,
	               |		ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПротоколРасчетовПротокол.ВариантОплаты = ЗНАЧЕНИЕ(Справочник.ВариантыОплаты.Карта)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ПротоколРасчетовПротокол.Ссылка.Заказ ССЫЛКА Документ.Заказ
	               |								ТОГДА ПротоколРасчетовПротокол.СуммаФакт
	               |							ИНАЧЕ -1 * ПротоколРасчетовПротокол.СуммаФакт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0) КАК БНал
	               |	ИЗ
	               |		Документ.ПротоколРасчетов.Протокол КАК ПротоколРасчетовПротокол
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказДопИнф КАК ЗаказДопИнф
	               |			ПО ПротоколРасчетовПротокол.Ссылка.Заказ.Ссылка = ЗаказДопИнф.Заказ
	               |				И (ЗаказДопИнф.Статус = &Закрыт)
	               |	ГДЕ
				   //|		ПротоколРасчетовПротокол.Ссылка.Заказ.НомерСмены = &НомерСмены
				   //|		И ПротоколРасчетовПротокол.Ссылка.Заказ.РабочееМесто = &РабочееМесто
				   |		ПротоколРасчетовПротокол.Ссылка.ККМ = &ККМ
	               |		И ПротоколРасчетовПротокол.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПротоколРасчетовПротокол.ВариантОплаты = ЗНАЧЕНИЕ(Справочник.ВариантыОплаты.Наличные)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ПротоколРасчетовПротокол.Ссылка.Заказ ССЫЛКА Документ.Заказ
	               |								ТОГДА ПротоколРасчетовПротокол.СуммаФакт
	               |							ИНАЧЕ -1 * ПротоколРасчетовПротокол.СуммаФакт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0),
	               |		ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПротоколРасчетовПротокол.ВариантОплаты = ЗНАЧЕНИЕ(Справочник.ВариантыОплаты.Карта)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ПротоколРасчетовПротокол.Ссылка.Заказ ССЫЛКА Документ.Заказ
	               |								ТОГДА ПротоколРасчетовПротокол.СуммаФакт
	               |							ИНАЧЕ -1 * ПротоколРасчетовПротокол.СуммаФакт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0)
	               |	ИЗ
	               |		Документ.ПротоколРасчетов.Протокол КАК ПротоколРасчетовПротокол
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВозвратДопИнф КАК ВозвратДопИнф
	               |			ПО ПротоколРасчетовПротокол.Ссылка.Заказ.Ссылка = ВозвратДопИнф.Возврат
	               |				И (ВозвратДопИнф.Статус = &Закрыт)
	               |	ГДЕ
				   //|		ПротоколРасчетовПротокол.Ссылка.Заказ.НомерСмены = &НомерСмены
				   //|		И ПротоколРасчетовПротокол.Ссылка.Заказ.РабочееМесто = &РабочееМесто
				   |		ПротоколРасчетовПротокол.Ссылка.ККМ = &ККМ
	               |		И ПротоколРасчетовПротокол.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)) КАК влож";
	Запрос.УстановитьПараметр("НомерСмены",номерСмены);
	//Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
	Запрос.УстановитьПараметр("Дата",СменаКасса.Дата);
	Запрос.УстановитьПараметр("ККМ",СменаКасса.Касса);
	Запрос.УстановитьПараметр("Закрыт",Перечисления.СтатусыЗаказа.Закрыт);
	Выборка = Запрос.Выполнить().Выбрать();
	СуммаТТ = 0;
	Пока Выборка.Следующий() Цикл
		СуммаТТ = СуммаТТ + Выборка.Нал + Выборка.БНал;
		Если Выборка.Нал = Окр(СуммаНал,2) и Выборка.БНал = Окр(СуммаБНал,2) Тогда
			Сравнилось = Истина;
		КонецЕсли;
	КонецЦикла;
	Если не Сравнилось Тогда // отправим почту
		ТекстПисьма = "Ошибка закрытия кассовой смены ТТ " + РабочееМесто + ". " + Символы.ПС + "Расхождения в суммах: Сумма по Документам ТТ - " + СуммаТТ + "." + Символы.ПС;
		ТекстПисьма = ТекстПисьма + "Сумма по ККМ - " + Окр((СуммаНал + СуммаБНал),2) + ".";
		Получатели = "disp_cto_kc@myasnov.ru;dez.admin.SUP@coolclever.ru";
		ЭлектроннаяПочта.ОтправитьОповещениеНаПочту("Ошибка закрытия ККМ",ТекстПисьма,Получатели);
	КонецЕсли;
	Возврат Сравнилось;
КонецФункции

&НаКлиенте
Функция ОтчетБезГашения() Экспорт
	ККМ=глПараметрыРМ.ККМ.ПолучитьОбъект();
	Обработка_ККМ=Обработка_ККМ;
	ИнициализацияТО(ККМ,Обработка_ККМ,глПараметрыРМ);
	ВхПараметры = новый Структура;
	ВыхПараметры = новый Структура;
	
	Попытка
		Ответ = Обработка_ККМ.ВыполнитьКоманду("НапечататьОтчетБезГашения",ВхПараметры,ВыхПараметры);
	Исключение
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка", "Ошибка ККМ", ОписаниеОшибки(), "","ОК", "");
		Возврат Ложь;
	КонецПопытки;
	
	
	Если не Ответ Тогда
		Если ВыхПараметры.Свойство("ОписаниеОшибки") Тогда
			ТекстОшибки = "";
			ОписаниеОшибки = ВыхПараметры.ОписаниеОшибки;
			Для к = 0 по ОписаниеОшибки.Количество()-1 Цикл
				 ТекстОшибки = ТекстОшибки + ОписаниеОшибки[к];
			КонецЦикла;
			ИнтерфейсРМ.ВопросПредупреждение("Ошибка Открытия смены",ТекстОшибки,"","","ОК","");
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ЭтоПерваяКассоваяСмена()
	
	Перем Выборка, Запрос;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Касса_ОткрытиеСмены.Ссылка) КАК Ссылка
	|ИЗ
	|	Документ.Касса_ОткрытиеСмены КАК Касса_ОткрытиеСмены
	|ГДЕ
	|	Касса_ОткрытиеСмены.РабочееМесто = &РабочееМесто
	|	И Касса_ОткрытиеСмены.Дата МЕЖДУ Началопериода(&Дата,День) И Конецпериода(&Дата,День)";
	Запрос.УстановитьПараметр("РабочееМесто",глРабочееМесто);
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка <> 1 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

