
Перем ПараметрыТО Экспорт;   // Параметры торгового оборудования.
Перем Результат Экспорт;     // Результат выполнения действия.

Перем ТаблицаПараметрыСтроки;

#Если Клиент Тогда

// Производит инициализацию торгового оборудования.
//
Процедура Инициализация() Экспорт
	
	ПрочитатьПараметр("ШиринаОбластиПечати"	, 41);
	ПрочитатьПараметр("КолвоСимволовВСтроке", 40);
	ПрочитатьПараметр("ИмяШрифта"			, "Courier New");
	ПрочитатьПараметр("ШрифтОсновнойРазмер"	, 8);
	ПрочитатьПараметр("ШрифтДвойнойРазмер"	, 10);
	ПрочитатьПараметр("ИмяПринтера"			, "");
	ПрочитатьПараметр("ПреПросмотр"			, Ложь);
	
	ЗаполнитьПараметрыСтроки();
	
КонецПроцедуры

// Выполняет чтение параметра ТО.
//
// Параметры:
//  ИмяПараметра        - имя параметра,
//  ЗначениеПоУмолчанию - значение по умолчанию для данного параметра.
//
// Возвращаемое значение:
//  Значение параметра или значение по умолчанию
//
Процедура ПрочитатьПараметр(ИмяПараметра,ЗначениеПоУмолчанию)
	
	Если НЕ ПараметрыТО.Свойство(ИмяПараметра) Тогда
		ПараметрыТО.Вставить(ИмяПараметра,ЗначениеПоУмолчанию);
	КонецЕсли; 
	
	ЭтотОбъект[ИмяПараметра] = ПараметрыТО[ИмяПараметра];
	
КонецПроцедуры

// Выполняет действие с ТО.
//
// Параметры:
//  Действие - имя действия,
//  ПараметрыДействия - произвольный набор параметров
//
Процедура ВыполнитьДействие(Действие,ПараметрыДействия) Экспорт
	
	Если Действие = "Подключить" Тогда
		Подключить();
		
	ИначеЕсли Действие = "Отключить" Тогда
		
	ИначеЕсли Действие = "Печать" Тогда
		Если НЕ ПараметрыДействия.Свойство("КолвоКопий") Тогда
			ПараметрыДействия.Вставить("КолвоКопий", 1);
		КонецЕсли; 
		
		Печать( ПараметрыДействия.ТаблицаЗадания, ПараметрыДействия.КолвоКопий );
		
	Иначе
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Неизвестная команда!";
		Результат.Подробно	= "Команда """+Действие+""" не определена для "+ТО.Наименование;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет подключение ТО.
//
// Возвращаемое значение:
//  Истина - есть ошибка, ложь - нет.
//
Процедура Подключить() Экспорт
	
	
КонецПроцедуры

// Печать задания
//
Процедура Печать(ТаблицаЗадания, КолвоКопий)
	
	ФормаПечати = ПолучитьФорму("Печать");
	Таб = ФормаПечати.ЭлементыФормы.ПолеТабличногоДокумента;
	Таб.Очистить();
	
	МаксИндекс = ТаблицаЗадания.Количество()-1;
	ИндексСтроки = 0;
	Задание = ТаблицаЗадания[ИндексСтроки];
	
	Пока Задание<>Неопределено Цикл
		
		Область = Таб.Область(Таб.ВысотаТаблицы+1, 1);
		
		Если Задание.ТипДанных="Строка" ИЛИ Задание.ТипДанных="ЧастичнаяОтрезка" Тогда
			
			Если Задание.ТипДанных="ЧастичнаяОтрезка" Тогда
				// вместо отрезки выведем надпись
				Задание.Данные    = "------ отрезка ------";
				Задание.Параметры = "Центр,ПереводСтроки";
			КонецЕсли;
			
			Параметры = СформироватьСтруктуруПараметровСтроки(Задание.Данные, Задание.Параметры);
			
			Если ЗначениеЗаполнено(ИмяШрифта) Тогда
				ТекИмяШрифта = ИмяШрифта;
			Иначе	
				ТекИмяШрифта = "Courier New";
			КонецЕсли;	
			
			Если Параметры.TextWrap=1 Тогда
				Область.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			Иначе
				Область.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Обрезать;
			КонецЕсли;   
			
			Если Параметры.FontDblHeight=1 ИЛИ Параметры.FontDblWidth=1 Тогда
				РазмерШрифта = ШрифтДвойнойРазмер;
			Иначе
				РазмерШрифта = ШрифтОсновнойРазмер;
			КонецЕсли;
			
			Если Задание.Данные="СтрЧерта" ИЛИ Задание.Данные="СтрОтчерк" Тогда
				Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
			ИначеЕсли Параметры.Alignment=1 Тогда
				Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
			ИначеЕсли Параметры.Alignment=2 Тогда
				Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			Иначе
				Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
			КонецЕсли;

			Область.ШиринаКолонки = ШиринаОбластиПечати;//48x10 = 56
			
			Область.Шрифт = Новый Шрифт(Область.Шрифт, ТекИмяШрифта, РазмерШрифта, Параметры.FontBold, Параметры.FontItalic, Параметры.FontUnderLine);
			
			Стр = "";
			ПереводСтроки = 0;
			Пока Задание<>Неопределено И НЕ ПереводСтроки Цикл
				
				Параметры = СформироватьСтруктуруПараметровСтроки(Задание.Данные, Задание.Параметры);
				Стр = Стр+Параметры.Caption;
				ПереводСтроки = Параметры.TextNewLine;
				
				ИндексСтроки = ИндексСтроки + 1;
				Задание = ?(ИндексСтроки<=МаксИндекс, ТаблицаЗадания[ИндексСтроки], Неопределено);
			КонецЦикла;
			
			Область.Текст = Стр;	
	
		ИначеЕсли Задание.ТипДанных="ШтрихКод" Тогда
			
			МакетШтрихКод = ПолучитьМакет("ШтрихКод");
			Попытка
				МакетШтрихКод.Рисунки.ШтрихКод.Объект.Сообщение = Задание.Данные;
				МакетШтрихКод.Рисунки.ШтрихКод.Объект.ОтображатьТекст = Ложь;
			Исключение
				Результат.Описание	= "Ошибка печати ШК!";
				Результат.Подробно	= "Не установлен элемент управления" + Символы.ПС + """1С: Печать штрих-кодов""";
			КонецПопытки;
			
			Таб.Вывести(МакетШтрихКод);
			
			ИндексСтроки = ИндексСтроки + 1;
			Задание = ?(ИндексСтроки<=МаксИндекс, ТаблицаЗадания[ИндексСтроки], Неопределено);
			
		ИначеЕсли Задание.ТипДанных="QRКод" Тогда
			
			ИзображениеQRКод = ПолучитьИзображениеQRcode(Задание.Данные);
			
			МакетQRКод = ПолучитьМакет("QRКод");
			МакетQRКод.Рисунки.КартинкаОбъекта.Картинка = ИзображениеQRКод;
			Таб.Вывести(МакетQRКод);
			
			ИндексСтроки = ИндексСтроки + 1;
			Задание = ?(ИндексСтроки<=МаксИндекс, ТаблицаЗадания[ИндексСтроки], Неопределено);

		ИначеЕсли Задание.ТипДанных="Картинка" Тогда	
			
			ФайлНаДиске = Новый Файл( Строка(Задание.Данные) );
			
			Если ФайлНаДиске.Существует() Тогда
				ВыбраннаяКартинка = Новый Картинка(ФайлНаДиске.ПолноеИмя, Ложь);
				МакетКартинка = ПолучитьМакет("Картинка");
				МакетКартинка.Рисунки.КартинкаОбъекта.Картинка = ВыбраннаяКартинка;
				Таб.Вывести(МакетКартинка);
			КонецЕсли;
			
			ИндексСтроки = ИндексСтроки + 1;
			Задание = ?(ИндексСтроки<=МаксИндекс, ТаблицаЗадания[ИндексСтроки], Неопределено);
			
		Иначе
			
			ИндексСтроки = ИндексСтроки + 1;
			Задание = ?(ИндексСтроки<=МаксИндекс, ТаблицаЗадания[ИндексСтроки], Неопределено);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Таб.ИмяПараметровПечати	= ТО.Наименование;
	Таб.ПолеСверху			= 0;
	Таб.ПолеСнизу			= 0;
	Таб.ПолеСлева			= 0;
	Таб.ПолеСправа			= 0;
	Таб.РазмерКолонтитулаСверху = 0;
	Таб.РазмерКолонтитулаСнизу  = 0;
	Таб.АвтоМасштаб			= Истина;
	Таб.ИмяПринтера			= ИмяПринтера;
	Таб.КоличествоЭкземпляров = КолвоКопий;
	
	Если ПреПросмотр Тогда
		Если НЕ ФормаПечати.ОткрытьМодально()="ОК" Тогда
			Результат.Ошибка	= Истина;
			Результат.Описание	= "Ошибка печати!";
			Результат.Подробно	= "Задание не было послано на принтер...";
		КонецЕсли; 
		
	Иначе
		Попытка
			Таб.Напечатать( ЗначениеЗаполнено(ИмяПринтера) );
		Исключение
			Результат.Подробно	= ОписаниеОшибки();
			Результат.Ошибка	= Истина;
			Результат.Описание	= "Ошибка печати!";
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИзображениеQRcode(КодируемаяИнформация, Ширина=150, Высота=150, УровеньОшибок="L", Отступ = 1, Тень=Ложь, Сглаживание = Ложь, Текстура="") Экспорт
	
	Возврат Новый Картинка;
	
КонецФункции

// Формирует таблицу значений из макета "ПараметрыСтроки"
//
Процедура ЗаполнитьПараметрыСтроки()
	
	ТаблицаПараметрыСтроки = Новый ТаблицаЗначений;
	ТаблицаПараметрыСтроки.Колонки.Добавить("ИдПарам");
	ТаблицаПараметрыСтроки.Колонки.Добавить("СтрЗнач");
	ТаблицаПараметрыСтроки.Колонки.Добавить("ЧислЗач");
	
	Таб = ПолучитьМакет("ПараметрыСтроки");
	
	Для НомСтр=1 По Таб.ВысотаТаблицы Цикл
		
		ИдПарам = Таб.Область(НомСтр,1).Текст;
		Если НЕ ЗначениеЗаполнено(ИдПарам) Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыСтроки = ТаблицаПараметрыСтроки.Добавить();
		ПараметрыСтроки.ИдПарам = ИдПарам;
		ПараметрыСтроки.СтрЗнач = Врег(Таб.Область(НомСтр,2).Текст);
		ПараметрыСтроки.ЧислЗач = Число(Таб.Область(НомСтр,3).Текст);
		
	КонецЦикла;
	
КонецПроцедуры

// Преобразует строку параметров в структуру, используя таблицу параметров
//
Функция СформироватьСтруктуруПараметровСтроки(Знач СтрПечати, Знач СтрПараметры)
	
	СтруктураПараметров = Новый Структура;
	
	Если СтрПечати="СтрОтчерк" Тогда
		СтрПечати="=============================================================================================";
	ИначеЕсли СтрПечати="СтрЧерта" Тогда
		СтрПечати="---------------------------------------------------------------------------------------------";
	КонецЕсли;

	СтруктураПараметров.Вставить("Caption",СтрПечати);
	
	РазделительСтрок = Символы.ПС + Символы.ВК;
	СтрПараметры = СтрЗаменить(СтрПараметры, РазделительСтрок,"");	// убираем лишние переводы строк
	СтрПараметры = СтрЗаменить(СтрПараметры, ",", РазделительСтрок);
	
	Для н=1 По СтрЧислоСтрок(СтрПараметры) Цикл
		
		Парам = СтрПолучитьСтроку(СтрПараметры,н);
		
		ПараметрыСтроки = ТаблицаПараметрыСтроки.Найти(Врег(Парам), "СтрЗнач");
		Если ПараметрыСтроки <> Неопределено Тогда
			СтруктураПараметров.Вставить(ПараметрыСтроки.ИдПарам, ПараметрыСтроки.ЧислЗач);
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ПараметрыСтроки Из ТаблицаПараметрыСтроки Цикл
		
		Если НЕ СтруктураПараметров.Свойство(ПараметрыСтроки.ИдПарам) Тогда
			СтруктураПараметров.Вставить(ПараметрыСтроки.ИдПарам, ПараметрыСтроки.ЧислЗач);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураПараметров;
КонецФункции

#КонецЕсли

Результат = Новый Структура("Ошибка,Описание,Подробно",Ложь,"","");
