Перем AutohotkeyDLL;
Перем ФормаСкрытияМеню, фФормаСкрытияМеню;

Процедура ОбновитьНадписьИтого() Экспорт
	Если Не ЭтаФорма.Открыта() Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ДатаРождения = Заказ.ДатаРождения;
	Исключение
		ДатаРождения = Дата(1,1,1);
	КонецПопытки;
	
	Если ТекущийРежим = "ВОЗВРАТ" Тогда
		ЭлементыФормы.тпТовары.Видимость = 0;
		ЭлементыФормы.тпТоварыВозврат.Видимость = 1;
	Иначе
		ЭлементыФормы.тпТовары.Видимость = 1;
		ЭлементыФормы.тпТоварыВозврат.Видимость = 0;
	КонецЕсли;
	
	ЕстьТовары = ТекущийДокумент.Товары.Итог("Количество");
	Если ЕстьТовары Тогда 
		ЭлементыФормы.НадписьИтого.Заголовок = Формат(ТекущийДокумент.Товары.Итог("Сумма"), "ЧДЦ=2; ЧРД=.; ЧН=-") + " " + глСимволРубля;
		УстановитьДоступностьКнопки("Оплата",1,1);
		УстановитьДоступностьКнопки("Сторно",фВводТоваровДоступен);
		УстановитьДоступностьКнопки("СторноВсе",фВводТоваровДоступен);
	Иначе
		ЭлементыФормы.НадписьИтого.Заголовок = "";
		УстановитьДоступностьКнопки("Оплата",0);
		УстановитьДоступностьКнопки("Сторно",0);
		Если ТекущийРежим = "ВОЗВРАТ" Тогда
			УстановитьДоступностьКнопки("СторноВсе", Истина);
		Иначе
			УстановитьДоступностьКнопки("СторноВсе", ?(ЗначениеЗаполнено(ДатаРождения),1,0));
		КонецЕсли;
	КонецЕсли;
	
	Если НадписьСдача <> Неопределено Тогда
		ЭлементыФормы.НадписьСумма.Заголовок = "СДАЧА";
		ЭлементыФормы.НадписьИтого.Заголовок = СтрЗаменить(НадписьСдача, ",", ".");
	Иначе
		ЭлементыФормы.НадписьСумма.Заголовок = "СУММА";
		Если Не ТекущийДокумент.Товары.Итог("Сумма") Тогда
			ЭлементыФормы.НадписьСумма.Заголовок = "";
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьТовары Тогда
		Попытка
			ЭлементыФормы.тпТовары.ТекущаяСтрока = Заказ.Товары[Заказ.Товары.Количество()-1];
		Исключение
		КонецПопытки;
		Попытка
			ТекущийЭлемент = ЭлементыФормы.ОплатаКартойТень;
		Исключение
		КонецПопытки;
	КонецЕсли;
	НадписьЛояльность = "";
	Если ЗначениеЗаполнено(ТекущийДокумент.НомерКартыЛояльности) Тогда
		Если СтрДлина(СокрП(ТекущийДокумент.НомерКартыЛояльности)) <= 10 Тогда
			НадписьЛояльность = "Карта: ******"+Прав(ТекущийДокумент.НомерКартыЛояльности,4);
		Иначе
			НадписьЛояльность = "Карта применена";
		КонецЕсли;
	КонецЕсли;
	
	Если Не ТекущийДокумент.КартаДоступа.Пустая() Тогда
		НадписьЛояльность = НадписьЛояльность + ?(НадписьЛояльность = "", "", Символы.ПС) +	"Карта доступа " + ТекущийДокумент.КартаДоступа;
	КонецЕсли;
	
	Если ТипЗнч(ТекущийДокумент) = Тип("ДокументОбъект.Заказ") Тогда
		Если ТекущийДокумент.Купоны.Количество() Тогда
			НадписьЛояльность = НадписьЛояльность + Символы.ПС + "Сертификат" + ?(ТекущийДокумент.Купоны.Количество() = 1, " ", "ы ") + "применен" + ?(ТекущийДокумент.Купоны.Количество() = 1, " ", "ы ");
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.Количество.Заголовок = "КОЛ-ВО";
	Если ЗначениеЗаполнено(ТекКоличество) Тогда
		Если ТекКоличество<>1 Тогда
			ЭлементыФормы.Количество.Заголовок = ТекКоличество;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьДоступностьКнопки(ИмяКнопки, Доступность, Акцент = 0, Свойство = "Доступность") Экспорт
	Кнопка = ЭлементыФормы[ИмяКнопки];
	МассивТеней = Массив(ЭлементыФормы[ИмяКнопки+"Тень"]);
	Тень2 = ЭлементыФормы.Найти(ИмяКнопки+"Тень2");
	Если Не Тень2 = Неопределено Тогда
	
		МассивТеней.Добавить(Тень2);
	
	КонецЕсли; 
	
	ЦветКнопки = ?(Акцент, Метаданные.ЭлементыСтиля.Акцент.Значение, Метаданные.ЭлементыСтиля.ЦветТемы.Значение);
	ЦветФонаНеактивнойКнопки = Метаданные.ЭлементыСтиля.НеактивнаяКнопка.Значение;
	ЦветТекстаНеактивнойКнопки = Метаданные.ЭлементыСтиля.НеактивныйЭлемент.Значение;
	
	Кнопка[Свойство] = Доступность;
	Кнопка.ЦветФонаКнопки 	=  ?(Доступность, ЦветКнопки, ЦветФонаНеактивнойКнопки);
	Кнопка.ЦветТекстаКнопки =  ?(Доступность, WebЦвета.Белый, 	ЦветТекстаНеактивнойКнопки);
	Кнопка.ЦветРамки = Кнопка.ЦветФонаКнопки;
	
	Для каждого Тень Из МассивТеней Цикл
		
		Тень.Видимость = Доступность;
		
	КонецЦикла; 
	
			
КонецПроцедуры

Процедура ОбновитьВремя() Экспорт
	Если Не ЭтаФорма.Открыта() Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭлементыФормы.Надпись1.Ширина>Ширина и глСтекОкон.Количество() = 1 Тогда
		ВосстановитьФорму();
		ПодключитьОбработчикОжидания("ОбновитьВремя",10,1);	
		Возврат;
	КонецЕсли;
	Если ЭлементыФормы.АппБар.Высота < 750 и глСтекОкон.Количество() = 1 Тогда
		Если фФормаСкрытияМеню < 10 Тогда
			фФормаСкрытияМеню = фФормаСкрытияМеню + 1;
			
			ФормаСкрытияМеню = Обработки.СкрытьМенюИПанели.ПолучитьФорму();
			Если не ФормаСкрытияМеню.Открыта() Тогда
				ФормаСкрытияМеню.Открыть();	
			КонецЕсли;
			ПодключитьОбработчикОжидания("ОбновитьВремя",10,1);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//ВЕСЫ
	ЭлементыФормы.кнВесы.Видимость = глПараметрыРМ.ВесыЕсть;
	Если глПараметрыРМ.ВесыЕсть Тогда
		Вес = Обработка_Весы.DRV.Вес;
		//Вес = глТорговоеОборудование.Scale1C.Вес;
		ОбновитьВес();
	КонецЕсли;
	
	ЭлементыФормы.тДата.Заголовок = Формат(ТекущаяДатаНаСервере(),"ДФ='dddd, d MMMM'");
	ЭлементыФормы.тВремя.Заголовок = Формат(ТекущаяДатаНаСервере(),"ДФ=HH:mm");
	ЭлементыФормы.тПользователь.Заголовок = ?(ЗначениеЗаполнено(глПользователь), ?(ТекущийРежим = "ВОЗВРАТ", "ВОЗВРАТ ", "ПРОДАЖА ") + Символы.ПС +
											Строка(глПользователь), "Система заблокирована");
	Если Не глФлагБлокировка Тогда
		ЭлементыФормы.тКасса.Заголовок = "Касса № " + глПараметрыРМ.НомерКассы;
		ЭлементыФормы.тСмена.Заголовок = "Смена № " + НомерТекущейСмены();
		ЭлементыФормы.тЗаказ.Заголовок = "Заказ № " + НомерТекущегоЗаказа();
		ЭлементыФормы.тЧек.Заголовок   = "Чек   № " + НомерТекущегоЧека();
	КонецЕсли;

	ПодключитьОбработчикОжидания("ОбновитьВремя",10,1);	
КонецПроцедуры

Процедура ОбновитьОстальное() Экспорт
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ДействияПередОткрытиемФормы(ЭтаФорма, Отказ);
КонецПроцедуры

Процедура ПриОткрытии()
	ПодключитьОбработчикОжидания("ОбновитьВремя",2,1);
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	Если ирКэш.ЭтоФайловаяБазаЛкс() Тогда
		Стиль = БиблиотекаСтилей.СтанцияОплатыОфлайн;
	Иначе
		Стиль = БиблиотекаСтилей.СтанцияОплаты;
	КонецЕсли;

	ОбновитьНадписьИтого();
	РаботаСокнами.Затемнить();
	ПодключитьОбработчикОжидания("Через2СекундыПослеОткрытия",0.5,1);
КонецПроцедуры

Процедура СкрытьМенюИПанели() Экспорт 
	ПодключитьОбработчикОжидания("ВосстановитьФорму",1,1);
КонецПроцедуры

Процедура ВосстановитьФорму() Экспорт
	Если ФормаСкрытияМеню = Неопределено Тогда
		//Если РежимТестирования Тогда
		//	Возврат;
		//КонецЕсли;
		Если AutohotkeyDLL = Неопределено Тогда
			AutohotkeyDLL = РаботаСокнами.AHK(,"ВосстановитьФорму");
		КонецЕсли;
		
		Cкрипт = "
		|#NoTrayIcon
		|WinWaitActive, ahk_pid %pid ahk_class V8TopLevelFrame,,15
		|Sleep 100
		|WinRestore, ahk_pid %pid ahk_class V8TopLevelFrame
		|WinMaximize, ahk_pid %pid ahk_class V8TopLevelFrame
		|Sleep 100
		|Send {alt down}{shift down}{VK52}{alt up}{shift up}
		|Exitapp";	
		Cкрипт = СтрЗаменить(Cкрипт, "%pid", формат(РаботаСокнами.pid, "ЧГ=0"));
		AutohotkeyDLL.ahkTextDll(Cкрипт);		
		
		Возврат;
	КонецЕсли;
	Если ФормаСкрытияМеню.Открыта() Тогда
		ПодключитьОбработчикОжидания("ВосстановитьФорму",0.3,1);	
	Иначе
		Если AutohotkeyDLL = Неопределено Тогда
			AutohotkeyDLL = РаботаСокнами.AHK(,"ВосстановитьФорму");
		КонецЕсли;
		Cкрипт = "
		|#NoTrayIcon
		|WinWaitActive, ahk_pid %pid ahk_class V8TopLevelFrame,,15
		|Sleep 100
		|WinRestore, ahk_pid %pid ahk_class V8TopLevelFrame
		|WinMaximize, ahk_pid %pid ahk_class V8TopLevelFrame
		|Sleep 100
		|Send {alt down}{shift down}{VK52}{alt up}{shift up}
		|Exitapp";	
		Cкрипт = СтрЗаменить(Cкрипт, "%pid", формат(РаботаСокнами.pid, "ЧГ=0"));
		AutohotkeyDLL.ahkTextDll(Cкрипт);		
		
		AutohotkeyDLL.ahkFunction("Rest");
		РаботаСокнами.РазблокироватьВвод();
		РаботаСокнами.УбратьЗатемнение();
		AutohotkeyDLL = Неопределено;
		ФормаСкрытияМеню = Неопределено;
		ЭтаФорма.ТолькоПросмотр = 0;
		Заблокировать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЧерезСекундуПослеАвторизации() Экспорт
	ПодключитьОбработчикОжидания("СкрытьМенюИПанели",0.1,1);
	Попытка
		//Скрипт = "
		//|#NoTrayIcon
		//|; SetWinDelay 100	
		//|WinWaitActive, ahk_pid %pid% %Заголовок%
		//|WinGetPos X, Y, W, H, ahk_pid %pid% ahk_class V8TopLevelFrame
		//|nW := A_ScreenWidth
		//|nH := A_ScreenHeight
		//|IF ( X + Y <> 0) OR (W < %A_ScreenWidth%)
		//|{
		//|	WinMove, ahk_pid %pid% ahk_class V8TopLevelFrame,0,0,%nW%,%nH%
		//|
		//|	WinMaximize ahk_pid %pid% ahk_class V8TopLevelFrame
		//|}
		//|Send {alt down}{shift down}{VK52}{alt up}{shift up} ; Alt+Shift+R
		//|Send {ctrl down}{shift down}{VK5A}{ctrl up}{shift up} ; Ctrl+Shift+Z 
		//|";
		//Скрипт = СтрЗаменить(Скрипт, "%pid%", формат(РаботаСокнами.pid, "ЧГ=0"));
		//Скрипт = СтрЗаменить(Скрипт, "%Заголовок%", Заголовок);
		//Платформа = ирКэш.Получить();
		//AutohotkeyDLL2 = РаботаСокнами.AHK();
		//Если не AutohotkeyDLL2=Неопределено Тогда
		//	AutohotkeyDLL2.ahkTextDll(Скрипт);
		//КонецЕсли;
		
		//Сообщить(Скрипт);
		//Пока AutohotkeyDLL2.ahkReady() Цикл
		//КонецЦикла;
		
		//Обработки.СкрытьМенюИПанели.ПолучитьФорму().Открыть();	
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

Процедура Через2СекундыПослеОткрытия() Экспорт
	ИнициализацияЗаказа(Истина);
	ОбновитьНадписьИтого();
	ЭтаФорма.ТолькоПросмотр = 1;
	
	ПодключитьОбработчикОжидания("ЧерезСекундуПослеАвторизации",0.5,1);
		
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	ДействияПередЗакрытиемФормы(ЭтаФорма, Отказ);
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура ИнициализацияТаблицыТоваров()
	
КонецПроцедуры

Процедура тпТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура тпТоварыПослеУдаления(Элемент)
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура тпТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки = Неопределено Тогда
		ОформлениеСтроки.ЦветТекста = ОформлениеСтроки.ЦветФона;
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.фАлкоголь = 1 Тогда
		ОформлениеСтроки.Ячейки.Количество.Шрифт = Новый Шрифт("FontAwesome",24);
		ОформлениеСтроки.Ячейки.Количество.УстановитьТекст(Шрифты.ПолучитьСимвол("glass"));
		ОформлениеСтроки.Ячейки.Цена.ОтображатьТекст = 0;
	Иначе
		ОформлениеСтроки.Ячейки.х.УстановитьТекст("х");	
		Если ДанныеСтроки.Количество = 0 Тогда
			ОформлениеСтроки.Ячейки.Количество.УстановитьТекст(ДанныеСтроки.КоличествоНачальное);
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеСтроки.Количество Тогда
		ОформлениеСтроки.Ячейки.Равно.УстановитьТекст("=");	
	Иначе 
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,,,,Истина); // зачеркнутый
	КонецЕсли;                                                                                   
	
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();	
	AutohotkeyDLL = Неопределено;
КонецПроцедуры

Процедура СторноВсеНажатие(Элемент)
	глПользователь = Неопределено;
	Авторизация(,Истина);
	СторноВсе();
	ОбновитьНадписьИтого();
КонецПроцедуры                 

Процедура тпТоварыТоварПриИзменении(Элемент)
	ЗаполнитьЗначенияСвойств(ЭлементыФормы.тпТовары.ТекущиеДанные, ЭлементыФормы.тпТовары.ТекущиеДанные.Товар);
	Если ЭлементыФормы.тпТовары.ТекущиеДанные.фАлкоголь Тогда
		ЭлементыФормы.тпТовары.ТекущиеДанные.ПДФ = ВводПДФ(ЭлементыФормы.тпТовары.ТекущиеДанные.Товар);
	КонецЕсли;
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура ПриЗакрытииМеню() Экспорт
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если  Ложь Тогда ЗначениеВыбора = Справочники.Товары.ПустаяСсылка() КонецЕсли;
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.Товары") Тогда 
		Если Не ЗначениеЗаполнено(ТекКоличество) Или ТекКоличество = 1 Тогда
			
			Если ЗначениеВыбора.ЗапросКоличества Тогда
				ИзменитьКоличество();
			КонецЕсли;
	
		КонецЕсли;
		ВводНовойСтроки(ЗначениеВыбора);
	КонецЕсли;
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура ВыборТовараНажатие(Элемент)
	ВыборТовараИзМеню();
КонецПроцедуры

Процедура ПоискТовараНажатие(Элемент)
	ОткрытьФормуПоиска();
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура ЗаблокироватьНажатие(Элемент)
	Заблокировать();
КонецПроцедуры

Процедура ОплатаНажатие(Элемент)
	УстановитьДоступностьКнопки("Оплата", 0);
	Попытка
		Если ТекущийРежим = "ВОЗВРАТ" Тогда
			ВозвратОплаты();
		Иначе
			Оплата();
		КонецЕсли;
		
		ОбновитьНадписьИтого();
	Исключение
		ЗарегистрироватьСобытие("Ошибка выполенния в форме оплаты", УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура РежимАдминистратораНажатие(Элемент)
	ОткрытьМенюОпераций();
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура КоличествоНажатие(Элемент)
	ИзменитьКоличество();
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура СторноНажатие(Элемент)
	глПользователь = Неопределено;
	Авторизация(,Истина);
	Сторно();
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	глПараметрыРМ.ОбрезкаОкон = Не глПараметрыРМ.ОбрезкаОкон;
	глПараметрыРМ.ТениОкон =  ИнтерфейсРМ.ВопросПредупреждение("Вопрос","Настройка UI", "Скрытие рамки и заголовков окон " + ?(глПараметрыРМ.ОбрезкаОкон, "включено", " отключено") + " 
		|Включить тени окон?","ДА","","НЕТ") = "ДА";	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ИзменениеСмены" Тогда
		//глПараметрыРМ.Вставить("НомерСмены", ИнтерфейсРМ.ТекущаяСмена().Номер);
		фВводТоваровДоступен = ЗначениеЗаполнено(ИнтерфейсРМ.ТекущаяСмена().Номер);
	КонецЕсли; 
КонецПроцедуры

Процедура кнЛояльностьНажатие(Элемент)
	МенюЛояльности();
	ОбновитьНадписьИтого();
КонецПроцедуры

Функция ПанелиСкрыты() Экспорт
	Если РежимТестирования Тогда
		Возврат Истина;
	КонецЕсли;
	Если фФормаСкрытияМеню = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Если ФормаСкрытияМеню.Открыта() Тогда
			Возврат Ложь;
		КонецЕсли;
		
	Исключение
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

#Область ВЕСЫ

Процедура кнВесыНажатие(Элемент)
	глОтсечкаПростоя();
	Если НЕ фВводТоваровДоступен = Истина Тогда
		Возврат;
	КонецЕсли;
	МенюВесов(Вес);
	ОбновитьНадписьИтого();
КонецПроцедуры

Процедура ОбновитьВес() Экспорт
	Если Не ЭтаФорма.Открыта() Тогда
		Возврат;
	КонецЕсли;
	ЭлементыФормы.тВес.Заголовок = Формат(Вес,"ЧДЦ=3; ЧРД=.; ЧН=0.000");
	Если фВводТоваровДоступен = Истина Тогда
		ИнтерфейсРМ.ВыводНаИнфоДисплей("ПоказатьВес",,,,,Вес);	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


фФормаСкрытияМеню = 0;
ОтборКоличество = ЭлементыФормы.тпТовары.ОтборСтрок.Количество;

ОтборКоличество.ВидСравнения = ВидСравнения.НеРавно;
//ОтборКоличество.Использование = 1;

//ВЕСЫ
Если глПараметрыРМ.ВесыЕсть Тогда
	Весы = глПараметрыРМ.Весы.ПолучитьОбъект();
	Обработка_Весы = Обработка_Весы;
	ИнициализацияТО(Весы, Обработка_Весы, глПараметрыРМ);
КонецЕсли;

Попытка
	AutohotkeyDLL = РаботаСокнами.AHK(,"ГлавнаяФорма");
Исключение
КонецПопытки;
ФормаСкрытияМеню = Обработки.СкрытьМенюИПанели.ПолучитьФорму();
ФормаСкрытияМеню.Открыть();	
