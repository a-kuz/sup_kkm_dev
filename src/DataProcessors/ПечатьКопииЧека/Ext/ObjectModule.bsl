
#Если Клиент Тогда
	
	Перем ПараметрыОкна Экспорт;	// структура, определяет положение и размеры окна
	
	Перем ТипЗначения	Экспорт;   // тип значения
	Перем Длина			Экспорт;   // длина
	Перем Точность		Экспорт;   // точность
	Перем Кратность		Экспорт;   // кратность
	
	Перем ТипПоляВвода	Экспорт;
	Перем ФлагОткрытия	Экспорт;
	Перем ФлагДроби		Экспорт;
	Перем ДробнаяЧасть	Экспорт;
	
	Перем ФормаВвода;
	
	// Обязательная процедура для работы с обработкой через ИнтерфейсРМ.ПолучитьОбъектОбработки()
	// Вызывается каждый раз при обращении к объекту обработки.
	// Здесь надо прописать сброс переменных в начальные значения
	// Реквизиты и табличные части уже сброшены
	Процедура УстановкаНачальныхЗначений() Экспорт
		
	КонецПроцедуры
	
	Процедура ЗаполнитьЧеки() Экспорт
		//Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 700
		//                      |	докЗаказ.Ссылка КАК Заказ,
		//                      |	докЗаказ.НомерЧека КАК НомерЧека,
		//                      |	докЗаказ.Номер КАК НомерЗаказа,
		//                      |	докЗаказ.ИтогоСумма КАК Сумма,
		//                      |	ВЫРАЗИТЬ(докЗаказ.ПодвалЧека КАК СТРОКА(1000)) КАК ПодвалЧека,
		//                      |	ЗаказДопИнф.ДатаЗакрытия КАК Время,
		//                      |	МАКСИМУМ(ПротоколРасчетовПротокол.ВариантОплаты) КАК ТипОплаты
		//                      |ИЗ
		//                      |	РегистрСведений.ЗаказДопИнф КАК ЗаказДопИнф
		//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заказ КАК докЗаказ
		//                      |		ПО ЗаказДопИнф.Заказ = докЗаказ.Ссылка
		//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПротоколРасчетов.Протокол КАК ПротоколРасчетовПротокол
		//                      |		ПО ЗаказДопИнф.ПротоколРасчетов = ПротоколРасчетовПротокол.Ссылка
		//                      |ГДЕ
		//                      |	НЕ докЗаказ.ПометкаУдаления
		//                      |	И ЗаказДопИнф.Статус = &СтатусЗакрыт
		//                      |	И ПротоколРасчетовПротокол.Ссылка.Фирма = &Фирма
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ЗаказДопИнф.ДатаЗакрытия,
		//                      |	докЗаказ.Ссылка,
		//                      |	докЗаказ.НомерЧека,
		//                      |	докЗаказ.Номер,
		//                      |	докЗаказ.ИтогоСумма,
		//                      |	ВЫРАЗИТЬ(докЗаказ.ПодвалЧека КАК СТРОКА(1000))
		//                      |
		//                      |УПОРЯДОЧИТЬ ПО
		//                      |	ЗаказДопИнф.ДатаЗакрытия УБЫВ");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПротоколРасчетовПротокол.Ссылка КАК Заказ,
		               |	ПротоколРасчетовПротокол.Ссылка.НомерЧека КАК НомерЧека,
		               |	ПротоколРасчетовПротокол.Ссылка.Номер КАК НомерЗаказа,
		               |	ПротоколРасчетовПротокол.СуммаФакт КАК Сумма,
		               |	ВЫРАЗИТЬ(ПротоколРасчетовПротокол.Ссылка.ПодвалЧека КАК СТРОКА(1000)) КАК ПодвалЧека,
		               |	ПротоколРасчетовПротокол.Ссылка.Дата КАК Время,
		               |	МАКСИМУМ(ПротоколРасчетовПротокол.ВариантОплаты) КАК ТипОплаты
		               |ИЗ
		               |	Документ.ПротоколРасчетов.Протокол КАК ПротоколРасчетовПротокол
		               |ГДЕ
		               |	ПротоколРасчетовПротокол.Ссылка.Проведен
		               |	И ПротоколРасчетовПротокол.Ссылка.Фирма = &Фирма
		               |	И ПротоколРасчетовПротокол.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНач, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПротоколРасчетовПротокол.Ссылка,
		               |	ПротоколРасчетовПротокол.Ссылка.НомерЧека,
		               |	ПротоколРасчетовПротокол.Ссылка.Номер,
		               |	ПротоколРасчетовПротокол.СуммаФакт,
		               |	ПротоколРасчетовПротокол.Ссылка.Дата,
		               |	ВЫРАЗИТЬ(ПротоколРасчетовПротокол.Ссылка.ПодвалЧека КАК СТРОКА(1000))
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Время УБЫВ";
		
		//Запрос.УстановитьПараметр("СтатусЗакрыт", Перечисления.СтатусыЗаказа.Закрыт);
		//Запрос.УстановитьПараметр("КассоваяСмена", Обработки.ОткрытиЗакрытиеСменыКасса.ПолучитьСменуКассы());
		Запрос.УстановитьПараметр("Фирма", глРабочееМесто.Фирма);
		ДатаКон = ТекущаяДата();
		ДатаНач = ДобавитьДень(ТекущаяДата(),-30);
		КолДней = РегистрыСведений.ДополнительныеСвойства.ЗначениеСвойства(ПараметрыСеанса.ТекущаяИБ, "КоличествоДнейКопииЧеков");
		Если ЗначениеЗаполнено(КолДней) и КолДней <> 0 Тогда
			ДатаНач = ДобавитьДень(ТекущаяДата(),-КолДней);
		КонецЕсли;
		Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
		Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
		Табл = Запрос.Выполнить().Выгрузить();
		Для каждого стр из Табл Цикл
			НомерЗаказа = Стр.НомерЗаказа;
			Попытка
				НомерЗаказа = УбратьВсеБуквы(НомерЗаказа);
				НомерЗаказа = Формат(НомерЗаказа,"ЧГ=0");
			Исключение
			КонецПопытки;
			Стр.НомерЗаказа = НомерЗаказа;
		КонецЦикла;
		Чеки.Загрузить(Табл);
		//Чеки.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецПроцедуры
	
	////////////////////////////////////////////////////////////////////////////////
	// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
	
	// Вызывается из обработчика ПередОткрытием форм этой обработки,
	// выполняет инициализацию рабочего места
	//
	Процедура ДействияПередОткрытиемФормы(ТекущаяФорма, Отказ) Экспорт
		ЗаполнитьЧеки();
		ФормаВвода = ТекущаяФорма;
		
	КонецПроцедуры
	
	////////////////////////////////////////////////////////////////////////////////
	// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
	Процедура ОК() Экспорт
		
		ТипЧека = 0; // по умолчанию чек лояльности
		ВопросОтвет = ИнтерфейсРМ.ВопросПредупреждение("Печать копии чека","Копию какого чека распечатать?","","Фискального","Лояльности","Esc=Отмена");
		Если ВопросОтвет = "Отмена" Тогда
			ФормаВвода.Закрыть();
		ИначеЕсли ВопросОтвет = "Фискального" тогда
		    ТипЧека = 1;
		Иначе
			ТипЧека = 0;
		КонецЕсли;
		//ФормаВвода.Закрыть(Заказ);
		СтрукВозврата = Новый Структура;
		СтрукВозврата.Вставить("Заказ",Заказ);
		СтрукВозврата.Вставить("ТипЧека",ТипЧека);
		
		ФормаВвода.Закрыть(СтрукВозврата);
		
	КонецПроцедуры
	
	
	////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////
	
	ПараметрыОкна = Новый Структура("Центр, Лево, Верх, Ширина, Высота", Истина);
	
#КонецЕсли
