//ирПортативный Перем ирПортативный Экспорт;
//ирПортативный Перем ирОбщий Экспорт;
//ирПортативный Перем ирСервер Экспорт;
//ирПортативный Перем ирКэш Экспорт;
//ирПортативный Перем ирПривилегированный Экспорт;

Процедура КнопкаОКНажатие(Кнопка)
	
	ирКэш.Получить().СинтаксическийКонтрольПередЗаписью = СинтаксическийКонтрольПередЗаписью;
	ирКэш.Получить().ВыполнятьАлгоритмыЧерезВнешниеОбработки = ВыполнятьАлгоритмыЧерезВнешниеОбработки;
	ирКэш.Получить().ПоказыватьВнешниеИсключенияПриВыполненииАлгоритмов = ПоказыватьВнешниеИсключенияПриВыполненииАлгоритмов;
	ирКэш.Получить().ФиксироватьВнешниеИсключенияАлгоритмов = ФиксироватьВнешниеИсключенияАлгоритмов;
	ирКэш.Получить().ФайловыйКэшАлгоритмовДопускаетРедактирование = ФайловыйКэшАлгоритмовДопускаетРедактирование;
	ирКэш.Получить().ПроверитьСтруктуруФайловогоКэша();
	ирКэш.Получить().СохранитьНастройкиАлгоритмов();
	Закрыть();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	КаталогДинамическихВнешнихОбработок = ирКэш.Получить().ПапкаКешаВнешнихОбработокАлгоритмов.ПолноеИмя;
	ФайловыйКэшАлгоритмовДопускаетРедактирование = ирКэш.Получить().ФайловыйКэшАлгоритмовДопускаетРедактирование;
	СинтаксическийКонтрольПередЗаписью = ирКэш.Получить().СинтаксическийКонтрольПередЗаписью;
	ВыполнятьАлгоритмыЧерезВнешниеОбработки = ирКэш.Получить().ВыполнятьАлгоритмыЧерезВнешниеОбработки;
	ПоказыватьВнешниеИсключенияПриВыполненииАлгоритмов = ирКэш.Получить().ПоказыватьВнешниеИсключенияПриВыполненииАлгоритмов;
	ФиксироватьВнешниеИсключенияАлгоритмов = ирКэш.Получить().ФиксироватьВнешниеИсключенияАлгоритмов;
	ФиксироватьВнешниеИсключенияАлгоритмовПриИзменении(ЭлементыФормы.ФиксироватьВнешниеИсключенияАлгоритмов);
	
	Если ирКэш.Получить().Это2iS Тогда
		ЭлементыФормы.ВыполнятьАлгоритмыЧерезВнешниеОбработки.Доступность = Ложь;
		ЭлементыФормы.ФиксироватьВнешниеИсключенияАлгоритмов.Доступность = Ложь;
		ЭлементыФормы.СинтаксическийКонтрольПередЗаписью.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура КаталогДинамическихВнешнихОбработокОткрытие(Элемент, СтандартнаяОбработка)
	
	ЗапуститьПриложение(Элемент.Значение);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОчиститьНажатие(Элемент)
	
	ирКэш.Получить().ОчиститьКешАлгоритмов(Истина);
	
КонецПроцедуры

Процедура ФиксироватьВнешниеИсключенияАлгоритмовПриИзменении(Элемент)
	
	ЭлементыФормы.ПоказыватьВнешниеИсключенияПриВыполненииАлгоритмов.Доступность = Элемент.Значение;
	
КонецПроцедуры

Процедура ВыполнятьАлгоритмыЧерезВнешниеОбработкиПриИзменении(Элемент)

	ЭлементыФормы.ФайловыйКэшАлгоритмовДопускаетРедактирование.Доступность = Элемент.Значение;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ирОбщий.ФормаОбработкаОповещенияЛкс(ЭтаФорма, ИмяСобытия, Параметр, Источник); 
	
КонецПроцедуры

//ирПортативный #Если Клиент Тогда
//ирПортативный Контейнер = Новый Структура();
//ирПортативный Оповестить("ирПолучитьБазовуюФорму", Контейнер);
//ирПортативный Если Не Контейнер.Свойство("ирПортативный", ирПортативный) Тогда
//ирПортативный 	ПолноеИмяФайлаБазовогоМодуля = ВосстановитьЗначение("ирПолноеИмяФайлаОсновногоМодуля");
//ирПортативный 	ирПортативный = ВнешниеОбработки.ПолучитьФорму(ПолноеИмяФайлаБазовогоМодуля);
//ирПортативный КонецЕсли; 
//ирПортативный ирОбщий = ирПортативный.ПолучитьОбщийМодульЛкс("ирОбщий");
//ирПортативный ирКэш = ирПортативный.ПолучитьОбщийМодульЛкс("ирКэш");
//ирПортативный ирСервер = ирПортативный.ПолучитьОбщийМодульЛкс("ирСервер");
//ирПортативный ирПривилегированный = ирПортативный.ПолучитьОбщийМодульЛкс("ирПривилегированный");
//ирПортативный #КонецЕсли

ирОбщий.ИнициализироватьФормуЛкс(ЭтаФорма, "Обработка.ирПлатформа.Форма.НастройкиАлгоритмов");
