//ирПортативный Перем ирПортативный Экспорт;
//ирПортативный Перем ирОбщий Экспорт;
//ирПортативный Перем ирСервер Экспорт;
//ирПортативный Перем ирКэш Экспорт;
//ирПортативный Перем ирПривилегированный Экспорт;

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	НовоеЗначение = Новый Граница(РасширенноеЗначение, РеквизитВидГраницы);
	ирОбщий.ПрименитьИзмененияИЗакрытьФормуЛкс(ЭтаФорма, НовоеЗначение);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ТипЗнч(НачальноеЗначениеВыбора) <> Тип("Граница") Тогда
		НачальноеЗначениеВыбора = Новый Граница(ТекущаяДата(), ВидГраницы.Исключая);
	КонецЕсли; 
	ЭтаФорма.РеквизитЗначение = НачальноеЗначениеВыбора.Значение;
	ЭтаФорма.РасширенноеЗначение = НачальноеЗначениеВыбора.Значение;
	ЭтаФорма.РеквизитВидГраницы = НачальноеЗначениеВыбора.ВидГраницы;

КонецПроцедуры

Процедура ОсновныеДействияФормыИсследовать(Кнопка)
	
	ирОбщий.ИсследоватьЛкс(Новый Граница(РеквизитЗначение, РеквизитВидГраницы));
	
КонецПроцедуры

Процедура РеквизитЗначениеОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ирОбщий.ПолеВвода_ОкончаниеВводаТекстаЛкс(Элемент, Текст, Значение, СтандартнаяОбработка);

КонецПроцедуры

Процедура КлсУниверсальнаяКомандаНажатие(Кнопка) Экспорт 
	
	ирОбщий.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура ОбработчикОжиданияСПараметрамиЛкс() Экспорт 
	
	ирОбщий.ОбработчикОжиданияСПараметрамиЛкс();

КонецПроцедуры

Процедура РеквизитЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ирОбщий.ПолеВводаРасширенногоЗначения_НачалоВыбораЛкс(Элемент, СтандартнаяОбработка, РасширенноеЗначение);
	
КонецПроцедуры

Процедура РеквизитЗначениеПриИзменении(Элемент)
	
	ЭтаФорма.РасширенноеЗначение = РеквизитЗначение;
	
КонецПроцедуры

Процедура РеквизитЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	ЭтаФорма.РеквизитЗначение = Неопределено;
	ЭтаФорма.РасширенноеЗначение = РеквизитЗначение;
	
КонецПроцедуры

//ирПортативный #Если Клиент Тогда
//ирПортативный Контейнер = Новый Структура();
//ирПортативный Оповестить("ирПолучитьБазовуюФорму", Контейнер);
//ирПортативный Если Не Контейнер.Свойство("ирПортативный", ирПортативный) Тогда
//ирПортативный 	ПолноеИмяФайлаБазовогоМодуля = ВосстановитьЗначение("ирПолноеИмяФайлаОсновногоМодуля");
//ирПортативный 	ирПортативный = ВнешниеОбработки.ПолучитьФорму(ПолноеИмяФайлаБазовогоМодуля);
//ирПортативный КонецЕсли; 
//ирПортативный ирОбщий = ирПортативный.ПолучитьОбщийМодульЛкс("ирОбщий");
//ирПортативный ирКэш = ирПортативный.ПолучитьОбщийМодульЛкс("ирКэш");
//ирПортативный ирСервер = ирПортативный.ПолучитьОбщийМодульЛкс("ирСервер");
//ирПортативный ирПривилегированный = ирПортативный.ПолучитьОбщийМодульЛкс("ирПривилегированный");
//ирПортативный #КонецЕсли

ирОбщий.ИнициализироватьФормуЛкс(ЭтаФорма, "Обработка.ирПлатформа.Форма.Граница");
СписокВыбора = ЭлементыФормы.ВидГраницы.СписокВыбора;
СписокВыбора.Добавить(ВидГраницы.Включая, "Включая");
СписокВыбора.Добавить(ВидГраницы.Исключая, "Исключая");

ОписаниеТипов = ирОбщий.ПолучитьОписаниеТиповВсеСсылкиЛкс();
ОписаниеТипов = Новый ОписаниеТипов(ОписаниеТипов, "МоментВремени, Дата, Строка, Число, Булево, УникальныйИдентификатор");
ЭлементыФормы.РеквизитЗначение.ОграничениеТипа = ОписаниеТипов;