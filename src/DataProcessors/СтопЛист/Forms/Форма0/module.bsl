
Перем ФормаПодбораТоваров;	// форма открытая для подбора товаров (меню)
Перем ВысотаТаблицыЗаказа;
Перем ШиринаТаблицыЗаказа;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МОДУЛЯ

// Описание процедуры
//
Процедура ПрочитатьСтопЛист()
	
	ПозицииСтопЛиста = ПолучитьПозицииСтопЛиста();
	
	Для каждого ПозицияСтопа Из ПозицииСтопЛиста Цикл
		СтрокаТовара = ТаблицаСтопЛиста.Строки.Добавить();
		СтрокаТовара.Товар			= ПозицияСтопа.Товар;
		СтрокаТовара.Количество		= ПозицияСтопа.Остаток;
		СтрокаТовара.КоличествоБыло = ПозицияСтопа.Остаток;
	КонецЦикла; 
	
КонецПроцедуры
 
// Описание процедуры
//
Функция ЗаписатьСтопЛист()
	
	СтопЛист = Документы.СтопЛист.СоздатьДокумент();
	СтопЛист.ДополнительныеСвойства.Вставить("Новый");
	СтопЛист.Дата	= ТекущаяДата();
	СтопЛист.Автор	= глПользователь;
	СтопЛист.ИнформационнаяБаза = ПараметрыСеанса.ТекущаяИБ;
	
	Для каждого СтрокаТовара Из ТаблицаСтопЛиста.Строки Цикл
		
		Если НЕ СтрокаТовара.Удалить И СтрокаТовара.Количество = СтрокаТовара.КоличествоБыло Тогда
			Продолжить;
		КонецЕсли; 
		
		СтрокаДок = СтопЛист.Товары.Добавить();
		СтрокаДок.Товар				= СтрокаТовара.Товар;
		
		Если СтрокаТовара.Удалить Тогда
			СтрокаДок.вСтопе	= Ложь;
			СтрокаДок.Остаток	= 0;
		Иначе
			СтрокаДок.вСтопе	= Истина;
			СтрокаДок.Остаток	= СтрокаТовара.Количество;
			СтрокаДок.НовыйТовар= СтрокаТовара.КоличествоБыло = -1
		КонецЕсли; 
		
	КонецЦикла; 
	
	Если СтопЛист.Товары.Количество()>0 Тогда
		Если НЕ ИнтерфейсРМ.ПопыткаДействияСОбъектом(СтопЛист,"Объект.Записать()") Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
	// выгрузим для колцентра, если надо
	ВнешнийЗаказ.ВыгрузитьСтопЛист(СтопЛист.Ссылка);
	
	Модифицирован = Ложь;
	Возврат Истина;
КонецФункции

// Открытие формы подбора товаров
//
Процедура ПодборТоваров(ВыводПредупреждения=Истина, ОсновноеМеню=Неопределено) Экспорт
	
	Если ФормаПодбораТоваров <> Неопределено Тогда
		// меню уже открыто, выбираем другое меню
		ФормаПодбораТоваров.ВыборМеню();
		Возврат;
	КонецЕсли; 
	
	// обновим меню
	ИнтерфейсАдмина.ОбновлениеПризнакаНаличияВПродаже(Истина);
	ТипЦен = Защита.ПолучитьТипЦен(глПараметрыРМ.МестоРеализации);
	
	ОбработкаПодбора = ИнтерфейсРМ.ПолучитьОбъектОбработки("ПодборТоваров", "СтопЛист");
	ОбработкаПодбора.ТипЦен = ТипЦен;
	
	ФормаПодбораТоваров = ОбработкаПодбора.ПолучитьРабочуюФорму(ОсновноеМеню);
	Если ФормаПодбораТоваров = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ФормаПодбораТоваров.ВладелецФормы	= ЭтаФорма;
	ФормаПодбораТоваров.ВызовИзСтопЛиста= Истина;
	ФормаПодбораТоваров.ВерхняяГраницаПоложения	= ЭлементыФормы.ПанельШапка.Высота + 5;
	
	// заполним текущий дозаказ
	Для каждого СтрокаТовара Из ТаблицаСтопЛиста.Строки Цикл
		ФормаПодбораТоваров.Дозаказ.Добавить().Товар = СтрокаТовара.Товар;
	КонецЦикла; 
	
	Если ЗначениеЗаполнено(СтрокаТовара) Тогда
		// чтобы корректно работало удаление надо спозиционировать на последнюю строку
		ЭлементыФормы.ТаблицаСтопЛиста.ТекущаяСтрока = СтрокаТовара;
	КонецЕсли; 
	
	ФормаПодбораТоваров.Открыть();
	
	// видоизменение формы заказа в зависимости от настройки меню
	глПараметрыРМ.Вставить("Окно1СИзменено", Ложь);
	ЭлементФормыТаблицаЗаказа	= ЭлементыФормы.ТаблицаСтопЛиста;
	ВысотаТаблицыЗаказа			= ЭлементФормыТаблицаЗаказа.Высота;
	ШиринаТаблицыЗаказа			= ЭлементФормыТаблицаЗаказа.Ширина;
	
	Если ФормаПодбораТоваров.ПараметрыНастройки.ПоложениеОкна = "Низ" Тогда
		
		Если ФормаПодбораТоваров.ПараметрыНастройки.СвободноеОкно Тогда
			
			ВысотаДоМеню = глПараметрыРМ.ВысотаОкна1С - ФормаПодбораТоваров.ПараметрыОкна.Высота;
			
			Если ФормаПодбораТоваров.ПараметрыОкна.Ширина = глПараметрыРМ.ШиринаОкна1С И ВысотаДоМеню > 570 Тогда
				// уменьшаем окно 1С по высоте
				TraktirFO.SetWndSize( глПараметрыРМ.Окно1С, глПараметрыРМ.ШиринаОкна1С, ВысотаДоМеню );	// установить ширину и высоту окна
				глПараметрыРМ.Окно1СИзменено = Истина;
			Иначе
				// уменьшаем таблицу заказа так, чтобы была видна панель с кнопками
				ЭлементФормыТаблицаЗаказа.Высота	= ЭлементФормыТаблицаЗаказа.Высота - ФормаПодбораТоваров.ПараметрыОкна.Высота;
			КонецЕсли;
		Иначе
			// уменьшаем таблицу заказа так, чтобы таблица заказа не перекрывалась меню
			ЭлементФормыТаблицаЗаказа.Высота = ФормаПодбораТоваров.ПараметрыОкна.Верх - ЭлементФормыТаблицаЗаказа.Верх;
		КонецЕсли; 
		
	ИначеЕсли ФормаПодбораТоваров.ПараметрыНастройки.ПоложениеОкна = "Право" Тогда
		
		Если ФормаПодбораТоваров.ПараметрыНастройки.СвободноеОкно Тогда
			
			ШиринаДоМеню = глПараметрыРМ.ШиринаОкна1С - ФормаПодбораТоваров.ПараметрыОкна.Ширина;
			
			Если ФормаПодбораТоваров.ПараметрыОкна.Высота = глПараметрыРМ.ВысотаОкна1С И ШиринаДоМеню > 800 Тогда
				// уменьшаем окно 1С по ширине
				TraktirFO.SetWndSize( глПараметрыРМ.Окно1С, ШиринаДоМеню, глПараметрыРМ.ВысотаОкна1С );	// установить ширину и высоту окна
				глПараметрыРМ.Окно1СИзменено = Истина;
			Иначе
				// уменьшаем таблицу заказа так, чтобы была видна панель с кнопками
				ЭлементФормыТаблицаЗаказа.Ширина = ЭлементФормыТаблицаЗаказа.Ширина - ФормаПодбораТоваров.ПараметрыОкна.Ширина;
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗакрытииМеню() Экспорт
	
	Если глПараметрыРМ.Окно1СИзменено Тогда
		TraktirFO.SetWndSize( глПараметрыРМ.Окно1С, глПараметрыРМ.ШиринаОкна1С, глПараметрыРМ.ВысотаОкна1С );	// установить ширину и высоту окна
		глПараметрыРМ.Окно1СИзменено = Ложь;
	КонецЕсли; 
	
	ЭлементыФормы.ТаблицаСтопЛиста.Высота = ВысотаТаблицыЗаказа;
	ЭлементыФормы.ТаблицаСтопЛиста.Ширина = ШиринаТаблицыЗаказа;

	ФормаПодбораТоваров = Неопределено;
	
КонецПроцедуры
 
// Описание процедуры
//
// Параметры:
//	Параметр1	- описание параметра
//
Процедура ОбработкаПодбораТовара(ЗначениеВыбора)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.Товары") Тогда
		ВводНовойСтроки(ЗначениеВыбора);
		Оповестить("Дозаказ",ЗначениеВыбора);	// для формы подбора
	КонецЕсли;
	
КонецПроцедуры

// Ввод новой строки
//
Процедура ВводНовойСтроки(ВыбТов)
	
	глОтсечкаПростоя();
	
	Если НЕ ЗначениеЗаполнено(ВыбТов) Тогда
		Возврат;
		
	ИначеЕсли ВыбТов.ПометкаУдаления ИЛИ НЕ ВыбТов.ЕстьВПродаже Тогда
		Текст1="Нет доступа!";
		Текст2="Товара """+ВыбТов.Наименование+""" нет в продаже!";
		ИнтерфейсРМ.ВопросПредупреждение("Ошибка",Текст1,Текст2,"","ОК","");
		Возврат;
		
	КонецЕсли;
	
	СтрокаТовара = ТаблицаСтопЛиста.Строки.Найти(ВыбТов, "Товар");;
	Если СтрокаТовара = Неопределено Тогда
		СтрокаТовара = ТаблицаСтопЛиста.Строки.Добавить();
		СтрокаТовара.Товар			= ВыбТов;
		СтрокаТовара.КоличествоБыло = -1;	// чтобы записалось
		Модифицирован = Истина;
		
	Иначе
		Текст1="Внимание!";
		Текст2="Товар """+ВыбТов.Наименование+""" уже есть в стоп-листе!";
		ИнтерфейсРМ.ВопросПредупреждение("Предупреждение",Текст1,Текст2,"","ОК","");
		
	КонецЕсли;
	
	ЭлементыФормы.ТаблицаСтопЛиста.ТекущаяСтрока = СтрокаТовара;
	
КонецПроцедуры

// Изменение количества в текущей строке 
//
Процедура ИзменитьКоличество(Сдвиг=0) Экспорт
	
	СтрокаЗаказа = ЭлементыФормы.ТаблицаСтопЛиста.ТекущаяСтрока;
	
	Если СтрокаЗаказа = Неопределено Тогда
		Возврат;
	ИначеЕсли СтрокаЗаказа.Уровень() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если Сдвиг=0 Тогда
		Если Цел(СтрокаЗаказа.Товар.КратностьКоличества) <> СтрокаЗаказа.Товар.КратностьКоличества Тогда
			Длина		= 10;
			Точность	= 3;
		Иначе
			Длина		= 6;
			Точность	= 0;
		КонецЕсли;
		
		Колво = ИнтерфейсРМ.ВводЧисла("Остаток", "Число", Длина, Точность, СтрокаЗаказа.Количество, СтрокаЗаказа.Товар.КратностьКоличества);
		
	Иначе
		Колво = Макс(0, СтрокаЗаказа.Количество + Сдвиг);
		
	КонецЕсли; 
	
	Если Колво=СтрокаЗаказа.Количество ИЛИ Колво=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаЗаказа.Количество = Колво;
	Модифицирован = Истина;
	
КонецПроцедуры

Процедура УдалитьСтроку(ДляСовместимости1=Неопределено, ДляСовместимости2=Неопределено) Экспорт

	СтрокаТовара = ЭлементыФормы.ТаблицаСтопЛиста.ТекущаяСтрока;
	
	Если СтрокаТовара = Неопределено Тогда
		Возврат;
	ИначеЕсли СтрокаТовара.Уровень() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТовара.Удалить = НЕ СтрокаТовара.Удалить;
	Модифицирован = Истина;

КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЖИДАНИЯ

// чтобы часики тикали
//
Процедура ОбновитьДатуВремя()
	
	ТекДата = ТекущаяДата();
	ЭлементыФормы.тДата.Заголовок	= Формат(ТекДата,"ДЛФ=Д");
	ЭлементыФормы.тВремя.Заголовок	= Формат(ТекДата,"ДЛФ=В");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	//Стиль = БиблиотекаСтилей[глПараметрыРМ.ИмяСтиля];
	
	ПрочитатьСтопЛист();
	
	// неизменяемые надписи
	ЭлементыФормы.тПользователь.Заголовок = глПользователь.Наименование;
	
	// периодически обновляемые надписи
	ОбновитьДатуВремя();
	ПодключитьОбработчикОжидания("ОбновитьДатуВремя", 1);
	
	Если НЕ ИнтерфейсРМ.ПроверкаПраваДоступа(ПланыВидовХарактеристик.ПраваДоступа.СтопЛист) Тогда
		ЭлементыФормы.КнопкаКоличество		.Доступность = Ложь;
		ЭлементыФормы.КнопкаКоличествоМинус	.Доступность = Ложь;
		ЭлементыФормы.КнопкаКоличествоПлюс	.Доступность = Ложь;
		ЭлементыФормы.КнопкаМеню			.Доступность = Ложь;
		ЭлементыФормы.КнопкаУдалить			.Доступность = Ложь;
		ЭлементыФормы.КнопкаОчистить		.Доступность = Ложь;
		ЭлементыФормы.КнопкаОК				.Доступность = Ложь;
	КонецЕсли; 
	
	Если ВызовИзМеню Тогда
		ЭлементыФормы.КнопкаМеню			.Видимость = Ложь;
	КонецЕсли; 
	
	// вызов должен быть в конце обработчика
	ИнтерфейсРМ.ПриОткрытииОкна(ЭтаФорма);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если глФлагБлокировка И Модифицирован Тогда
		
		Отказ = Истина;
		глФлагБлокировка = Ложь;
		
		БылПользователь = глПользователь;
		глПользователь = Справочники.Сотрудники.ПустаяСсылка();	// чтобы не сработала повторно автоблокировка
		глПользователь = ИнтерфейсРМ.ИдентификацияПользователя();
		
		Пока НЕ( глПользователь=БылПользователь ИЛИ 
				ИнтерфейсРМ.ПроверкаПользователяСмены() И ИнтерфейсРМ.ПроверкаПраваДоступа("ОтменаАвтоблокировкиВЗаказе", Истина, , БылПользователь) ) Цикл
				
			глПользователь = ИнтерфейсРМ.ИдентификацияПользователя();
			
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если Модифицирован Тогда
		
		Текст1="Записать стоп-лист?";
		Текст2="Сохранить изменения в стоп-листе?";
		Ответ = ИнтерфейсРМ.ВопросПредупреждение("Вопрос",Текст1,Текст2,"Да","Нет","Esc=Отмена");
		
		Если Ответ="Да" Тогда
			Если НЕ ЗаписатьСтопЛист() Тогда
				Отказ = Истина;
			КонецЕсли;
			
		ИначеЕсли Ответ = "Нет" Тогда  
			
		Иначе
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнтерфейсРМ.ПриЗакрытииОкна();
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	глОтсечкаПростоя();
	ТекущийЭлемент = ЭлементыФормы.ТаблицаСтопЛиста;
	
	ЭлементыФормы.тЗаголовок.Заголовок = "Стоп-лист " +ТекущийКаталог+ ?(Модифицирован, "*", "");
	ЭлементыФормы.тКоличествоПозиций.Заголовок = Строка(ТаблицаСтопЛиста.Строки.Количество());
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	ОбработкаПодбораТовара( ЗначениеВыбора );
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ТаблицаСтопЛистаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.НомерСтроки.Текст = ТаблицаСтопЛиста.Строки.Индекс(ДанныеСтроки)+1;
	
	Если ДанныеСтроки.Удалить Тогда
		ШрифтСтроки = Новый Шрифт(ОформлениеСтроки.Шрифт,,,,,,Истина);	// зачеркнутый
		ОформлениеСтроки.Шрифт = ШрифтСтроки;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТаблицаСтопЛистаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ЭлементыФормы.КнопкаКоличество.Доступность Тогда
		ИзменитьКоличество();
	КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаМенюНажатие(Элемент)
	
	ПодборТоваров();
	
КонецПроцедуры

Процедура КнопкаКоличествоНажатие(Элемент)
	
	ИзменитьКоличество();
	
КонецПроцедуры

Процедура КнопкаКоличествоПлюсНажатие(Элемент)
	
	ИзменитьКоличество(1);
	
КонецПроцедуры

Процедура КнопкаКоличествоМинусНажатие(Элемент)
	
	ИзменитьКоличество(-1);
	
КонецПроцедуры

Процедура КнопкаУдалитьНажатие(Элемент)
	
	УдалитьСтроку();
	
КонецПроцедуры

Процедура КнопкаОчиститьНажатие(Элемент)
	
	Для каждого СтрокаТовара Из ТаблицаСтопЛиста.Строки Цикл
		СтрокаТовара.Удалить = Истина;
	КонецЦикла; 
	Модифицирован = Истина;
	
КонецПроцедуры

Процедура КнопкаСтрелкаВверхНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.ТаблицаСтопЛиста;
	WshShell.SendKeys("{UP}");
	
КонецПроцедуры

Процедура КнопкаСтрелкаВнизНажатие(Элемент)
	
	ТекущийЭлемент = ЭлементыФормы.ТаблицаСтопЛиста;
	WshShell.SendKeys("{DOWN}");
	
КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	
	Если ЗаписатьСтопЛист() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ

