
Перем ТаблицаЗадания;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МОДУЛЯ

Процедура ОбновитьФайлыСпула()
	
	НайденныеФайлы = НайтиФайлы(КаталогСпула, "*.sbp");
	
	ФайлыСпула.Очистить();
	
	Для каждого Файл Из НайденныеФайлы Цикл
		
		ФайлСпула = ФайлыСпула.Добавить();
		ФайлСпула.Имя	 = Файл.ИмяБезРасширения;
		ФайлСпула.Размер = Файл.Размер();
		ФайлСпула.Дата	 = Файл.ПолучитьВремяИзменения();
		ФайлСпула.ПолноеИмя	 = Файл.ПолноеИмя;
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ОтправитьФайлыСпулаНаПечать(ФоноваяПечать)
	
	Для каждого СтрокаФайловСпула Из ЭлементыФормы.ФайлыСпула.ВыделенныеСтроки Цикл
		
		Сообщить( ?(ФоноваяПечать,"Отправка файла: ", "Печать файла: ") + СтрокаФайловСпула.ПолноеИмя );
		
		Если ИспользоватьСервер Тогда
			ИндексЗадания = DRV.PRNDRV_PrintFile(СерверIPадрес, СерверIPпорт, СтрокаФайловСпула.ПолноеИмя);
		Иначе
			ИндексЗадания = DRV.PRNDRV_PrintFile("", 0, СтрокаФайловСпула.ПолноеИмя);
		КонецЕсли;
		
		Если ФоноваяПечать Тогда
			// цикл ожидания результата должен быть организован в вызывающем модуле
			СтрокаФайловСпула.ИндексЗадания = ИндексЗадания;
			
		Иначе
			ОжиданиеРезультата(ИндексЗадания);
		КонецЕсли;
	
	КонецЦикла;

	Если ФоноваяПечать Тогда
		Для каждого СтрокаФайловСпула Из ЭлементыФормы.ФайлыСпула.ВыделенныеСтроки Цикл
			
			Сообщить("Печать файла: "+СтрокаФайловСпула.ПолноеИмя);
			ОжиданиеРезультата(СтрокаФайловСпула.ИндексЗадания);
			
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Процедура ОжиданиеРезультата(ИндексЗадания)
	
	Результат.Ошибка = Ложь;
	
	// в цикле ждем результат печати
	ПроверкаСтатусаПечати(ИндексЗадания);
	
	Пока НЕ( Результат.Ошибка ИЛИ Результат.ПечатьЗакончена) Цикл
		ПроверкаСтатусаПечати(ИндексЗадания);
	КонецЦикла; 
	
	Если Результат.Ошибка Тогда
		Сообщить("Ошибка "+Результат.КодОшибки +" - "+ Результат.Подробно);
	Иначе
		Сообщить("ОК!");
	КонецЕсли; 
	
	ОбработкаПрерыванияПользователя();
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ОписаниеПрофиля) ТОгда
		Предупреждение("Данная обработка открывается только из справочника торгового оборудования!",5);
		Отказ = Истина;
		Возврат;  		
	КонецЕсли;   
	
	// заполнение списка COM, LPT и Ethernet портов
	Для н=1 По 32 Цикл
		ЭлементыФормы.ПортПодключения.СписокВыбора.Добавить("COM"+н);
	КонецЦикла;
	Для н=1 По 4 Цикл
		ЭлементыФормы.ПортПодключения.СписокВыбора.Добавить("LPT"+н);
	КонецЦикла;
	
	// заполнение списка скоростей обмена
	СписокСкоростей = ЭлементыФормы.Скорость.СписокВыбора;
	СписокСкоростей.Добавить(1200);
	СписокСкоростей.Добавить(2400);
	СписокСкоростей.Добавить(4800);
	СписокСкоростей.Добавить(9600);
	СписокСкоростей.Добавить(19200);
	СписокСкоростей.Добавить(38400);
	СписокСкоростей.Добавить(57600);
	СписокСкоростей.Добавить(115200);
	
	// заполнение списка наборов символов
	Таб = ПолучитьМакет("НаборыСимволов");
	Для НомСтр=1 По Таб.ВысотаТаблицы Цикл
		Значение		= Таб.Область(НомСтр,1).Текст;
		ЭлементыФормы.НаборСимволов.СписокВыбора.Добавить(Значение);
	КонецЦикла;
	
	// заполнение списка кодовых страниц
	Таб = ПолучитьМакет("Кодировки");
	Для НомСтр=1 По Таб.ВысотаТаблицы Цикл
		Значение		=Число(Таб.Область(НомСтр,1).Текст);
		Представление	=СокрП(Таб.Область(НомСтр,2).Текст);
		ЭлементыФормы.Кодировка.СписокВыбора.Добавить(Значение,Представление);
	КонецЦикла;
	
	Если ТО.КодМодели="StarSP298" Тогда
		// выброс подкладного документа
		НаправленияВыбросаПД = ЭлементыФормы.ПДНаправлениеВыброса.СписокВыбора;
		НаправленияВыбросаПД.Добавить(2,"Назад");
		НаправленияВыбросаПД.Добавить(3,"Вперед");
	Иначе
		Страницы = ЭлементыФормы.Панель1.Страницы;
		Страницы.Удалить(Страницы.ПД);
	КонецЕсли;
	
	// параметры подключения
	ЭлементыФормы.ПанельПортПодключения.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
	Если Сетевой Тогда
		ЭлементыФормы.ПанельПортПодключения.ТекущаяСтраница = ЭлементыФормы.ПанельПортПодключения.Страницы.Сетевой;
	Иначе
		ЭлементыФормы.ПанельПортПодключения.ТекущаяСтраница = ЭлементыФормы.ПанельПортПодключения.Страницы.Обычный;
	КонецЕсли; 
	
	// для печати теста
	ТаблицаЗадания = Новый ТаблицаЗначений;
	ТаблицаЗадания.Колонки.Добавить("Данные");
	ТаблицаЗадания.Колонки.Добавить("ТипДанных");
	ТаблицаЗадания.Колонки.Добавить("Параметры");
	
	ТестПереводСтроки = Истина;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЭлементыФормы.СерверIPадрес			.Доступность = ИспользоватьСервер;
	ЭлементыФормы.СерверIPпорт			.Доступность = ИспользоватьСервер;
	ЭлементыФормы.НадписьСерверIPадрес	.Доступность = ИспользоватьСервер;
	ЭлементыФормы.НадписьСерверIPпорт	.Доступность = ИспользоватьСервер;
	ЭлементыФормы.ПроверитьСервер       .Доступность = ИспользоватьСервер;
	
	ЭлементыФормы.НадписьСкорость		.Доступность = Лев(ПортПодключения,3) <> "LPT";
	ЭлементыФормы.Скорость				.Доступность = Лев(ПортПодключения,3) <> "LPT";
	
	ЭлементыФормы.НадписьКолвоСтрокЗадания.Заголовок = " Объектов в задании: " + ТаблицаЗадания.Количество();
	
	Если НЕ ВнешнийСигнал Тогда
		ЭлементыФормы.НадписьТестСигналДлительность.Заголовок = "Длительность:";
	Иначе
		ЭлементыФормы.НадписьТестСигналДлительность.Заголовок = "Кол-во повторов:";
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Сохранение параметров и закрытие формы
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ЗаполнитьЗначенияСвойств(ПараметрыТО,ЭтотОбъект);
	
	Закрыть("ОК");
	
КонецПроцедуры

Процедура ЗапросСостоянияНажатие(Элемент)
	
	ВыполнитьДействие("Подключить");
	
	Если Результат.Ошибка Тогда
		Предупреждение(Результат.Описание + Символы.ВК+Символы.ПС + Результат.Подробно);
	Иначе
		Предупреждение("ОК!",3);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьТестаНажатие(Элемент)
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ТаблицаЗадания"	, ТаблицаЗадания);
	
	// посылка задания на печать
	ВыполнитьДействие("Печать", ПараметрыПечати);
	
	// выводим результат
	Если Результат.Ошибка Тогда
		Предупреждение(Результат.Описание + Символы.ВК+Символы.ПС + Результат.Подробно);
	Иначе
		Предупреждение("ОК!",3);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьЗаданиеНажатие(Элемент)
	
	ТаблицаЗадания.Очистить();
	
КонецПроцедуры

Процедура ТестСтрокаДобавитьНажатие(Элемент)
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ТестСтрока;
	Задание.ТипДанных = "Строка";
	Задание.Параметры = ТестВыравнивание+","+
	?(ТестСтрокаЖирный			,"Жирный"		,"")+","+
	?(ТестСтрокаДвойнаяВысота	,"ДвойнаяВысота","")+","+
	?(ТестСтрокаДвойнаяШирина	,"ДвойнаяШирина","")+","+
	?(ТестСтрокаПодчеркнутый	,"Подчеркнутый"	,"")+","+
	?(ТестПереводСтроки			,"ПереводСтроки","");
	
КонецПроцедуры

Процедура ТестКартинкаДобавитьНажатие(Элемент)
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ТестКартинка;
	Задание.ТипДанных = "Картинка";
	Задание.Параметры = ТестКартинкаВыравнивание + ТестКартинкаРежимПечати;
	
КонецПроцедуры

Процедура ТестСигналДобавитьНажатие(Элемент)
	
	Задание = ТаблицаЗадания.Добавить();
	Задание.Данные    = ТестСигналДлительность;
	Задание.ТипДанных = "Сигнал";
	Задание.Параметры = "";	// не используется
	
КонецПроцедуры

Процедура КаталогСпулаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если РаботаСФайлами.ВыбратьКаталог( Элемент.Значение ) Тогда
		ОбновитьФайлыСпула();
	КонецЕсли; 
	
КонецПроцедуры

Процедура КаталогСпулаПриИзменении(Элемент)
	
	ОбновитьФайлыСпула();
	
КонецПроцедуры

Процедура КоманднаяПанельФайлыСпулаОбновить(Кнопка)
	
	ОбновитьФайлыСпула();
	
КонецПроцедуры

Процедура КоманднаяПанельФайлыСпулаПечать(Кнопка)
	
	ОтправитьФайлыСпулаНаПечать( Ложь );
	
КонецПроцедуры

Процедура КоманднаяПанельФайлыСпулаФоноваяПечать(Кнопка)
	
	ОтправитьФайлыСпулаНаПечать( Истина );
	
КонецПроцедуры

Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.Страницы[ТекущаяСтраница] = Элемент.Страницы.ПечатьСпула Тогда
		ОбновитьФайлыСпула();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТестКартинкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	ФильтрДиалога = "Картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf";
	Диалог = РаботаСФайлами.ПолучитьДиалогВыбораФайлов(,,ФильтрДиалога);
           
	Если Диалог.Выбрать() Тогда
		Элемент.Значение = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

Процедура ТестКартинкаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ПустаяСтрока(Элемент.Значение) Тогда
		Возврат;
	ИначеЕсли РаботаСФайлами.ПроверитьСуществованиеФайла(Элемент.Значение,,Ложь) Тогда
		ЗапуститьПриложение(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьСерверНажатие(Элемент)
	ЗапуститьПриложение("http://" + СерверIPадрес + ":4001/");
КонецПроцедуры

Процедура ТестКартинкаИзБуфераДобавитьНажатие(Элемент)
	// Вставить содержимое обработчика.
	
	Задание = ТаблицаЗадания.Добавить();
    Задание.Данные    = ТестКартинкаНомерКартинкиВБуфуре;
	Задание.ТипДанных = "КартинкаИзБуфера";
 	Задание.Параметры = ТестКартинкаВыравнивание;
КонецПроцедуры
