
Перем ПараметрыТО Экспорт;   // Параметры торгового оборудования.
Перем Результат Экспорт;     // Результат выполнения действия.
Перем DRV Экспорт;           // Драйвер
Перем КодОшибки, ОписаниеОшибки;

#Если Клиент Тогда

// Производит инициализацию торгового оборудования.
//
Процедура Инициализация() Экспорт
	
	Если НЕ ЗагрузитьДрайвер() Тогда
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Ошибка загрузки драйвера!";
		Результат.Подробно	= "Программе не удалось загрузить компоненту Poslib.dll";
		Возврат;
	КонецЕсли; 
	
	ПрочитатьПараметр("IPадрес"		, "");
	ПрочитатьПараметр("IPпорт"		, 9100);
	ПрочитатьПараметр("Логин"		, "");
	ПрочитатьПараметр("Пароль"		, "");
	
КонецПроцедуры

// Загружает драйвер ТО.
//
// Возвращаемое значение:
//  Истина - драйвер загружен, ложь - нет.
//
Функция ЗагрузитьДрайвер()
	
	Если глТорговоеОборудование.Свойство("Poslib_Net",DRV) Тогда
		Возврат Истина;
	КонецЕсли; 
	
	Попытка 
		DRV = Новый COMObject("Poslib.Net");
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	глТорговоеОборудование.Вставить("PosLib_Net", DRV);
	
	Возврат Истина;
КонецФункции

// Выполняет чтение параметра ТО.
//
// Параметры:
//  ИмяПараметра        - имя параметра,
//  ЗначениеПоУмолчанию - значение по умолчанию для данного параметра.
//
// Возвращаемое значение:
//  Значение параметра или значение по умолчанию
//
Процедура ПрочитатьПараметр(ИмяПараметра,ЗначениеПоУмолчанию)
	
	Если НЕ ПараметрыТО.Свойство(ИмяПараметра) Тогда
		ПараметрыТО.Вставить(ИмяПараметра,ЗначениеПоУмолчанию);
	КонецЕсли; 
	
	ЭтотОбъект[ИмяПараметра] = ПараметрыТО[ИмяПараметра];
	
КонецПроцедуры

// Выполняет действие с ТО.
//
// Параметры:
//  Действие - имя действия,
//  ПараметрыДействия - произвольный набор параметров
//
Процедура ВыполнитьДействие(Действие, ПараметрыДействия=Неопределено) Экспорт
	
	Если Действие = "Подключить" Тогда
		// для проверки связи
		Подключить();
		
	ИначеЕсли Действие = "Отключить" Тогда
		Отключить();
		
	ИначеЕсли Действие = "ПослатьСобытие" Тогда
		ПослатьСобытие(ПараметрыДействия.Событие);
		
	ИначеЕсли Действие = "ПросмотрСобытий" Тогда
		// открыть монитор
		ПросмотрСобытий(ПараметрыДействия.Событие);	
		
	Иначе
		Результат.Ошибка	= Истина;
		Результат.Описание	= "Неизвестная команда!";
		Результат.Подробно	= "Команда """+Действие+""" не определена для "+ТО.Наименование;
		
	КонецЕсли;
	
КонецПроцедуры

// Описание процедуры
//
Процедура Подключить() Экспорт
	
	DRV.Open(СокрЛП(IPАдрес),IPПорт);
	
КонецПроцедуры

Процедура Отключить()
	
	DRV.Close();
	
КонецПроцедуры

// Описание процедуры
//
Процедура ПослатьСобытие(Событие)   Экспорт
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("TransactionBlock");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("TransactionDate");
	ЗаписьXML.ЗаписатьТекст(Формат(ТекущаяДата(), "ДЛФ=Д") );
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("TransactionTime");
	ЗаписьXML.ЗаписатьТекст(Формат(ТекущаяДата(), "ДЛФ=В") );
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Для Каждого СтрСобытие ИЗ Событие Цикл
		Если НЕ ЗначениеЗаполнено(СтрСобытие.ИмяПарам) Тогда
			Прервать;
		КонецЕсли;
		
		ЗаписьXML.ЗаписатьНачалоЭлемента(СтрСобытие.ИмяПарам);
		ЗаписьXML.ЗаписатьТекст(СтрСобытие.ЗначПарам);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	СтрокаXML = ЗаписьXML.Закрыть();
	
	DRV.Send(СтрокаXML);
	
КонецПроцедуры		

// Запустить монитор
//
Процедура ПросмотрСобытий(ПараметрыПросмотра)

	ОнЛайн 	= ПараметрыПросмотра.ДатаАрхива = Неопределено;
	
	Если ОнЛайн Тогда
		
		Обработки.МониторВидеонаблюдения.ПолучитьФорму().Открыть();
		
	КонецЕсли;	

КонецПроцедуры

#КонецЕсли

Результат = Новый Структура("Ошибка,Описание,Подробно", Ложь,"","");
