&НаСервере
Перем ФЗ;

&НаСервере
Функция ВыгрузитьНаСервере()

	Состояние = "...";
	Элементы.Закрыть.Доступность = Ложь;
	Элементы.СписокИБ.Доступность = Ложь;
	
	Элементы.Прогресс.Видимость = Истина;
	Если Не ЗначениеЗаполнено(идФЗ) Тогда
		
		Для Каждого ИБ Из СписокИБ Цикл
			Если Иб.Пометка Тогда
				ТаблицаСсылокДляВыгрузки = ВыполнениеРегламентныхЗаданий.ТаблицаСсылокДляВыгрузки(иб.Значение);
				ФЗ=ФоновыеЗадания.Выполнить("ВыполнениеРегламентныхЗаданий.ВыгрузитьПоТаблицеСсылок",Массив(ТаблицаСсылокДляВыгрузки),"ВыгрузитьНаСервере");
				идФЗ = ФЗ.УникальныйИдентификатор;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	ЭтаФорма.ТолькоПросмотр = Истина;
	
	
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
	ВыгрузитьНаСервере();
	ПодключитьОбработчикОжидания("ПоказатьСостояние",1);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСостояние() Экспорт
	ПоказатьСостояниеНаСервере();
	Если идФЗ = "" Тогда
		ОтключитьОбработчикОжидания("ПоказатьСостояние");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоказатьСостояниеНаСервере()
	ЕстьНезавершенные = Ложь;
	//Для Каждого ФЗ Из МассивФЗ Цикл
	//:ФЗ=ФоновыеЗадания.Выполнить("ВыполнениеРегламентныхЗаданий.ВыгрузитьПоТаблицеСсылок",Массив(ТаблицаСсылокДляВыгрузки),"ВыгрузитьНаСервере - " + ИБ.Значение);	
	Если ЗначениеЗаполнено(идФЗ) Тогда
		
		
		ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(идФЗ);
		
		Сообщения = ФЗ.ПолучитьСообщенияПользователю(Истина);
		Если Сообщения.Количество() Тогда
			
			
			ПоследнееСообщение = Сообщения.Получить(Сообщения.ВГраница()).Текст;
			Состояние = ПоследнееСообщение;
		Иначе
			//Состояние = "...";
		КонецЕсли;
		Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
			ЕстьНезавершенные = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//КонецЦикла;
	
	Если Не ЕстьНезавершенные Тогда
		ЭтаФорма.ТолькоПросмотр = Ложь;
		ЭтаФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
		Элементы.Закрыть.Доступность = Истина;
		Элементы.Прогресс.Видимость = Ложь;
		Состояние = "Готово!";
		идФЗ = "";
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	СоставГруппИнформационныхБаз.ИнформационнаяБаза КАК ИнформационнаяБаза
	|ИЗ
	|	РегистрСведений.СоставГруппИнформационныхБаз КАК СоставГруппИнформационныхБаз
	|ГДЕ
	|	СоставГруппИнформационныхБаз.Группа = &Группа");
	
	Запрос.УстановитьПараметр("Группа", Справочники.ГруппыИнформационныхБаз.Рестораны);
	СписокИБ.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0));
	МассивФЗ = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ, Состояние", "ВыгрузитьНаСервере", СостояниеФоновогоЗадания.Активно));
	Если МассивФЗ.количество() Тогда
		идФЗ = МассивФЗ[0].УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура кЗакрыть(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(идФЗ) Тогда
		Выгрузить("");	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(идФЗ) Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры



