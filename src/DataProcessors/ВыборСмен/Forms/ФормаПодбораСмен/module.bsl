
Перем ПерваяСмена;
Перем ПоследняяСмена;

Процедура ПриОткрытии()
	Если ЗначениеЗаполнено(МассивСмен) Тогда
		МестоРеализации = МассивСмен[0].Значение.МестоРеализации;
	Иначе
		МестоРеализации = Константы.ОсновноеМестоРеализации.Получить();
		Если МестоРеализации.Пустая() Тогда
			МестоРеализации = Справочники.МестаРеализации.Мяснов;
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьСписокВсехСмен();
	ПометитьВыбранныеСмены();
	СформироватьСтрокуПериода();
КонецПроцедуры

Процедура ЗаполнитьСписокВсехСмен(ДатаС='00010101',ДатаПо='21000101');
	Если НЕ ЗначениеЗаполнено(ДатаПО) Тогда
		ДатаПО = '21000101';
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЛОЖЬ КАК Пометка,
	               |	ОткрытиеСмены.Номер КАК Номер,
	               |	ОткрытиеСмены.Дата КАК Открыта,
	               |	ЗакрытиеСмены.Дата КАК Закрыта,
	               |	ОткрытиеСмены.Ссылка
	               |ИЗ
	               |	Документ.ОткрытиеСмены КАК ОткрытиеСмены
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеСмены КАК ЗакрытиеСмены
	               |		ПО ОткрытиеСмены.Ссылка = ЗакрытиеСмены.Смена
	               |ГДЕ
	               |	ОткрытиеСмены.ПометкаУдаления = ЛОЖЬ
	               |	И ОткрытиеСмены.МестоРеализации = &МестоРеализации
	               |	И ОткрытиеСмены.Дата > &ДатаС
	               |	И ОткрытиеСмены.Дата < &ДатаПо
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Открыта";
	Запрос.УстановитьПараметр("МестоРеализации", МестоРеализации);
	Запрос.УстановитьПараметр("ДатаС",ДатаС);
	Запрос.УстановитьПараметр("ДатаПо",ДатаПо);
	ЭлементыФормы.ВсеСмены.Значение = Запрос.Выполнить().Выгрузить();
	ПерваяСмена = Неопределено;
	ПоследняяСмена = Неопределено;
	СформироватьСтрокуПериода();
КонецПроцедуры

Процедура ПометитьВыбранныеСмены()
	Для Каждого Смена Из МассивСмен Цикл
		СтрокаСмены = ВсеСмены.Найти(Смена.Значение.Номер,"Номер");
		Если СтрокаСмены<>Неопределено Тогда
			СтрокаСмены.Пометка = Истина;
		КонецЕсли;
	КонецЦикла ;
	ЭлементыФормы.ВсеСмены.Значение = ВсеСмены.ВыгрузитьКолонку("Пометка");
	
	Если ЗначениеЗаполнено(МассивСмен) Тогда
		ПерваяСмена = ЭлементыФормы.ВсеСмены.Значение.Найти(МассивСмен[0].Значение.Номер,"Номер");
		Если МассивСмен.Количество()>1 Тогда
			ПоследняяСмена = ЭлементыФормы.ВсеСмены.Значение.Найти(МассивСмен[МассивСмен.Количество()-1].Значение.Номер,"Номер");
			ЭлементыФормы.ВсеСмены.ТекущаяСтрока = ПоследняяСмена;
		Иначе
			ПоследняяСмена = Неопределено;
			ЭлементыФормы.ВсеСмены.ТекущаяСтрока = ПерваяСмена;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура МестоРеализацииПриИзменении(Элемент)
	ЗаполнитьСписокВсехСмен(ДатаС,ДатаПо);
	ПерваяСмена = Неопределено;
	ПоследняяСмена = Неопределено;
	СформироватьСтрокуПериода();
КонецПроцедуры

Процедура ВсеСменыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;     
	
	Если ПерваяСмена = Неопределено Тогда
		ПерваяСмена = ВыбраннаяСтрока;
		ВыбраннаяСтрока.Пометка = Истина;
	ИначеЕсли ПоследняяСмена = Неопределено И ВыбраннаяСтрока = ПерваяСмена Тогда
		ПерваяСмена = Неопределено;
		ВыбраннаяСтрока.Пометка = Ложь;
	ИначеЕсли ПоследняяСмена = Неопределено И ВыбраннаяСтрока.Открыта	< ПерваяСмена.Открыта Тогда
		ПоследняяСмена = ПерваяСмена;
		ПерваяСмена = ВыбраннаяСтрока;
		ВыбраннаяСтрока.Пометка = Истина;
	Иначе	
		
		ВыбраннаяСтрока.Пометка = Истина;
		
		Если ПоследняяСмена = Неопределено Тогда
			ПоследняяСмена = ВыбраннаяСтрока;
		ИначеЕсли  ВыбраннаяСтрока.Открыта < ПерваяСмена.Открыта Тогда
			ПерваяСмена = ВыбраннаяСтрока;
		Иначе
			ПоследняяСмена = ВыбраннаяСтрока;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПоследняяСмена = Неопределено Тогда
		Для Каждого Строка из ВсеСмены Цикл
			Если Строка.Открыта >= ПерваяСмена.Открыта И Строка.Открыта <= ПоследняяСмена.Открыта Тогда
				Строка.Пометка = Истина;
			Иначе
				Строка.Пометка = Ложь;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	Если ПерваяСмена = ПоследняяСмена Тогда
		ПоследняяСмена = Неопределено;
	КонецЕсли;	
	СформироватьСтрокуПериода();
КонецПроцедуры

Процедура ОчиститьНажатие(Элемент)
	ЗаполнитьСписокВсехСмен();
	ПерваяСмена = Неопределено;
	ПоследняяСмена = Неопределено;
	СформироватьСтрокуПериода();
КонецПроцедуры

Процедура ВсеСменыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Пометка Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(220, 240, 255);
		
		//Если ДанныеСтроки = ПерваяСмена И ПоследняяСмена = Неопределено Тогда
		//	ОформлениеСтроки.Ячейки.Картинка.ЗначениеКартинки = БиблиотекаКартинок.Галка;
		//ИначеЕсли ДанныеСтроки = ПерваяСмена Тогда	
		//	ОформлениеСтроки.Ячейки.Картинка.ЗначениеКартинки = БиблиотекаКартинок.СтрелкаВверх;
		//ИначеЕсли ДанныеСтроки = ПоследняяСмена Тогда
		//	ОформлениеСтроки.Ячейки.Картинка.ЗначениеКартинки = БиблиотекаКартинок.СтрелкаВниз;
		//Иначе
		//	ОформлениеСтроки.Ячейки.Картинка.ЗначениеКартинки = БиблиотекаКартинок.Галка;
		//КонецЕсли;	
		//Иначе
		//	ОформлениеСтроки.Ячейки.Картинка.ЗначениеКартинки = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСтрокуПериода()
	Если ПерваяСмена = Неопределено Тогда
		Период = "Выберите с какой по какую смену формировать отчет...";
	ИначеЕсли ПоследняяСмена = Неопределено Тогда
		Период = "Смена №" + ПерваяСмена.Ссылка.Номер + " от " + ПерваяСмена.Ссылка.Дата;
	Иначе 
		Период = "Смена №" + ПерваяСмена.Ссылка.Номер + " от " + ПерваяСмена.Ссылка.Дата + " - " + Символы.ПС + "Смена №" + ПоследняяСмена.Ссылка.Номер + " от " + ПоследняяСмена.Ссылка.Дата;
	КонецЕсли;	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	Закрыть();
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	Отбор = Новый Структура;
	Отбор.Вставить("Пометка", Истина);
	
	СписокСПометкой = ВсеСмены.НайтиСтроки(Отбор);
	Если СписокСПометкой.Количество() > 0 Тогда
		СписокСмен = Новый СписокЗначений;
		Для Каждого Строка Из СписокСПометкой Цикл
			СписокСмен.Добавить(Строка.Ссылка);	
		КонецЦикла;
	Иначе
		Предупреждение("Выберите период...");
		Возврат;
	КонецЕсли;	
	
	ПредставлениеСмен = Период;
	ДатаС = СписокСПометкой[0].Открыта;
	ДатаПо = СписокСПометкой[СписокСПометкой.Количество()-1].Закрыта;
	Если НЕ ЗначениеЗаполнено(ДатаПо)Тогда
		ДатаПо = ТекущаяДата();
	КонецЕсли; 
	
	СтруктураВозврата = Новый Структура("МассивСмен, ПредставлениеСмен");
	
	СтруктураВозврата.Вставить("МассивСмен", СписокСмен);
	СтруктураВозврата.Вставить("ПредставлениеСмен", ПредставлениеСмен);
	СтруктураВозврата.Вставить("ДатаС", ДатаС);
	СтруктураВозврата.Вставить("ДатаПо", ДатаПо);
	СтруктураВозврата.Вставить("МестоРеализации", МестоРеализации);
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

Процедура ИнтервалНажатие(Элемент)
	Если ОбработкаПериода(ДатаС, ДатаПо) Тогда
		ЗаполнитьСписокВсехСмен(ДатаС,ДатаПо)
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры

Функция ОбработкаПериода(ДатаС, ДатаПО)
	НП = Новый НастройкаПериода;
	НП.ВариантНастройки = ВариантНастройкиПериода.Период;
	
	НП.УстановитьПериод(НачалоДня(ДатаС), ?(ДатаПо = '00010101', ДатаПо, КонецДня(ДатаПо)));

	Если НП.Редактировать() Тогда

		ДатаС = НП.ПолучитьДатуНачала();
		ДатаПо = НП.ПолучитьДатуОкончания();
        ПредставлениеПериода = ПредставлениеПериода(ДатаС,ДатаПо);
		Возврат Истина;
	КонецЕсли;

	Возврат Ложь;
КонецФункции




ПерваяСмена = Неопределено;
ПоследняяСмена = Неопределено;


	